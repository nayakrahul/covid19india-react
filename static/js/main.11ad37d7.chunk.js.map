{"version":3,"sources":["components/languageswitcher.js","components/navbar.js","utils/ScrollToTop.js","App.js","i18n/index.js","serviceWorker.js","index.js","constants.js","utils/commonfunctions.js"],"names":["React","memo","useLocalStorage","language","setLanguage","i18n","useTranslation","useUpdateEffect","changeLanguage","className","as","locales","Modal","List","Object","entries","map","key","Item","onClick","Expand","expand","pages","setExpand","darkMode","expandElement","useRef","t","useEffectOnce","anime","targets","current","translateX","easing","duration","ref","onMouseLeave","page","i","showInNavbar","to","pageLink","navLinkProps","animationDelayForNavbar","displayName","window","innerWidth","style","animationDelay","toggle","value","color","Navbar","useState","useLockBodyScroll","windowSize","useWindowSize","useSpring","opacity","spring","set","stop","div","onMouseEnter","width","Fragment","activeNavIcon","path","location","pathname","stroke","ScrollToTop","useLocation","useEffect","scrollTo","Home","lazy","FAQ","Demographics","State","Essentials","schemaMarkup","name","alternateName","url","image","App","view","useDarkMode","Helmet","type","JSON","stringify","render","index","exact","match","params","stateCode","use","Backend","LanguageDetector","initReactI18next","init","debug","isDevelopmentOrTest","keySeparator","returnEmptyString","backend","loadPath","addPath","saveMissing","interpolation","escapeValue","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","fallback","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","PRIMARY_STATISTICS","MAP_STATISTICS","TIMESERIES_STATISTICS","D3_TRANSITION_DURATION","MINIGRAPH_LOOKBACK_DAYS","NUM_BARS_STATEPAGE","UNKNOWN_DISTRICT_KEY","INDIA_ISO_SUFFIX","COLORS","confirmed","active","recovered","deceased","tested","TIMESERIES_OPTIONS","BEGINNING","MONTH","TWO_WEEKS","MAP_OPTIONS","TOTAL","PER_MILLION","HOTSPOTS","MAP_VIEWS","STATES","DISTRICTS","MAP_TYPES","COUNTRY","STATE","ZONE_COLORS","Red","Orange","Green","MAPS_DIR","MAP_META","AP","geoDataFile","mapType","graphObjectDistricts","AR","AS","BR","CT","GA","GJ","HR","HP","JK","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","LA","LD","PY","TT","graphObjectStates","INDIA_ASPECT_RATIO","MAP_LEGEND_HEIGHT","STATE_NAMES","UN","stateCodes","stateCodesMap","keys","push","code","STATE_CODES","STATE_CODES_ARRAY","STATE_POPULATIONS","STATE_POPULATIONS_MIL","reduce","res","RAW_DATA_PARTITIONS","v1","start","Date","end","v2","v3","v4","v5","LOCALE_SHORTHANDS","english","hindi","hi","telugu","te","kannada","gujarati","gu","marathi","tamil","ta","bengali","bn","punjabi","malayalam","odiya","ESSENTIALS_CATEGORIES","Ambulance","Fundraisers","Police","Transportation","Other","getIndiaDate","utcToZonedTime","getIndiaYesterdayISO","formatISO","subDays","representation","formatLastUpdated","unformattedDate","formatDistance","locale","parseIndiaDate","isoDate","formatDate","formatString","date","format","formatNumber","numberFormatter","Intl","NumberFormat","maximumFractionDigits","isNaN","capitalize","s","charAt","toUpperCase","slice","capitalizeAll","str","toLowerCase","split","length","join","abbreviate","replace","getStatistic","data","statistic","count","normalizer","migrated","fetcher","axios"],"mappings":"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","file":"static/js/main.11ad37d7.chunk.js","sourcesContent":["import locales from '../i18n/locales.json';\n\nimport Button from '@primer/components/lib/Button';\nimport SelectMenu from '@primer/components/lib/SelectMenu';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage, useUpdateEffect} from 'react-use';\n\nfunction LanguageSwitcher() {\n  const [language, setLanguage] = useLocalStorage('i18nextLng', 'english');\n  const {i18n} = useTranslation();\n\n  useUpdateEffect(() => {\n    if (i18n) i18n.changeLanguage(language);\n  }, [i18n, language]);\n\n  return (\n    <div className=\"LanguageSwitcher\">\n      <SelectMenu>\n        <Button as=\"summary\" className=\"button\">\n          {locales[language]}\n        </Button>\n        <SelectMenu.Modal className=\"select-menu-modal\">\n          <SelectMenu.List className=\"select-menu-list\">\n            {Object.entries(locales).map(([key, language]) => (\n              <SelectMenu.Item\n                key={key}\n                className=\"select-menu-item\"\n                onClick={() => {\n                  setLanguage(key);\n                }}\n              >\n                {language}\n              </SelectMenu.Item>\n            ))}\n          </SelectMenu.List>\n        </SelectMenu.Modal>\n      </SelectMenu>\n    </div>\n  );\n}\n\nexport default React.memo(LanguageSwitcher);\n","import LanguageSwitcher from './languageswitcher';\n\nimport anime from 'animejs';\nimport React, {useState, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useSpring, animated} from 'react-spring';\nimport {useEffectOnce, useLockBodyScroll, useWindowSize} from 'react-use';\n\nfunction Navbar({pages, darkMode}) {\n  const {t} = useTranslation();\n\n  const [expand, setExpand] = useState(false);\n  useLockBodyScroll(expand);\n  const windowSize = useWindowSize();\n\n  const [spring, set, stop] = useSpring(() => ({opacity: 0}));\n  set({opacity: 1});\n  stop();\n\n  return (\n    <animated.div className=\"Navbar\" style={spring}>\n      <LanguageSwitcher />\n\n      {window.innerWidth > 769 && (\n        <div\n          className=\"navbar-left\"\n          onClick={() => {\n            darkMode.toggle();\n          }}\n        >\n          {darkMode.value ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}\n        </div>\n      )}\n\n      <div className=\"navbar-middle\">\n        <Link\n          to=\"/\"\n          onClick={() => {\n            setExpand(false);\n          }}\n        >\n          Covid19<span>India</span>\n        </Link>\n      </div>\n\n      <div\n        className=\"navbar-right\"\n        onClick={() => {\n          setExpand(!expand);\n        }}\n        onMouseEnter={() => {\n          if (window.innerWidth > 769) {\n            setExpand(true);\n          }\n        }}\n      >\n        {windowSize.width < 769 && (\n          <span>{expand ? t('Close') : t('Menu')}</span>\n        )}\n        {windowSize.width > 769 && (\n          <React.Fragment>\n            <span>\n              <Link to=\"/\">\n                <Icon.Home {...activeNavIcon('/')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/demographics\">\n                <Icon.Users {...activeNavIcon('/demographics')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/essentials\">\n                <Icon.Package {...activeNavIcon('/essentials')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/about\">\n                <Icon.HelpCircle {...activeNavIcon('/about')} />\n              </Link>\n            </span>\n          </React.Fragment>\n        )}\n      </div>\n\n      {expand && (\n        <Expand\n          expand={expand}\n          pages={pages}\n          setExpand={setExpand}\n          darkMode={darkMode}\n        />\n      )}\n    </animated.div>\n  );\n}\n\nfunction Expand({expand, pages, setExpand, darkMode}) {\n  const expandElement = useRef(null);\n  const {t} = useTranslation();\n\n  useEffectOnce(() => {\n    anime({\n      targets: expandElement.current,\n      translateX: '10.5rem',\n      easing: 'easeOutExpo',\n      duration: 250,\n    });\n  });\n\n  return (\n    <div\n      className=\"expand\"\n      ref={expandElement}\n      onMouseLeave={() => {\n        setExpand(false);\n      }}\n    >\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              onClick={() => {\n                setExpand(false);\n              }}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {t(page.displayName)}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n\n      {window.innerWidth < 768 && (\n        <div\n          className=\"fadeInUp\"\n          style={{animationDelay: '0.9s'}}\n          onClick={() => {\n            darkMode.toggle();\n          }}\n        >\n          <div>\n            {darkMode.value ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}\n          </div>\n        </div>\n      )}\n\n      <div className=\"expand-bottom fadeInUp\" style={{animationDelay: '1s'}}>\n        <h5>{t('A crowdsourced initiative.')}</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n  style: {\n    animationDelay: `${animationDelay}s`,\n  },\n});\n\nconst activeNavIcon = (path) => ({\n  style: {\n    stroke: window.location.pathname === path ? '#4c75f2' : '',\n  },\n});\n","import {useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const {pathname} = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import './App.scss';\nimport Navbar from './components/navbar';\nimport ScrollToTop from './utils/ScrollToTop';\n\nimport React, {lazy} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport useDarkMode from 'use-dark-mode';\n\nconst Home = lazy(() =>\n  import('./components/home' /* webpackChunkName: \"Home\" */)\n);\nconst FAQ = lazy(() =>\n  import('./components/faq' /* webpackChunkName: \"About\" */)\n);\nconst Demographics = lazy(() =>\n  import('./components/demographics' /* webpackChunkName: \"Demographics\" */)\n);\nconst State = lazy(() =>\n  import('./components/state' /* webpackChunkName: \"State\" */)\n);\nconst Essentials = lazy(() =>\n  import('./components/essentials' /* webpackChunkName: \"Essentials\" */)\n);\n\nconst schemaMarkup = {\n  '@context': 'http://schema.org/',\n  '@type': 'NGO',\n  name: 'Coronavirus Outbreak in India: Latest Map and Case Count',\n  alternateName: 'COVID-19 Tracker',\n  url: 'https://www.covid19india.org/',\n  image: 'https://www.covid19india.org/thumbnail.png',\n};\n\nfunction App() {\n  const {t} = useTranslation();\n\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: 'Home',\n      animationDelayForNavbar: 0.2,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/demographics',\n      view: Demographics,\n      displayName: t('Demographics'),\n      animationDelayForNavbar: 0.3,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/essentials',\n      view: Essentials,\n      displayName: t('Essentials'),\n      animationDelayForNavbar: 0.5,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/about',\n      view: FAQ,\n      displayName: t('About'),\n      animationDelayForNavbar: 0.6,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/state/:stateCode',\n      view: State,\n      displayName: t('State'),\n      animationDelayForNavbar: 0.7,\n      showInNavbar: false,\n    },\n  ];\n\n  const darkMode = useDarkMode(false);\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaMarkup)}\n        </script>\n      </Helmet>\n\n      <Router>\n        <ScrollToTop />\n        <Route\n          render={({location}) => (\n            <React.Fragment>\n              <Navbar pages={pages} {...{darkMode}} />\n              <Switch location={location}>\n                {pages.map((page, index) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      render={({match}) => (\n                        <page.view key={match.params.stateCode || index} />\n                      )}\n                      key={index}\n                    />\n                  );\n                })}\n                <Redirect to=\"/\" />\n              </Switch>\n            </React.Fragment>\n          )}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import {isDevelopmentOrTest} from '../utils/commonfunctions';\n\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport {initReactI18next} from 'react-i18next';\n\nconst DEBUG = false;\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    debug: isDevelopmentOrTest() && DEBUG,\n    keySeparator: false,\n    returnEmptyString: false,\n    backend: {\n      loadPath: 'https://api.covid19india.org/locales/locale_{{lng}}.json',\n      addPath: 'http://localhost:9999/',\n    },\n    saveMissing: isDevelopmentOrTest() && DEBUG,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import './wdyr';\nimport App from './App';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\nimport React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <Suspense fallback={''}>\n    <App />\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import {hi, te, gu, ta, bn} from 'date-fns/locale/';\n\nexport const PRIMARY_STATISTICS = [\n  'confirmed',\n  'active',\n  'recovered',\n  'deceased',\n];\n\nexport const MAP_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\n\nexport const TIMESERIES_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\n\nexport const D3_TRANSITION_DURATION = 300;\n\nexport const MINIGRAPH_LOOKBACK_DAYS = 20;\n\nexport const NUM_BARS_STATEPAGE = 5;\n\nexport const UNKNOWN_DISTRICT_KEY = 'Unknown';\n\nexport const INDIA_ISO_SUFFIX = 'T00:00:00+05:30';\n\nexport const COLORS = {\n  confirmed: '#ff073a',\n  active: '#007bff',\n  recovered: '#28a745',\n  deceased: '#6c757d',\n  tested: '#4b1eaa',\n};\n\nexport const TIMESERIES_OPTIONS = {\n  BEGINNING: 'Beginning',\n  MONTH: '1 Month',\n  TWO_WEEKS: '2 Weeks',\n};\n\nexport const MAP_OPTIONS = {\n  TOTAL: 'Total',\n  PER_MILLION: 'Per million',\n  HOTSPOTS: 'Hotspots',\n  // ZONES: 'Zones',\n};\n\nexport const MAP_VIEWS = {\n  STATES: 0,\n  DISTRICTS: 1,\n};\n\nexport const MAP_TYPES = {\n  COUNTRY: 0,\n  STATE: 1,\n};\n\nexport const ZONE_COLORS = {\n  Red: '#d73027',\n  Orange: '#fee08b',\n  Green: '#66bd63',\n};\n\nexport const MAPS_DIR =\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/maps';\n\nexport const MAP_META = {\n  AP: {\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'andhrapradesh_district',\n  },\n  AR: {\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'arunachalpradesh_district',\n  },\n  AS: {\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'assam_district',\n  },\n  BR: {\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'bihar_district',\n  },\n  CT: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'chhattisgarh_district',\n  },\n  GA: {\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'goa_district',\n  },\n  GJ: {\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'gujarat_district',\n  },\n  HR: {\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'haryana_district',\n  },\n  HP: {\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'himachalpradesh_district',\n  },\n  JK: {\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'jammukashmir_district',\n  },\n  JH: {\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'jharkhand_district',\n  },\n  KA: {\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'karnataka_district',\n  },\n  KL: {\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'kerala_district',\n  },\n  MP: {\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'madhyapradesh_district',\n  },\n  MH: {\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'maharashtra_district',\n  },\n  MN: {\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'manipur_district',\n  },\n  ML: {\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'meghalaya_district',\n  },\n  MZ: {\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'mizoram_district',\n  },\n  NL: {\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'nagaland_district',\n  },\n  OR: {\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'odisha_district',\n  },\n  PB: {\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'punjab_district',\n  },\n  RJ: {\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'rajasthan_district',\n  },\n  SK: {\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'sikkim_district',\n  },\n  TN: {\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'tamilnadu_district',\n  },\n  TG: {\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'telangana_district',\n  },\n  TR: {\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'tripura_district',\n  },\n  UT: {\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'uttarakhand_district',\n  },\n  UP: {\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'uttarpradesh_district',\n  },\n  WB: {\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'westbengal_district',\n  },\n  AN: {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'andamannicobarislands_district',\n  },\n  CH: {\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'chandigarh_district',\n  },\n  DN: {\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'dnh-and-dd',\n  },\n  DL: {\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'delhi_district',\n  },\n  LA: {\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'ladakh_district',\n  },\n  LD: {\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'lakshadweep_district',\n  },\n  PY: {\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectDistricts: 'puducherry_district',\n  },\n  TT: {\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectStates: 'india-states',\n    graphObjectDistricts: 'india-districts-2019-734',\n  },\n};\n\nexport const INDIA_ASPECT_RATIO = 0.885;\nexport const MAP_LEGEND_HEIGHT = 50;\n\nexport const STATE_NAMES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n  TT: 'Total',\n  UN: 'Unassigned',\n};\n\nconst stateCodes = [];\nconst stateCodesMap = {};\nObject.keys(STATE_NAMES).map((key, index) => {\n  stateCodesMap[STATE_NAMES[key]] = key;\n  stateCodes.push({code: key, name: STATE_NAMES[key]});\n  return null;\n});\nexport const STATE_CODES = stateCodesMap;\nexport const STATE_CODES_ARRAY = stateCodes;\n\n// Source: Projected Populations (2019)\n// National Commission on Population, \"Population Projections for India and\n// States (2011-2036)\", Table-8 (p43), November 2019\n// https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\nexport const STATE_POPULATIONS = {\n  AP: 52221000,\n  AR: 1504000,\n  AS: 34293000,\n  BR: 119520000,\n  CT: 28724000,\n  GA: 1540000,\n  GJ: 67936000,\n  HR: 28672000,\n  HP: 7300000,\n  JH: 37403000,\n  KA: 65798000,\n  KL: 35125000,\n  MP: 82232000,\n  MH: 122153000,\n  MN: 3103000,\n  ML: 3224000,\n  MZ: 1192000,\n  NL: 2150000,\n  OR: 43671000,\n  PB: 29859000,\n  RJ: 77264000,\n  SK: 664000,\n  TN: 75695000,\n  TG: 37220000,\n  TR: 3992000,\n  UP: 224979000,\n  UT: 11141000,\n  WB: 96906000,\n  AN: 397000,\n  CH: 1179000,\n  DN: 959000,\n  DL: 19814000,\n  JK: 13203000,\n  LA: 293000,\n  LD: 68000,\n  PY: 1504000,\n  TT: 1332900000,\n};\n\nexport const STATE_POPULATIONS_MIL = Object.keys(STATE_POPULATIONS).reduce(\n  (res, stateCode) => {\n    res[stateCode] = 1e-6 * STATE_POPULATIONS[stateCode];\n    return res;\n  },\n  {}\n);\n\nexport const RAW_DATA_PARTITIONS = {\n  v1: {\n    start: new Date(2020, 0, 1),\n    end: new Date(2020, 3, 19),\n  },\n  v2: {\n    start: new Date(2020, 3, 20),\n    end: new Date(2020, 3, 26),\n  },\n  v3: {\n    start: new Date(2020, 3, 27),\n    end: new Date(2020, 4, 9),\n  },\n  v4: {\n    start: new Date(2020, 4, 10),\n    end: new Date(2020, 4, 23),\n  },\n  v5: {\n    start: new Date(2020, 4, 24),\n    end: new Date(),\n  },\n};\n\nexport const LOCALE_SHORTHANDS = {\n  english: null,\n  hindi: hi,\n  telugu: te,\n  kannada: null,\n  gujarati: gu,\n  marathi: null,\n  tamil: ta,\n  bengali: bn,\n  punjabi: null,\n  malayalam: null,\n  odiya: null,\n};\n\nexport const ESSENTIALS_CATEGORIES = {\n  'Accommodation and Shelter Homes': 'homes',\n  Ambulance: 'ambulance',\n  'Community Kitchen': 'kitchen',\n  'CoVID-19 Testing Lab': 'lab',\n  'Delivery [Vegetables, Fruits, Groceries, Medicines, etc.]': 'delivery',\n  'Fire Brigade': 'fire',\n  'Free Food': 'food',\n  Fundraisers: 'fund',\n  'Government Helpline': 'helpline',\n  'Hospitals and Centers': 'hospital',\n  'Mental well being and Emotional Support': 'well-being',\n  Police: 'police',\n  'Senior Citizen Support': 'seniors',\n  Transportation: 'transport',\n  'Quarantine Facility': 'quarantine',\n  Other: 'other',\n  'Helpline for Cyclone Amphan': 'cyclone amphan',\n};\n\nexport const INITIAL_DATA = {\n  TT: {\n    total: {\n      confirmed: 0,\n      recovered: 0,\n      deceased: 0,\n    },\n    delta: {\n      confirmed: 0,\n      recovered: 0,\n      deceased: 0,\n    },\n    last_updated: null,\n    notes: '',\n  },\n};\n","import {INDIA_ISO_SUFFIX, LOCALE_SHORTHANDS} from '../constants';\n\nimport axios from 'axios';\nimport {format, formatDistance, formatISO, subDays} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\nimport i18n from 'i18next';\n\nexport const isDevelopmentOrTest = () => {\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\n    return true;\n  return false;\n};\n\nexport const getIndiaDate = () => {\n  return utcToZonedTime(new Date(), 'Asia/Kolkata');\n};\n\nexport const getIndiaYesterdayISO = () => {\n  return formatISO(subDays(getIndiaDate(), 1), {representation: 'date'});\n};\n\nexport const formatLastUpdated = (unformattedDate) => {\n  return formatDistance(new Date(unformattedDate), new Date(), {\n    locale: LOCALE_SHORTHANDS[i18n.language],\n  });\n};\n\nexport const parseIndiaDate = (isoDate) => {\n  return new Date(isoDate + INDIA_ISO_SUFFIX);\n};\n\nexport const formatDate = (unformattedDate, formatString) => {\n  if (\n    typeof unformattedDate === 'string' &&\n    unformattedDate.match(/^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g)\n  )\n    unformattedDate += INDIA_ISO_SUFFIX;\n  const date = utcToZonedTime(new Date(unformattedDate), 'Asia/Kolkata');\n  return format(date, formatString, {\n    locale: LOCALE_SHORTHANDS[i18n.language],\n  });\n};\n\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-IN', {\n    maximumFractionDigits: 2,\n  });\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const capitalizeAll = (s) => {\n  if (typeof s !== 'string') return '';\n  const str = s.toLowerCase().split(' ');\n  for (let i = 0; i < str.length; i++) {\n    str[i] = capitalize(str[i]);\n  }\n  return str.join(' ');\n};\n\nexport const abbreviate = (s) => {\n  return s.slice(0, 1) + s.slice(1).replace(/[aeiou]/gi, '');\n};\n\nexport const toTitleCase = (str) => {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\nexport const getStatistic = (data, type, statistic, normalizer = 1) => {\n  let count;\n  if (statistic === 'active') {\n    const confirmed = data?.[type]?.confirmed || 0;\n    const deceased = data?.[type]?.deceased || 0;\n    const recovered = data?.[type]?.recovered || 0;\n    const migrated = data?.[type]?.migrated || 0;\n    count = confirmed - deceased - recovered - migrated;\n  } else {\n    count = data?.[type]?.[statistic] || 0;\n  }\n  return count / normalizer;\n};\n\nexport const fetcher = (url) => axios(url).then((response) => response.data);\n"],"sourceRoot":""}