{"version":3,"sources":["../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../node_modules/@juggle/resize-observer/lib/utils/element.js","../node_modules/@juggle/resize-observer/lib/utils/global.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../node_modules/@juggle/resize-observer/lib/utils/process.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../node_modules/@juggle/resize-observer/lib/ResizeObserver.js"],"names":["exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","decasteljau","points","t","left","right","decasteljauRecurse","newPoints","Array","reverse","pointsToCommand","command","x2","y2","x1","y1","x","y","type","splitCurve","commandStart","commandEnd","segmentCount","segments","remainingCurve","tIncrement","split","splitCurveAsPoints","map","commandTokenRegex","typeMap","M","L","H","V","C","S","Q","T","A","arrayOfLength","array","commandToString","concat","p","join","extend","commandsToExtend","referenceCommands","excludeSegment","numSegmentsToExtend","numReferenceSegments","segmentRatio","extended","reduce","accum","d","insertIndex","Math","floor","addToPriorSegment","lastCommandCopies","forEach","copyCommand","splitSegment","unshift","makeCommands","commandArgs","tokens","match","commands","a","toLowerCase","interpolatePath","b","aCommands","bCommands","abs","interpolatedCommands","aCommand","bCommand","conversionMap","readFromBKeys","toUpperCase","aConverted","bKey","bValue","aValue","undefined","includes","convertToSameType","getOwnPropertyDescriptors","defineProperties","_objectSpread2","addZ","interpolatedCommand","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","arg","round","err","interpolatedString","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","factory","ResizeObserverBoxOptions","resizeObservers","msg","trigger","DOMRectReadOnly","width","height","top","bottom","freeze","toJSON","_a","fromRect","rectangle","isSVG","SVGElement","isHidden","getBBox","_b","offsetWidth","offsetHeight","getClientRects","isElement","scope","ownerDocument","defaultView","Element","global","window","cache","WeakMap","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","size","inlineSize","blockSize","switchSizes","zeroBoxes","devicePixelContentBoxSize","borderBoxSize","contentBoxSize","contentRect","calculateBoxSizes","forceRecalculation","has","get","set","cs","getComputedStyle","svg","ownerSVGElement","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","horizontalPadding","verticalPadding","horizontalBorderArea","borderLeftWidth","verticalBorderArea","horizontalScrollbarThickness","clientHeight","verticalScrollbarThickness","clientWidth","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","devicePixelRatio","calculateBoxSize","observedBox","DEVICE_PIXEL_CONTENT_BOX","BORDER_BOX","ResizeObserverEntry","calculateDepthForNode","node","Infinity","depth","parent","parentNode","broadcastActiveObservations","shallowestDepth","callbacks","ro","activeTargets","entries","ot","entry","targetDepth","lastReportedSize","callback","observer","splice","_i","callbacks_1","gatherActiveObservationsAtDepth","skippedTargets","observationTargets","isActive","process","some","event","ErrorEvent","message","document","createEvent","initEvent","dispatchEvent","deliverResizeLoopError","queueMicroTask","toggle_1","el_1","createTextNode","MutationObserver","cb","observe","characterData","textContent","watching","observerConfig","attributes","childList","subtree","events","time","timeout","Date","now","scheduled","scheduler","Scheduler","_this","stopped","listener","schedule","run","until","elementsHaveResized","start","requestAnimationFrame","stop","body","addEventListener","name","disconnect","removeEventListener","updateCount","n","ResizeObservation","CONTENT_BOX","tagName","isReplacedElement","display","ResizeObserverDetail","resizeObserver","observerMap","getObservationIndex","ResizeObserverController","connect","detail","options","firstObservation","box","unobserve","index","lastObservation","indexOf","slice","ResizeObserver","TypeError","toString"],"mappings":"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","file":"static/js/32.df2a7a5a.chunk.js","sourcesContent":["(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, (function (exports) { 'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * de Casteljau's algorithm for drawing and splitting bezier curves.\n * Inspired by https://pomax.github.io/bezierinfo/\n *\n * @param {Number[][]} points Array of [x,y] points: [start, control1, control2, ..., end]\n *   The original segment to split.\n * @param {Number} t Where to split the curve (value between [0, 1])\n * @return {Object} An object { left, right } where left is the segment from 0..t and\n *   right is the segment from t..1.\n */\nfunction decasteljau(points, t) {\n  var left = [];\n  var right = [];\n\n  function decasteljauRecurse(points, t) {\n    if (points.length === 1) {\n      left.push(points[0]);\n      right.push(points[0]);\n    } else {\n      var newPoints = Array(points.length - 1);\n\n      for (var i = 0; i < newPoints.length; i++) {\n        if (i === 0) {\n          left.push(points[0]);\n        }\n\n        if (i === newPoints.length - 1) {\n          right.push(points[i + 1]);\n        }\n\n        newPoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\n      }\n\n      decasteljauRecurse(newPoints, t);\n    }\n  }\n\n  if (points.length) {\n    decasteljauRecurse(points, t);\n  }\n\n  return {\n    left: left,\n    right: right.reverse()\n  };\n}\n/**\n * Convert segments represented as points back into a command object\n *\n * @param {Number[][]} points Array of [x,y] points: [start, control1, control2, ..., end]\n *   Represents a segment\n * @return {Object} A command object representing the segment.\n */\n\n\nfunction pointsToCommand(points) {\n  var command = {};\n\n  if (points.length === 4) {\n    command.x2 = points[2][0];\n    command.y2 = points[2][1];\n  }\n\n  if (points.length >= 3) {\n    command.x1 = points[1][0];\n    command.y1 = points[1][1];\n  }\n\n  command.x = points[points.length - 1][0];\n  command.y = points[points.length - 1][1];\n\n  if (points.length === 4) {\n    // start, control1, control2, end\n    command.type = 'C';\n  } else if (points.length === 3) {\n    // start, control, end\n    command.type = 'Q';\n  } else {\n    // start, end\n    command.type = 'L';\n  }\n\n  return command;\n}\n/**\n * Runs de Casteljau's algorithm enough times to produce the desired number of segments.\n *\n * @param {Number[][]} points Array of [x,y] points for de Casteljau (the initial segment to split)\n * @param {Number} segmentCount Number of segments to split the original into\n * @return {Number[][][]} Array of segments\n */\n\n\nfunction splitCurveAsPoints(points, segmentCount) {\n  segmentCount = segmentCount || 2;\n  var segments = [];\n  var remainingCurve = points;\n  var tIncrement = 1 / segmentCount; // x-----x-----x-----x\n  // t=  0.33   0.66   1\n  // x-----o-----------x\n  // r=  0.33\n  //       x-----o-----x\n  // r=         0.5  (0.33 / (1 - 0.33))  === tIncrement / (1 - (tIncrement * (i - 1))\n  // x-----x-----x-----x----x\n  // t=  0.25   0.5   0.75  1\n  // x-----o----------------x\n  // r=  0.25\n  //       x-----o----------x\n  // r=         0.33  (0.25 / (1 - 0.25))\n  //             x-----o----x\n  // r=         0.5  (0.25 / (1 - 0.5))\n\n  for (var i = 0; i < segmentCount - 1; i++) {\n    var tRelative = tIncrement / (1 - tIncrement * i);\n    var split = decasteljau(remainingCurve, tRelative);\n    segments.push(split.left);\n    remainingCurve = split.right;\n  } // last segment is just to the end from the last point\n\n\n  segments.push(remainingCurve);\n  return segments;\n}\n/**\n * Convert command objects to arrays of points, run de Casteljau's algorithm on it\n * to split into to the desired number of segments.\n *\n * @param {Object} commandStart The start command object\n * @param {Object} commandEnd The end command object\n * @param {Number} segmentCount The number of segments to create\n * @return {Object[]} An array of commands representing the segments in sequence\n */\n\n\nfunction splitCurve(commandStart, commandEnd, segmentCount) {\n  var points = [[commandStart.x, commandStart.y]];\n\n  if (commandEnd.x1 != null) {\n    points.push([commandEnd.x1, commandEnd.y1]);\n  }\n\n  if (commandEnd.x2 != null) {\n    points.push([commandEnd.x2, commandEnd.y2]);\n  }\n\n  points.push([commandEnd.x, commandEnd.y]);\n  return splitCurveAsPoints(points, segmentCount).map(pointsToCommand);\n}\n\nvar commandTokenRegex = /[MLCSTQAHVmlcstqahv]|-?[\\d.e+-]+/g;\n/**\n * List of params for each command type in a path `d` attribute\n */\n\nvar typeMap = {\n  M: ['x', 'y'],\n  L: ['x', 'y'],\n  H: ['x'],\n  V: ['y'],\n  C: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n  S: ['x2', 'y2', 'x', 'y'],\n  Q: ['x1', 'y1', 'x', 'y'],\n  T: ['x', 'y'],\n  A: ['rx', 'ry', 'xAxisRotation', 'largeArcFlag', 'sweepFlag', 'x', 'y']\n}; // Add lower case entries too matching uppercase (e.g. 'm' == 'M')\n\nObject.keys(typeMap).forEach(function (key) {\n  typeMap[key.toLowerCase()] = typeMap[key];\n});\n\nfunction arrayOfLength(length, value) {\n  var array = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    array[i] = value;\n  }\n\n  return array;\n}\n/**\n * Converts a command object to a string to be used in a `d` attribute\n * @param {Object} command A command object\n * @return {String} The string for the `d` attribute\n */\n\n\nfunction commandToString(command) {\n  return \"\".concat(command.type).concat(typeMap[command.type].map(function (p) {\n    return command[p];\n  }).join(','));\n}\n/**\n * Converts command A to have the same type as command B.\n *\n * e.g., L0,5 -> C0,5,0,5,0,5\n *\n * Uses these rules:\n * x1 <- x\n * x2 <- x\n * y1 <- y\n * y2 <- y\n * rx <- 0\n * ry <- 0\n * xAxisRotation <- read from B\n * largeArcFlag <- read from B\n * sweepflag <- read from B\n *\n * @param {Object} aCommand Command object from path `d` attribute\n * @param {Object} bCommand Command object from path `d` attribute to match against\n * @return {Object} aCommand converted to type of bCommand\n */\n\n\nfunction convertToSameType(aCommand, bCommand) {\n  var conversionMap = {\n    x1: 'x',\n    y1: 'y',\n    x2: 'x',\n    y2: 'y'\n  };\n  var readFromBKeys = ['xAxisRotation', 'largeArcFlag', 'sweepFlag']; // convert (but ignore M types)\n\n  if (aCommand.type !== bCommand.type && bCommand.type.toUpperCase() !== 'M') {\n    var aConverted = {};\n    Object.keys(bCommand).forEach(function (bKey) {\n      var bValue = bCommand[bKey]; // first read from the A command\n\n      var aValue = aCommand[bKey]; // if it is one of these values, read from B no matter what\n\n      if (aValue === undefined) {\n        if (readFromBKeys.includes(bKey)) {\n          aValue = bValue;\n        } else {\n          // if it wasn't in the A command, see if an equivalent was\n          if (aValue === undefined && conversionMap[bKey]) {\n            aValue = aCommand[conversionMap[bKey]];\n          } // if it doesn't have a converted value, use 0\n\n\n          if (aValue === undefined) {\n            aValue = 0;\n          }\n        }\n      }\n\n      aConverted[bKey] = aValue;\n    }); // update the type to match B\n\n    aConverted.type = bCommand.type;\n    aCommand = aConverted;\n  }\n\n  return aCommand;\n}\n/**\n * Interpolate between command objects commandStart and commandEnd segmentCount times.\n * If the types are L, Q, or C then the curves are split as per de Casteljau's algorithm.\n * Otherwise we just copy commandStart segmentCount - 1 times, finally ending with commandEnd.\n *\n * @param {Object} commandStart Command object at the beginning of the segment\n * @param {Object} commandEnd Command object at the end of the segment\n * @param {Number} segmentCount The number of segments to split this into. If only 1\n *   Then [commandEnd] is returned.\n * @return {Object[]} Array of ~segmentCount command objects between commandStart and\n *   commandEnd. (Can be segmentCount+1 objects if commandStart is type M).\n */\n\n\nfunction splitSegment(commandStart, commandEnd, segmentCount) {\n  var segments = []; // line, quadratic bezier, or cubic bezier\n\n  if (commandEnd.type === 'L' || commandEnd.type === 'Q' || commandEnd.type === 'C') {\n    segments = segments.concat(splitCurve(commandStart, commandEnd, segmentCount)); // general case - just copy the same point\n  } else {\n    var copyCommand = _extends({}, commandStart); // convert M to L\n\n\n    if (copyCommand.type === 'M') {\n      copyCommand.type = 'L';\n    }\n\n    segments = segments.concat(arrayOfLength(segmentCount - 1).map(function () {\n      return copyCommand;\n    }));\n    segments.push(commandEnd);\n  }\n\n  return segments;\n}\n/**\n * Extends an array of commandsToExtend to the length of the referenceCommands by\n * splitting segments until the number of commands match. Ensures all the actual\n * points of commandsToExtend are in the extended array.\n *\n * @param {Object[]} commandsToExtend The command object array to extend\n * @param {Object[]} referenceCommands The command object array to match in length\n * @param {Function} excludeSegment a function that takes a start command object and\n *   end command object and returns true if the segment should be excluded from splitting.\n * @return {Object[]} The extended commandsToExtend array\n */\n\n\nfunction extend(commandsToExtend, referenceCommands, excludeSegment) {\n  // compute insertion points:\n  // number of segments in the path to extend\n  var numSegmentsToExtend = commandsToExtend.length - 1; // number of segments in the reference path.\n\n  var numReferenceSegments = referenceCommands.length - 1; // this value is always between [0, 1].\n\n  var segmentRatio = numSegmentsToExtend / numReferenceSegments; // create a map, mapping segments in referenceCommands to how many points\n  // should be added in that segment (should always be >= 1 since we need each\n  // point itself).\n  // 0 = segment 0-1, 1 = segment 1-2, n-1 = last vertex\n\n  var countPointsPerSegment = arrayOfLength(numReferenceSegments).reduce(function (accum, d, i) {\n    var insertIndex = Math.floor(segmentRatio * i); // handle excluding segments\n\n    if (excludeSegment && insertIndex < commandsToExtend.length - 1 && excludeSegment(commandsToExtend[insertIndex], commandsToExtend[insertIndex + 1])) {\n      // set the insertIndex to the segment that this point should be added to:\n      // round the insertIndex essentially so we split half and half on\n      // neighbouring segments. hence the segmentRatio * i < 0.5\n      var addToPriorSegment = segmentRatio * i % 1 < 0.5; // only skip segment if we already have 1 point in it (can't entirely remove a segment)\n\n      if (accum[insertIndex]) {\n        // TODO - Note this is a naive algorithm that should work for most d3-area use cases\n        // but if two adjacent segments are supposed to be skipped, this will not perform as\n        // expected. Could be updated to search for nearest segment to place the point in, but\n        // will only do that if necessary.\n        // add to the prior segment\n        if (addToPriorSegment) {\n          if (insertIndex > 0) {\n            insertIndex -= 1; // not possible to add to previous so adding to next\n          } else if (insertIndex < commandsToExtend.length - 1) {\n            insertIndex += 1;\n          } // add to next segment\n\n        } else if (insertIndex < commandsToExtend.length - 1) {\n          insertIndex += 1; // not possible to add to next so adding to previous\n        } else if (insertIndex > 0) {\n          insertIndex -= 1;\n        }\n      }\n    }\n\n    accum[insertIndex] = (accum[insertIndex] || 0) + 1;\n    return accum;\n  }, []); // extend each segment to have the correct number of points for a smooth interpolation\n\n  var extended = countPointsPerSegment.reduce(function (extended, segmentCount, i) {\n    // if last command, just add `segmentCount` number of times\n    if (i === commandsToExtend.length - 1) {\n      var lastCommandCopies = arrayOfLength(segmentCount, _extends({}, commandsToExtend[commandsToExtend.length - 1])); // convert M to L\n\n      if (lastCommandCopies[0].type === 'M') {\n        lastCommandCopies.forEach(function (d) {\n          d.type = 'L';\n        });\n      }\n\n      return extended.concat(lastCommandCopies);\n    } // otherwise, split the segment segmentCount times.\n\n\n    return extended.concat(splitSegment(commandsToExtend[i], commandsToExtend[i + 1], segmentCount));\n  }, []); // add in the very first point since splitSegment only adds in the ones after it\n\n  extended.unshift(commandsToExtend[0]);\n  return extended;\n}\n/**\n * Takes a path `d` string and converts it into an array of command\n * objects. Drops the `Z` character.\n *\n * @param {String|null} d A path `d` string\n */\n\n\nfunction makeCommands(d) {\n  // split into valid tokens\n  var tokens = (d || '').match(commandTokenRegex) || [];\n  var commands = [];\n  var commandArgs;\n  var command; // iterate over each token, checking if we are at a new command\n  // by presence in the typeMap\n\n  for (var i = 0; i < tokens.length; ++i) {\n    commandArgs = typeMap[tokens[i]]; // new command found:\n\n    if (commandArgs) {\n      command = {\n        type: tokens[i]\n      }; // add each of the expected args for this command:\n\n      for (var a = 0; a < commandArgs.length; ++a) {\n        command[commandArgs[a]] = +tokens[i + a + 1];\n      } // need to increment our token index appropriately since\n      // we consumed token args\n\n\n      i += commandArgs.length;\n      commands.push(command);\n    }\n  }\n\n  return commands;\n}\n/**\n * Interpolate from A to B by extending A and B during interpolation to have\n * the same number of points. This allows for a smooth transition when they\n * have a different number of points.\n *\n * Ignores the `Z` character in paths unless both A and B end with it.\n *\n * @param {String} a The `d` attribute for a path\n * @param {String} b The `d` attribute for a path\n * @param {Function} excludeSegment a function that takes a start command object and\n *   end command object and returns true if the segment should be excluded from splitting.\n * @returns {Function} Interpolation function that maps t ([0, 1]) to a path `d` string.\n */\n\n\nfunction interpolatePath(a, b, excludeSegment) {\n  var aCommands = makeCommands(a);\n  var bCommands = makeCommands(b);\n\n  if (!aCommands.length && !bCommands.length) {\n    return function nullInterpolator() {\n      return '';\n    };\n  } // if A is empty, treat it as if it used to contain just the first point\n  // of B. This makes it so the line extends out of from that first point.\n\n\n  if (!aCommands.length) {\n    aCommands.push(bCommands[0]); // otherwise if B is empty, treat it as if it contains the first point\n    // of A. This makes it so the line retracts into the first point.\n  } else if (!bCommands.length) {\n    bCommands.push(aCommands[0]);\n  } // extend to match equal size\n\n\n  var numPointsToExtend = Math.abs(bCommands.length - aCommands.length);\n\n  if (numPointsToExtend !== 0) {\n    // B has more points than A, so add points to A before interpolating\n    if (bCommands.length > aCommands.length) {\n      aCommands = extend(aCommands, bCommands, excludeSegment); // else if A has more points than B, add more points to B\n    } else if (bCommands.length < aCommands.length) {\n      bCommands = extend(bCommands, aCommands, excludeSegment);\n    }\n  } // commands have same length now.\n  // convert commands in A to the same type as those in B\n\n\n  aCommands = aCommands.map(function (aCommand, i) {\n    return convertToSameType(aCommand, bCommands[i]);\n  }); // create mutable interpolated command objects\n\n  var interpolatedCommands = aCommands.map(function (aCommand) {\n    return _objectSpread2({}, aCommand);\n  });\n  var addZ = (a == null || a[a.length - 1] === 'Z') && (b == null || b[b.length - 1] === 'Z');\n  return function pathInterpolator(t) {\n    // at 1 return the final value without the extensions used during interpolation\n    if (t === 1) {\n      return b == null ? '' : b;\n    } // interpolate the commands using the mutable interpolated command objs\n    // we can skip at t=0 since we copied aCommands to begin\n\n\n    if (t > 0) {\n      for (var i = 0; i < interpolatedCommands.length; ++i) {\n        var aCommand = aCommands[i];\n        var bCommand = bCommands[i];\n        var interpolatedCommand = interpolatedCommands[i];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = typeMap[interpolatedCommand.type][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var arg = _step.value;\n            interpolatedCommand[arg] = (1 - t) * aCommand[arg] + t * bCommand[arg]; // do not use floats for flags (#27), round to integer\n\n            if (arg === 'largeArcFlag' || arg === 'sweepFlag') {\n              interpolatedCommand[arg] = Math.round(interpolatedCommand[arg]);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    } // convert to a string (fastest concat: https://jsperf.com/join-concat/150)\n\n\n    var interpolatedString = '';\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = interpolatedCommands[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var _interpolatedCommand = _step2.value;\n        interpolatedString += commandToString(_interpolatedCommand);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    if (addZ) {\n      interpolatedString += 'Z';\n    }\n\n    return interpolatedString;\n  };\n}\n\nexports.interpolatePath = interpolatePath;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","var resizeObservers = [];\nexport { resizeObservers };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","var DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return Object.freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a, _b;\n    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return Object.freeze({\n        inlineSize: (switchSizes ? blockSize : inlineSize) || 0,\n        blockSize: (switchSizes ? inlineSize : blockSize) || 0\n    });\n};\nvar zeroBoxes = Object.freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = Object.freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = [boxes.borderBoxSize];\n        this.contentBoxSize = [boxes.contentBoxSize];\n        this.devicePixelContentBoxSize = [boxes.devicePixelContentBoxSize];\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n"],"sourceRoot":""}