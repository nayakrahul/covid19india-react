{"version":3,"sources":["components/tooltip.js","../node_modules/react-use/esm/useLocalStorage.js","../node_modules/react-feather/dist/icons/info.js","../node_modules/react-feather/dist/icons/alert-circle.js","../node_modules/react-feather/dist/icons/chevron-down.js","../node_modules/react-use/esm/createBreakpoint.js","components/row.js","components/table.js"],"names":["FADE_IN","opacity","transform","zIndex","position","pointerEvents","FADE_OUT","Tooltip","data","children","useState","isTooltipVisible","setIsTooltipVisible","transitions","useTransition","from","enter","leave","config","mass","tension","friction","className","style","onMouseEnter","onMouseLeave","map","item","key","props","div","noop","useLocalStorage","initialValue","options","isClient","Error","deserializer","raw","value","JSON","parse","_a","serializer","String","stringify","localStorageValue","localStorage","getItem","setItem","state","setState","set","useCallback","valOrFunc","newState","remove","removeItem","undefined","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Info","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","AlertCircle","ChevronDown","points","createBreakpoint","breakpoints","laptopL","laptop","tablet","screen","setScreen","useEffect","setSideScreen","window","innerWidth","addEventListener","removeEventListener","sortedBreakpoints","useMemo","entries","sort","a","b","reduce","acc","name","useBreakpoint","L","S","Cell","memo","statistic","total","getStatistic","delta","spring","useSpring","gentle","span","classnames","interpolate","formatNumber","Math","floor","abs","prevProps","currProps","equal","DistrictHeaderCell","handleSortClick","sortData","breakpoint","t","useTranslation","onClick","title","capitalize","slice","abbreviate","sortColumn","isAscending","DistrictRow","stateCode","districtName","regionHighlighted","setRegionHighlighted","highlightDistrict","produce","draftRegionHighlighted","meta","notes","PRIMARY_STATISTICS","showDistricts","setShowDistricts","setSortData","history","useHistory","Chevron","rotateRightDown","rotateDownRight","draftSortData","sortingFunction","districtNameA","districtNameB","districts","localeCompare","highlightState","_setShowDistrict","Fragment","STATE_NAMES","colSpan","paddingBottom","formatLastUpdated","last_updated","align","push","XL","StateHeaderCell","handleSort","FineprintTop","to","stateCodeA","stateCodeB","statisticA","statisticB","useTrail","wobbly","trail","table","filter","confirmed"],"mappings":"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","file":"static/js/Table.fdaf0b16.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {useTransition, animated} from 'react-spring';\n\nconst FADE_IN = {\n  opacity: 1,\n  transform: 'translate3d(0, 0px, 0)',\n  zIndex: 999,\n  position: 'absolute',\n  pointerEvents: 'none',\n};\n\nconst FADE_OUT = {\n  opacity: 0,\n  transform: 'translate3d(0, 2px, 0)',\n  zIndex: 999,\n  position: 'absolute',\n  pointerEvents: 'none',\n};\n\nconst Tooltip = ({data, children}) => {\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n\n  const transitions = useTransition(isTooltipVisible, null, {\n    from: FADE_OUT,\n    enter: FADE_IN,\n    leave: FADE_OUT,\n    config: {\n      mass: 1,\n      tension: 210,\n      friction: 20,\n    },\n  });\n\n  return (\n    <span\n      className=\"Tooltip\"\n      style={{position: 'relative'}}\n      onMouseEnter={() => {\n        setIsTooltipVisible(true);\n      }}\n      onMouseLeave={() => {\n        setIsTooltipVisible(false);\n      }}\n    >\n      {children}\n\n      {transitions.map(({item, key, props}) =>\n        item ? (\n          <animated.div style={props}>\n            <div key={key} className=\"message\">\n              <p>{data}</p>\n            </div>\n          </animated.div>\n        ) : (\n          <animated.div key={key}></animated.div>\n        )\n      )}\n    </span>\n  );\n};\n\nexport default Tooltip;\n","/* eslint-disable */\nimport { useState, useCallback } from 'react';\nimport { isClient } from './util';\nvar noop = function () { };\nvar useLocalStorage = function (key, initialValue, options) {\n    if (!isClient) {\n        return [initialValue, noop, noop];\n    }\n    if (!key) {\n        throw new Error('useLocalStorage key may not be falsy');\n    }\n    var deserializer = options ? (options.raw ? function (value) { return value; } : options.deserializer) : JSON.parse;\n    var _a = useState(function () {\n        try {\n            var serializer = options ? (options.raw ? String : options.serializer) : JSON.stringify;\n            var localStorageValue = localStorage.getItem(key);\n            if (localStorageValue !== null) {\n                return deserializer(localStorageValue);\n            }\n            else {\n                initialValue && localStorage.setItem(key, serializer(initialValue));\n                return initialValue;\n            }\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. JSON.parse and JSON.stringify\n            // can throw, too.\n            return initialValue;\n        }\n    }), state = _a[0], setState = _a[1];\n    var set = useCallback(function (valOrFunc) {\n        try {\n            var newState = typeof valOrFunc === 'function' ? valOrFunc(state) : valOrFunc;\n            if (typeof newState === 'undefined')\n                return;\n            var value = void 0;\n            if (options)\n                if (options.raw)\n                    if (typeof newState === 'string')\n                        value = newState;\n                    else\n                        value = JSON.stringify(newState);\n                else if (options.serializer)\n                    value = options.serializer(newState);\n                else\n                    value = JSON.stringify(newState);\n            else\n                value = JSON.stringify(newState);\n            localStorage.setItem(key, value);\n            setState(deserializer(value));\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. Also JSON.stringify can throw.\n        }\n    }, [key, setState]);\n    var remove = useCallback(function () {\n        try {\n            localStorage.removeItem(key);\n            setState(undefined);\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw.\n        }\n    }, [key, setState]);\n    return [state, set, remove];\n};\nexport default useLocalStorage;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Info = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"16\",\n    x2: \"12\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"8\",\n    x2: \"12.01\",\n    y2: \"8\"\n  }));\n});\nInfo.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nInfo.displayName = 'Info';\nexport default Info;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar AlertCircle = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"8\",\n    x2: \"12\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"16\",\n    x2: \"12.01\",\n    y2: \"16\"\n  }));\n});\nAlertCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nAlertCircle.displayName = 'AlertCircle';\nexport default AlertCircle;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronDown = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"6 9 12 15 18 9\"\n  }));\n});\nChevronDown.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronDown.displayName = 'ChevronDown';\nexport default ChevronDown;","/* eslint-disable */\nimport { useEffect, useState, useMemo } from 'react';\nvar createBreakpoint = function (breakpoints) {\n    if (breakpoints === void 0) { breakpoints = { laptopL: 1440, laptop: 1024, tablet: 768 }; }\n    return function () {\n        var _a = useState(0), screen = _a[0], setScreen = _a[1];\n        useEffect(function () {\n            var setSideScreen = function () {\n                setScreen(window.innerWidth);\n            };\n            setSideScreen();\n            window.addEventListener('resize', setSideScreen);\n            return function () {\n                window.removeEventListener('resize', setSideScreen);\n            };\n        });\n        var sortedBreakpoints = useMemo(function () { return Object.entries(breakpoints).sort(function (a, b) { return (a[1] >= b[1] ? 1 : -1); }); }, [\n            breakpoints,\n        ]);\n        var result = sortedBreakpoints.reduce(function (acc, _a) {\n            var name = _a[0], width = _a[1];\n            if (screen >= width) {\n                return name;\n            }\n            else {\n                return acc;\n            }\n        }, sortedBreakpoints[0][0]);\n        return result;\n    };\n};\nexport default createBreakpoint;\n","import Tooltip from './tooltip';\n\nimport {PRIMARY_STATISTICS, STATE_NAMES} from '../constants';\nimport {\n  abbreviate,\n  capitalize,\n  formatLastUpdated,\n  formatNumber,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport {TriangleUpIcon, TriangleDownIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {useState, useCallback, useMemo} from 'react';\nimport {Info} from 'react-feather';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useSpring, animated, config} from 'react-spring';\nimport {createBreakpoint, useLocalStorage} from 'react-use';\n\nconst useBreakpoint = createBreakpoint({L: 768, S: 350});\n\nfunction PureCell({statistic, data}) {\n  const total = getStatistic(data, 'total', statistic);\n  const delta = getStatistic(data, 'delta', statistic);\n\n  const spring = useSpring(\n    {\n      total: total,\n      delta: delta,\n      from: {\n        total: total,\n        delta: delta,\n      },\n    },\n    config.gentle\n  );\n\n  return (\n    <td>\n      {statistic !== 'active' && (\n        <animated.span className={classnames('delta', `is-${statistic}`)}>\n          {spring.delta.interpolate((delta) =>\n            delta > 0\n              ? '\\u2191' + formatNumber(Math.floor(delta))\n              : delta < 0\n              ? '\\u2193' + formatNumber(Math.floor(Math.abs(delta)))\n              : ''\n          )}\n        </animated.span>\n      )}\n      <animated.span className=\"total\">\n        {spring.total.interpolate((total) => formatNumber(Math.floor(total)))}\n      </animated.span>\n    </td>\n  );\n}\n\nconst isCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data.total, currProps.data.total)) {\n    return false;\n  }\n  if (!equal(prevProps.data.delta, currProps.data.delta)) {\n    return false;\n  }\n  return true;\n};\n\nconst Cell = React.memo(PureCell, isCellEqual);\n\nfunction DistrictHeaderCell({handleSortClick, statistic, sortData}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <td onClick={() => handleSortClick(statistic)}>\n      <div className=\"heading-content\">\n        <abbr\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\n          title={capitalize(statistic)}\n        >\n          {breakpoint === 'S'\n            ? capitalize(statistic.slice(0, 1))\n            : breakpoint === 'L'\n            ? capitalize(abbreviate(statistic))\n            : t(capitalize(statistic))}\n        </abbr>\n        {sortData.sortColumn === statistic && (\n          <div>\n            {sortData.isAscending && <TriangleUpIcon />}\n            {!sortData.isAscending && <TriangleDownIcon />}\n            <div />\n          </div>\n        )}\n      </div>\n    </td>\n  );\n}\n\nfunction PureDistrictRow({\n  stateCode,\n  districtName,\n  data,\n  regionHighlighted,\n  setRegionHighlighted,\n}) {\n  const {t} = useTranslation();\n\n  const highlightDistrict = useCallback(() => {\n    if (regionHighlighted.districtName !== districtName) {\n      setRegionHighlighted(\n        produce(regionHighlighted, (draftRegionHighlighted) => {\n          draftRegionHighlighted.stateCode = stateCode;\n          draftRegionHighlighted.districtName = districtName;\n        })\n      );\n    }\n  }, [regionHighlighted, districtName, setRegionHighlighted, stateCode]);\n\n  return (\n    <tr\n      className={classnames('district', {\n        'is-highlighted': regionHighlighted?.districtName === districtName,\n      })}\n      onMouseEnter={highlightDistrict}\n    >\n      <td>\n        <div className=\"title-chevron\">\n          <span className=\"title-icon\">\n            <span className=\"title\">{t(districtName)}</span>\n            {data?.meta?.notes && (\n              <Tooltip {...{data: data.meta.notes}}>\n                <Info />\n              </Tooltip>\n            )}\n          </span>\n        </div>\n      </td>\n\n      {PRIMARY_STATISTICS.map((statistic) => (\n        <Cell key={statistic} {...{statistic}} data={data} />\n      ))}\n    </tr>\n  );\n}\n\nconst isDistrictRowEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (\n    !equal(prevProps.data?.['last_updated'], currProps.data?.['last_updated'])\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    ) &&\n    (equal(prevProps.regionHighlighted.districtName, prevProps.districtName) ||\n      equal(currProps.regionHighlighted.districtName, currProps.districtName))\n  ) {\n    return false;\n  }\n  return true;\n};\nconst DistrictRow = React.memo(PureDistrictRow, isDistrictRowEqual);\n\nfunction Row({stateCode, data, regionHighlighted, setRegionHighlighted}) {\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useLocalStorage('districtSortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n  });\n\n  const history = useHistory();\n  const {t} = useTranslation();\n\n  const Chevron = useMemo(\n    () => (\n      <span\n        className={classnames(\n          'dropdown',\n          {rotateRightDown: showDistricts},\n          {rotateDownRight: !showDistricts}\n        )}\n      >\n        <Icon.ChevronDown />\n      </span>\n    ),\n    [showDistricts]\n  );\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      setSortData(\n        produce(sortData, (draftSortData) => {\n          draftSortData.isAscending = !sortData.isAscending;\n          draftSortData.sortColumn = statistic;\n        })\n      );\n    },\n    [sortData, setSortData]\n  );\n\n  const sortingFunction = useCallback(\n    (districtNameA, districtNameB) => {\n      if (sortData.sortColumn !== 'districtName') {\n        return sortData.isAscending\n          ? getStatistic(\n              data.districts[districtNameA],\n              'total',\n              sortData.sortColumn\n            ) -\n              getStatistic(\n                data.districts[districtNameB],\n                'total',\n                sortData.sortColumn\n              )\n          : getStatistic(\n              data.districts[districtNameB],\n              'total',\n              sortData.sortColumn\n            ) -\n              getStatistic(\n                data.districts[districtNameA],\n                'total',\n                sortData.sortColumn\n              );\n      } else {\n        return sortData.isAscending\n          ? districtNameA.localeCompare(districtNameB)\n          : districtNameB.localeCompare(districtNameA);\n      }\n    },\n    [sortData, data]\n  );\n\n  const highlightState = useCallback(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted(\n        produce(regionHighlighted, (draftRegionHighlighted) => {\n          draftRegionHighlighted.stateCode = stateCode;\n          draftRegionHighlighted.districtName = null;\n        })\n      );\n    }\n  }, [regionHighlighted, setRegionHighlighted, stateCode]);\n\n  const _setShowDistrict = useCallback(() => {\n    if (data.districts) {\n      setShowDistricts(!showDistricts);\n    }\n  }, [showDistricts, data]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={classnames(\n          'state',\n          {'is-total': stateCode === 'TT'},\n          {'is-highlighted': regionHighlighted?.stateCode === stateCode}\n        )}\n        onMouseEnter={highlightState}\n        onClick={_setShowDistrict}\n      >\n        <td>\n          <div className=\"title-chevron\">\n            {stateCode !== 'TT' && Chevron}\n            <span className=\"title-icon\">\n              <span className=\"title\">{t(STATE_NAMES[stateCode])}</span>\n              {data?.meta?.notes && (\n                <Tooltip {...{data: data.meta.notes}}>\n                  <Info />\n                </Tooltip>\n              )}\n            </span>\n          </div>\n        </td>\n\n        {PRIMARY_STATISTICS.map((statistic) => (\n          <Cell key={statistic} {...{data, statistic}} />\n        ))}\n      </tr>\n\n      {showDistricts && (\n        <React.Fragment>\n          <tr className=\"is-spacer\">\n            <td colSpan={5}>\n              <p />\n            </td>\n          </tr>\n\n          <tr className={'state-last-update'}>\n            <td colSpan={4} style={{paddingBottom: 0}}>\n              <p className=\"spacer\"></p>\n              {data?.meta?.['last_updated'] && (\n                <p>\n                  {`Last updated ${formatLastUpdated(\n                    data.meta.last_updated\n                  )} ${t('ago')}`}\n                </p>\n              )}\n              {data.districts['Unknown'] && (\n                <div className=\"disclaimer\">\n                  <Icon.AlertCircle />\n                  {t('District-wise numbers are under reconciliation')}\n                </div>\n              )}\n            </td>\n            <td\n              align=\"center\"\n              className=\"state-page-link\"\n              colSpan={1}\n              style={{width: '1.5rem'}}\n              onClick={() => {\n                history.push(`state/${stateCode}`);\n              }}\n            >\n              {t('See more details on {{state}}', {\n                state: t(STATE_NAMES[stateCode]),\n              })}\n            </td>\n          </tr>\n\n          <tr className={classnames('district-heading')}>\n            <td onClick={() => handleSortClick('districtName')}>\n              <div className=\"heading-content\">\n                <abbr title=\"District\">{t('District')}</abbr>\n                {sortData.sortColumn === 'districtName' && (\n                  <div>\n                    {sortData.isAscending && <TriangleDownIcon />}\n                    {!sortData.isAscending && <TriangleUpIcon />}\n                  </div>\n                )}\n              </div>\n            </td>\n\n            {PRIMARY_STATISTICS.map((statistic) => (\n              <DistrictHeaderCell\n                key={statistic}\n                {...{statistic, sortData, handleSortClick}}\n              />\n            ))}\n          </tr>\n        </React.Fragment>\n      )}\n\n      {showDistricts &&\n        Object.keys(data.districts)\n          .sort((a, b) => sortingFunction(a, b))\n          .map((districtName) => (\n            <DistrictRow\n              key={districtName}\n              {...{\n                districtName,\n                regionHighlighted,\n                setRegionHighlighted,\n                stateCode,\n              }}\n              data={data.districts[districtName]}\n            />\n          ))}\n\n      {showDistricts && (\n        <tr className=\"is-spacer\">\n          <td colSpan={5}>\n            <p />\n          </td>\n        </tr>\n      )}\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.stateCode,\n      currProps.regionHighlighted.stateCode\n    ) &&\n      equal(prevProps.regionHighlighted.stateCode, prevProps.stateCode)) ||\n    equal(currProps.regionHighlighted.stateCode, currProps.stateCode)\n  ) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    ) &&\n      equal(\n        prevProps.regionHighlighted.districtName,\n        prevProps.districtName\n      )) ||\n    equal(currProps.regionHighlighted.districtName, currProps.districtName)\n  ) {\n    return false;\n  } else return true;\n};\n\nexport default React.memo(Row, isEqual);\n","import Row from './row';\n\nimport {PRIMARY_STATISTICS} from '../constants';\nimport {capitalize, abbreviate, getStatistic} from '../utils/commonfunctions';\n\nimport {TriangleUpIcon, TriangleDownIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useTrail, animated, config} from 'react-spring';\nimport {createBreakpoint, useLocalStorage} from 'react-use';\n\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\n\nfunction PureStateHeaderCell({handleSort, sortData, statistic}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <th onClick={() => handleSort(statistic)}>\n      <div className=\"heading-content\">\n        <abbr\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\n          title={capitalize(statistic)}\n        >\n          {breakpoint === 'S'\n            ? capitalize(statistic.slice(0, 1))\n            : breakpoint === 'L'\n            ? capitalize(abbreviate(statistic))\n            : t(capitalize(statistic))}\n        </abbr>\n        {sortData.sortColumn === statistic && (\n          <div>\n            {sortData.isAscending && <TriangleUpIcon />}\n            {!sortData.isAscending && <TriangleDownIcon />}\n            <div />\n          </div>\n        )}\n      </div>\n    </th>\n  );\n}\n\nconst isStateHeaderCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.sortData, currProps.sortData)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst StateHeaderCell = React.memo(PureStateHeaderCell, isStateHeaderCellEqual);\n\nfunction PureFineprintTop() {\n  const {t} = useTranslation();\n\n  return (\n    <React.Fragment>\n      <h5 className=\"table-fineprint\">\n        {t('Compiled from State Govt. numbers')},{' '}\n        <Link to=\"/about\" style={{color: '#6c757d'}}>\n          {t('know more')}!\n        </Link>\n      </h5>\n    </React.Fragment>\n  );\n}\nconst FineprintTop = React.memo(PureFineprintTop);\n\nfunction Table({data, regionHighlighted, setRegionHighlighted}) {\n  const {t} = useTranslation();\n\n  const [sortData, setSortData] = useLocalStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n  });\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      setSortData(\n        produce(sortData, (draftSortData) => {\n          draftSortData.isAscending = !sortData.isAscending;\n          draftSortData.sortColumn = statistic;\n        })\n      );\n    },\n    [sortData, setSortData]\n  );\n\n  const sortingFunction = useCallback(\n    (stateCodeA, stateCodeB) => {\n      if (sortData.sortColumn !== 'stateName') {\n        const statisticA = getStatistic(\n          data[stateCodeA],\n          'total',\n          sortData.sortColumn\n        );\n        const statisticB = getStatistic(\n          data[stateCodeB],\n          'total',\n          sortData.sortColumn\n        );\n        return sortData.isAscending\n          ? statisticA - statisticB\n          : statisticB - statisticA;\n      } else {\n        return sortData.isAscending\n          ? stateCodeA.localeCompare(stateCodeB)\n          : stateCodeB.localeCompare(stateCodeA);\n      }\n    },\n    [sortData, data]\n  );\n\n  const [trail, set] = useTrail(2, () => ({\n    transform: 'translate3d(0, 10px, 0)',\n    opacity: 0,\n    config: config.wobbly,\n  }));\n\n  set({transform: 'translate3d(0, 0px, 0)', opacity: 1});\n\n  return (\n    <React.Fragment>\n      <animated.span style={trail[0]}>\n        <FineprintTop />\n      </animated.span>\n\n      <animated.table className=\"table\" style={trail[1]}>\n        <thead>\n          <tr>\n            <th\n              className=\"state-heading\"\n              onClick={() => handleSortClick('stateName')}\n            >\n              <div className=\"heading-content\">\n                <abbr title=\"State\">{t('State/UT')}</abbr>\n                {sortData.sortColumn === 'stateName' && (\n                  <div>\n                    {sortData.isAscending && <TriangleDownIcon />}\n                    {!sortData.isAscending && <TriangleUpIcon />}\n                  </div>\n                )}\n              </div>\n            </th>\n            {PRIMARY_STATISTICS.map((statistic) => (\n              <StateHeaderCell\n                key={statistic}\n                {...{statistic, sortData}}\n                handleSort={() => {\n                  handleSortClick(statistic);\n                }}\n              />\n            ))}\n          </tr>\n        </thead>\n\n        <tbody>\n          {Object.keys(data)\n            .filter(\n              (stateCode) =>\n                stateCode !== 'TT' && data[stateCode].total?.confirmed\n            )\n            .sort((a, b) => sortingFunction(a, b))\n            .map((stateCode) => {\n              return (\n                <Row\n                  key={stateCode}\n                  data={data[stateCode]}\n                  {...{stateCode, regionHighlighted, setRegionHighlighted}}\n                />\n              );\n            })}\n        </tbody>\n\n        <tbody>\n          <Row\n            key={'TT'}\n            data={data['TT']}\n            stateCode={'TT'}\n            {...{regionHighlighted, setRegionHighlighted}}\n          />\n        </tbody>\n      </animated.table>\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted.stateCode,\n      currProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.data['TT'].total.confirmed,\n      currProps.data['TT'].total.confirmed\n    )\n  ) {\n    return false;\n  } else return true;\n};\n\nexport default React.memo(Table, isEqual);\n"],"sourceRoot":""}