{"version":3,"sources":["components/footer.js","hooks/useresizeobserver.js","components/level.js","components/minigraph.js","../node_modules/details-element-polyfill/dist/details-element-polyfill.js","components/loaders/mapvisualizer.js","components/maplegend.js","components/mapvisualizer.js","components/tooltips.js","components/mapexplorer.js","components/timeseries.js","components/timeseriesexplorer.js","../node_modules/react-feather/dist/icons/compass.js","../node_modules/@primer/components/lib/Breadcrumb.js","../node_modules/@primer/components/lib/Dropdown.js","../node_modules/@primer/components/lib/Details.js","../node_modules/@primer/components/lib/DropdownStyles.js","components/deltabargraph.js","components/statemetacard.js","components/statemeta.js","../node_modules/react-feather/dist/icons/smile.js","components/state.js"],"names":["React","memo","props","t","useTranslation","className","style","animationDelay","href","target","rel","justifyContent","useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","observer","forEach","entry","index","contentRect","observe","unobserve","LevelItem","statistic","total","delta","spring","useSpring","from","config","stiff","Fragment","capitalize","span","interpolate","formatNumber","Math","floor","size","verticalAlign","data","useTrail","transform","opacity","trail","set","PRIMARY_STATISTICS","map","div","key","classnames","getStatistic","prevProps","currProps","equal","timeseries","timelineDate","date","refs","useRef","dates","useMemo","today","getIndiaYesterdayISO","pastDates","Object","keys","filter","cutOffDate","formatISO","subDays","parseIndiaDate","MINIGRAPH_LOOKBACK_DAYS","representation","T","length","margin","chartRight","chartBottom","xScale","d3","clamp","domain","range","dailyMin","dailyMax","max","domainMinMax","yScale","pathLength","svg","color","COLORS","line","curve","x","y","selectAll","join","enter","append","attr","this","getTotalLength","call","transition","delay","duration","update","attrTween","previous","interpolatePath","el","width","height","viewBox","preserveAspectRatio","element","document","createElement","elementIsNative","HTMLDetailsElement","support","_ref","slice","setAccessibilityAttributes","root","tagName","concat","getElementsByTagName","findElementsWithTagName","summary","details","findClosestElementWithTagName","setAttribute","hasAttribute","eventIsSignificant","event","defaultPrevented","ctrlKey","metaKey","shiftKey","isContentEditable","onTogglingTrigger","callback","addEventListener","which","parentNode","keyCode","preventDefault","triggerToggle","createEvent","initEvent","dispatchEvent","closest","head","insertAdjacentHTML","prototype","constructor","removeAttribute","open","getOwnPropertyDescriptor","defineProperties","get","value","name","_value","_this","wasOpen","result","querySelector","_this2","polyfillProperties","window","MutationObserver","mutations","mutation","addedNodes","documentElement","subtree","childList","attributeName","attributes","getAttribute","setTimeout","isOpen","MapVisualizerLoader","INDIA_ASPECT_RATIO","speed","backgroundColor","cx","cy","r","MapLegend","mapScale","mapOption","svgRef","wrapperRef","getBoundingClientRect","MAP_OPTIONS","HOTSPOTS","D3_TRANSITION_DURATION","select","remove","domainMax","d","copy","tickSize","tickPadding","tickValues","tickFormat","g","title","marginTop","marginRight","marginBottom","marginLeft","ticks","ordinalWeights","tickAdjust","n","min","rangeRound","ramp","toDataURL","interpolator","assign","undefined","round","i","invertExtent","thresholds","quantiles","thresholdFormat","widthScale","reduce","a","b","xPos","w","acc","bandwidth","on","text","node","legend","capitalizeAll","PER_MILLION","TOTAL","Number","isInteger","ZONES","MAP_LEGEND_HEIGHT","id","position","canvas","context","getContext","fillStyle","fillRect","colorInterpolator","confirmed","active","recovered","deceased","tested","getTotalStatistic","normalizer","MapVisualizer","currentMap","changeMap","regionHighlighted","setRegionHighlighted","isCountryLoaded","mapMeta","MAP_META","code","geoDataResponse","useSWR","geoDataFile","file","revalidateOnFocus","suspense","statisticMax","stateCodes","stateCode","includes","view","MAP_VIEWS","STATES","option","STATE_POPULATIONS_MIL","districts","values","districtData","statisticTotal","ZONE_COLORS","nice","geoData","topology","topojson","objects","graphObjectStates","graphObjectDistricts","projection","fitSize","path","features","f","district","properties","state","st_nm","obj","fillColor","STATE_CODES","stateData","zone","strokeColor","onceTouchedRegion","sel","districtName","stopPropagation","mapType","MAP_TYPES","STATE","circlesData","UNKNOWN_DISTRICT_KEY","sort","centroid","meshStates","COUNTRY","meshDistricts","DISTRICTS","STATE_NAMES","each","highlighted","appendChild","colorInterpolationFilters","type","testedToolTip","onClick","e","data-for","data-tip","data-event","data-event-off","effect","multiline","scrollHide","globalEventOff","anchor","setAnchor","mapStatistic","setMapStatistic","history","useHistory","setWidth","mapExplorerRef","clientWidth","setCurrentMap","currentMapMeta","currentMapData","switchMap","useCallback","newMapMeta","topDistrict","ReactDOM","unstable_batchedUpdates","panelState","produce","draft","hoveredRegion","hoveredData","population_millions","springs","useSprings","MAP_STATISTICS","tension","stickied","hidden","innerWidth","action","focused","h1","h6","formatDate","meta","source","push","formatLastUpdated","fallback","handleTabClick","TT","chartType","isUniform","isLog","highlightedDate","setHighlightedDate","numTicksX","xAxis","xAxis2","yAxis","uniformScaleMin","uniformScaleMax","yScaleUniformLinear","yScaleUniformLog","mousemove","xm","invert","bisectDate","left","mouseout","TIMESERIES_STATISTICS","generateYScale","TIMESERIES_OPTIONS","MONTH","timeseriesOption","setTimeseriesOption","useLocalStorage","setChartType","setIsUniform","setIsLog","explorerElement","isVisible","useIsVisible","once","TWO_WEEKS","sub","weeks","months","display","htmlFor","checked","aria-label","onChange","disabled","selected","_extends","arguments","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Compass","forwardRef","_ref$color","_ref$size","rest","xmlns","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","PropTypes","string","oneOfType","number","displayName","_interopRequireDefault","require","defineProperty","exports","_objectSpread2","_extends2","_objectWithoutProperties2","_react","_propTypes","_classnames","_styledComponents","_sx","_constants","_theme","_Box","Wrapper","li","withConfig","componentId","BreadcrumbBase","children","theme","classes","wrappedChildren","Children","child","as","my","pl","Breadcrumb","COMMON","FLEX","Item","attrs","activeClassName","to","defaultProps","elementType","bool","_default","_Button","_Details","_DropdownStyles","StyledDetails","Dropdown","overlay","Button","_ref2","Caret","Menu","ul","direction","oneOf","_interopRequireWildcard","_slicedToArray2","Details","_ref$render","render","getRenderer","userOpen","onClickOutside","onToggle","_ref$defaultOpen","defaultOpen","_useState","_useState2","internalOpen","setInternalOpen","onClickOutsideInternal","removeEventListener","func","object","ne","s","sw","se","getDeltaStatistic","NUM_BARS_STATEPAGE","paddingInner","roundedBar","textSelection","val","prevVal","abs","h","sign","StateMetaCard","formula","description","StateMeta","totalConfirmed","indiaDate","format","getIndiaDate","prevWeekDate","prevWeekConfirmed","confirmedPerMillion","testPerMillion","totalConfirmedPerMillion","recoveryPercent","activePercent","deathPercent","growthRate","place","STATE_POPULATIONS","Smile","x1","y1","x2","y2","Breadcrumbs","stateName","useParams","toUpperCase","useMeasure","mapSwitcher","showAllDistricts","setShowAllDistricts","useEffectOnce","anime","targets","translateX","easing","fetcher","revalidateOnMount","refreshInterval","gridRowCount","gridColumnCount","districtCount","ceil","Helmet","content","last_updated","gridTemplateRows","districtNameA","districtNameB","districtA","districtB","handleSort","every"],"mappings":"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","file":"static/js/State.5741a909.chunk.js","sourcesContent":["import React from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer(props) {\n  const {t} = useTranslation();\n\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>{t('We stand with everyone fighting on the frontlines')}</h5>\n\n      <div className=\"link\">\n        <a\n          href=\"https://github.com/covid19india\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          covid19india\n        </a>\n      </div>\n\n      <a\n        href=\"https://github.com/covid19india/covid19india-react\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>{t('Open Sourced on GitHub')}</span>\n      </a>\n\n      <a\n        className=\"button excel\"\n        href=\"http://patientdb.covid19india.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>{t('Crowdsourced Patient Database')}</span>\n      </a>\n\n      <a\n        href=\"https://twitter.com/covid19indiaorg\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button twitter\"\n        style={{justifyContent: 'center'}}\n      >\n        <Icon.Twitter />\n        <span>{t('View updates on Twitter')}</span>\n      </a>\n\n      <a\n        href=\"https://bit.ly/covid19crowd\"\n        className=\"button telegram\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.MessageCircle />\n        <span>{t('Join Telegram to Collaborate!')}</span>\n      </a>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","import {PRIMARY_STATISTICS} from '../constants';\nimport {capitalize, formatNumber, getStatistic} from '../utils/commonfunctions';\n\nimport {HeartFillIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring, config, useTrail} from 'react-spring';\n\nfunction PureLevelItem({statistic, total, delta}) {\n  const {t} = useTranslation();\n  const spring = useSpring(\n    {\n      total: total,\n      delta: delta,\n      from: {total: total, delta: delta},\n    },\n    config.stiff\n  );\n\n  return (\n    <React.Fragment>\n      <h5>{capitalize(t(statistic))}</h5>\n      <h4>\n        <animated.span>\n          {delta > 0 ? (\n            spring.delta.interpolate(\n              (delta) => `+${formatNumber(Math.floor(delta))}`\n            )\n          ) : (\n            <HeartFillIcon size={9} verticalAlign={2} />\n          )}\n        </animated.span>\n      </h4>\n      <h1>\n        <animated.span>\n          {spring.total.interpolate((total) => formatNumber(Math.floor(total)))}\n        </animated.span>\n      </h1>\n    </React.Fragment>\n  );\n}\n\nconst LevelItem = React.memo(PureLevelItem);\n\nfunction Level({data}) {\n  const [trail, set] = useTrail(4, () => ({\n    transform: 'translate3d(0, 20px, 0)',\n    opacity: 0,\n    config: config.stiff,\n  }));\n\n  set({transform: 'translate3d(0, 0px, 0)', opacity: 1});\n\n  return (\n    <div className=\"Level\">\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <animated.div\n          key={index}\n          className={classnames('level-item', `is-${statistic}`)}\n          style={trail[index]}\n        >\n          <LevelItem\n            {...{statistic}}\n            total={getStatistic(data, 'total', statistic)}\n            delta={getStatistic(data, 'delta', statistic)}\n          />\n        </animated.div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      getStatistic(prevProps.data, 'total', 'active'),\n      getStatistic(currProps.data, 'total', 'active')\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(Level, isEqual);\n","import {\n  COLORS,\n  MINIGRAPH_LOOKBACK_DAYS,\n  PRIMARY_STATISTICS,\n} from '../constants';\nimport {\n  getStatistic,\n  getIndiaYesterdayISO,\n  parseIndiaDate,\n} from '../utils/commonfunctions';\n\nimport classnames from 'classnames';\nimport * as d3 from 'd3';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useEffect, useRef, useMemo} from 'react';\n\nfunction Minigraph({timeseries, date: timelineDate}) {\n  const refs = useRef([]);\n\n  const dates = useMemo(() => {\n    const today = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(timeseries || {}).filter(\n      (date) => date <= today\n    );\n    const cutOffDate = formatISO(\n      subDays(parseIndiaDate(today), MINIGRAPH_LOOKBACK_DAYS),\n      {representation: 'date'}\n    );\n    return pastDates.filter((date) => date >= cutOffDate);\n  }, [timeseries, timelineDate]);\n\n  useEffect(() => {\n    const T = dates.length;\n\n    const margin = {top: 10, right: 5, bottom: 20, left: 5};\n    const chartRight = 100 - margin.right;\n    const chartBottom = 100 - margin.bottom;\n\n    const xScale = d3\n      .scaleTime()\n      .clamp(true)\n      .domain([parseIndiaDate(dates[0]), parseIndiaDate(dates[T - 1])])\n      .range([margin.left, chartRight]);\n\n    const dailyMin = d3.min(dates, (date) =>\n      getStatistic(timeseries[date], 'delta', 'active')\n    );\n\n    const dailyMax = d3.max(dates, (date) =>\n      Math.max(\n        getStatistic(timeseries[date], 'delta', 'confirmed'),\n        getStatistic(timeseries[date], 'delta', 'recovered'),\n        getStatistic(timeseries[date], 'delta', 'deceased')\n      )\n    );\n\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .clamp(true)\n      .domain([-domainMinMax, domainMinMax])\n      .range([chartBottom, margin.top]);\n\n    refs.current.forEach((ref, index) => {\n      const svg = d3.select(ref);\n      const statistic = PRIMARY_STATISTICS[index];\n      const color = COLORS[statistic];\n\n      const line = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x((date) => xScale(parseIndiaDate(date)))\n        .y((date) =>\n          yScale(getStatistic(timeseries[date], 'delta', statistic))\n        );\n\n      let pathLength;\n      svg\n        .selectAll('path')\n        .data(T ? [dates] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('fill', 'none')\n              .attr('stroke', color + '99')\n              .attr('stroke-width', 2.5)\n              .attr('d', line)\n              .attr('stroke-dasharray', function () {\n                return (pathLength = this.getTotalLength());\n              })\n              .call((enter) =>\n                enter\n                  .attr('stroke-dashoffset', pathLength)\n                  .transition()\n                  .delay(100)\n                  .duration(2500)\n                  .attr('stroke-dashoffset', 0)\n              ),\n          (update) =>\n            update\n              .attr('stroke-dasharray', null)\n              .transition()\n              .duration(500)\n              .attrTween('d', function (date) {\n                const previous = d3.select(this).attr('d');\n                const current = line(date);\n                return interpolatePath(previous, current);\n              })\n        );\n\n      svg\n        .selectAll('circle')\n        .data(T ? [dates[T - 1]] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('circle')\n              .attr('fill', color)\n              .attr('r', 2.5)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getStatistic(timeseries[date], 'delta', statistic))\n              )\n              .style('opacity', 0)\n              .call((enter) =>\n                enter\n                  .transition()\n                  .delay(2100)\n                  .duration(500)\n                  .style('opacity', 1)\n                  .attr('cx', (date) => xScale(parseIndiaDate(date)))\n                  .attr('cy', (date) =>\n                    yScale(getStatistic(timeseries[date], 'delta', statistic))\n                  )\n              ),\n          (update) =>\n            update\n              .transition()\n              .duration(500)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getStatistic(timeseries[date], 'delta', statistic))\n              )\n        );\n    });\n  }, [dates, timeseries]);\n\n  return (\n    <div className=\"Minigraph\">\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <div key={statistic} className={classnames('svg-parent')}>\n          <svg\n            ref={(el) => {\n              refs.current[index] = el;\n            }}\n            width=\"100\"\n            height=\"75\"\n            viewBox=\"0 0 100 75\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(Minigraph, isEqual);\n","/*\nDetails Element Polyfill 2.4.0\nCopyright © 2019 Javan Makhmali\n */\n(function() {\n  \"use strict\";\n  var element = document.createElement(\"details\");\n  var elementIsNative = typeof HTMLDetailsElement != \"undefined\" && element instanceof HTMLDetailsElement;\n  var support = {\n    open: \"open\" in element || elementIsNative,\n    toggle: \"ontoggle\" in element\n  };\n  var styles = '\\ndetails, summary {\\n  display: block;\\n}\\ndetails:not([open]) > *:not(summary) {\\n  display: none;\\n}\\nsummary::before {\\n  content: \"►\";\\n  padding-right: 0.3rem;\\n  font-size: 0.6rem;\\n  cursor: default;\\n}\\n[open] > summary::before {\\n  content: \"▼\";\\n}\\n';\n  var _ref = [], forEach = _ref.forEach, slice = _ref.slice;\n  if (!support.open) {\n    polyfillStyles();\n    polyfillProperties();\n    polyfillToggle();\n    polyfillAccessibility();\n  }\n  if (support.open && !support.toggle) {\n    polyfillToggleEvent();\n  }\n  function polyfillStyles() {\n    document.head.insertAdjacentHTML(\"afterbegin\", \"<style>\" + styles + \"</style>\");\n  }\n  function polyfillProperties() {\n    var prototype = document.createElement(\"details\").constructor.prototype;\n    var setAttribute = prototype.setAttribute, removeAttribute = prototype.removeAttribute;\n    var open = Object.getOwnPropertyDescriptor(prototype, \"open\");\n    Object.defineProperties(prototype, {\n      open: {\n        get: function get() {\n          if (this.tagName == \"DETAILS\") {\n            return this.hasAttribute(\"open\");\n          } else {\n            if (open && open.get) {\n              return open.get.call(this);\n            }\n          }\n        },\n        set: function set(value) {\n          if (this.tagName == \"DETAILS\") {\n            return value ? this.setAttribute(\"open\", \"\") : this.removeAttribute(\"open\");\n          } else {\n            if (open && open.set) {\n              return open.set.call(this, value);\n            }\n          }\n        }\n      },\n      setAttribute: {\n        value: function value(name, _value) {\n          var _this = this;\n          var call = function call() {\n            return setAttribute.call(_this, name, _value);\n          };\n          if (name == \"open\" && this.tagName == \"DETAILS\") {\n            var wasOpen = this.hasAttribute(\"open\");\n            var result = call();\n            if (!wasOpen) {\n              var summary = this.querySelector(\"summary\");\n              if (summary) summary.setAttribute(\"aria-expanded\", true);\n              triggerToggle(this);\n            }\n            return result;\n          }\n          return call();\n        }\n      },\n      removeAttribute: {\n        value: function value(name) {\n          var _this2 = this;\n          var call = function call() {\n            return removeAttribute.call(_this2, name);\n          };\n          if (name == \"open\" && this.tagName == \"DETAILS\") {\n            var wasOpen = this.hasAttribute(\"open\");\n            var result = call();\n            if (wasOpen) {\n              var summary = this.querySelector(\"summary\");\n              if (summary) summary.setAttribute(\"aria-expanded\", false);\n              triggerToggle(this);\n            }\n            return result;\n          }\n          return call();\n        }\n      }\n    });\n  }\n  function polyfillToggle() {\n    onTogglingTrigger(function(element) {\n      element.hasAttribute(\"open\") ? element.removeAttribute(\"open\") : element.setAttribute(\"open\", \"\");\n    });\n  }\n  function polyfillToggleEvent() {\n    if (window.MutationObserver) {\n      new MutationObserver(function(mutations) {\n        forEach.call(mutations, function(mutation) {\n          var target = mutation.target, attributeName = mutation.attributeName;\n          if (target.tagName == \"DETAILS\" && attributeName == \"open\") {\n            triggerToggle(target);\n          }\n        });\n      }).observe(document.documentElement, {\n        attributes: true,\n        subtree: true\n      });\n    } else {\n      onTogglingTrigger(function(element) {\n        var wasOpen = element.getAttribute(\"open\");\n        setTimeout(function() {\n          var isOpen = element.getAttribute(\"open\");\n          if (wasOpen != isOpen) {\n            triggerToggle(element);\n          }\n        }, 1);\n      });\n    }\n  }\n  function polyfillAccessibility() {\n    setAccessibilityAttributes(document);\n    if (window.MutationObserver) {\n      new MutationObserver(function(mutations) {\n        forEach.call(mutations, function(mutation) {\n          forEach.call(mutation.addedNodes, setAccessibilityAttributes);\n        });\n      }).observe(document.documentElement, {\n        subtree: true,\n        childList: true\n      });\n    } else {\n      document.addEventListener(\"DOMNodeInserted\", function(event) {\n        setAccessibilityAttributes(event.target);\n      });\n    }\n  }\n  function setAccessibilityAttributes(root) {\n    findElementsWithTagName(root, \"SUMMARY\").forEach(function(summary) {\n      var details = findClosestElementWithTagName(summary, \"DETAILS\");\n      summary.setAttribute(\"aria-expanded\", details.hasAttribute(\"open\"));\n      if (!summary.hasAttribute(\"tabindex\")) summary.setAttribute(\"tabindex\", \"0\");\n      if (!summary.hasAttribute(\"role\")) summary.setAttribute(\"role\", \"button\");\n    });\n  }\n  function eventIsSignificant(event) {\n    return !(event.defaultPrevented || event.ctrlKey || event.metaKey || event.shiftKey || event.target.isContentEditable);\n  }\n  function onTogglingTrigger(callback) {\n    addEventListener(\"click\", function(event) {\n      if (eventIsSignificant(event)) {\n        if (event.which <= 1) {\n          var element = findClosestElementWithTagName(event.target, \"SUMMARY\");\n          if (element && element.parentNode && element.parentNode.tagName == \"DETAILS\") {\n            callback(element.parentNode);\n          }\n        }\n      }\n    }, false);\n    addEventListener(\"keydown\", function(event) {\n      if (eventIsSignificant(event)) {\n        if (event.keyCode == 13 || event.keyCode == 32) {\n          var element = findClosestElementWithTagName(event.target, \"SUMMARY\");\n          if (element && element.parentNode && element.parentNode.tagName == \"DETAILS\") {\n            callback(element.parentNode);\n            event.preventDefault();\n          }\n        }\n      }\n    }, false);\n  }\n  function triggerToggle(element) {\n    var event = document.createEvent(\"Event\");\n    event.initEvent(\"toggle\", false, false);\n    element.dispatchEvent(event);\n  }\n  function findElementsWithTagName(root, tagName) {\n    return (root.tagName == tagName ? [ root ] : []).concat(typeof root.getElementsByTagName == \"function\" ? slice.call(root.getElementsByTagName(tagName)) : []);\n  }\n  function findClosestElementWithTagName(element, tagName) {\n    if (typeof element.closest == \"function\") {\n      return element.closest(tagName);\n    } else {\n      while (element) {\n        if (element.tagName == tagName) {\n          return element;\n        } else {\n          element = element.parentNode;\n        }\n      }\n    }\n  }\n})();\n","import {COLORS, INDIA_ASPECT_RATIO} from '../../constants';\n\nimport React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst MapVisualizerLoader = ({width, statistic}) => {\n  const height = width / INDIA_ASPECT_RATIO;\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n      backgroundColor={COLORS[statistic]}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default MapVisualizerLoader;\n","import {\n  D3_TRANSITION_DURATION,\n  MAP_LEGEND_HEIGHT,\n  MAP_OPTIONS,\n  // ZONE_COLORS,\n} from '../constants';\nimport {useResizeObserver} from '../hooks/useresizeobserver';\nimport {capitalizeAll, formatNumber} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport React, {useEffect, useRef} from 'react';\n\nfunction MapLegend({data, mapScale, mapOption, statistic}) {\n  const svgRef = useRef(null);\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  // const totalZones = useMemo(() => {\n  //   return Object.values(data).reduce(\n  //     (counts, stateData) => {\n  //       if (stateData?.districts) {\n  //         Object.values(stateData.districts).forEach((districtData) => {\n  //           if (districtData?.zone?.status)\n  //             counts[districtData.zone.status] += 1;\n  //         });\n  //       }\n  //       return counts;\n  //     },\n  //     Object.keys(ZONE_COLORS).reduce((count, zone) => {\n  //       count[zone] = 0;\n  //       return count;\n  //     }, {})\n  //   );\n  // }, [data]);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    let {width, height} =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    if (!width || !height)\n      ({width, height} = wrapperRef.current.getBoundingClientRect());\n\n    // if (mapOption === MAP_OPTIONS.ZONES) {\n    //   svg.call(() =>\n    //     legend({\n    //       svg: svg,\n    //       color: mapScale,\n    //       width: width,\n    //       height: height,\n    //       tickValues: [],\n    //       marginLeft: 2,\n    //       marginRight: 20,\n    //       ordinalWeights: Object.values(totalZones),\n    //     })\n    //   );\n    // }\n    if (mapOption === MAP_OPTIONS.HOTSPOTS) {\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n      svg\n        .select('.ramp')\n        .transition(t)\n        .attr('opacity', 0)\n        .attr('xlink:href', null);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .transition(t)\n        .attr('opacity', 0)\n        .remove();\n      svg.selectAll('.axis > *').remove();\n\n      const domainMax = mapScale.domain()[1];\n\n      const legend = svg\n        .select('.circles')\n        .attr('transform', `translate(48,40)`)\n        .attr('text-anchor', 'middle');\n\n      legend\n        .selectAll('circle')\n        .data([domainMax / 10, (domainMax * 2) / 5, domainMax])\n        .join('circle')\n        .attr('fill', 'none')\n        .attr('stroke', '#ccc')\n        .transition(t)\n        .attr('cy', (d) => -mapScale(d))\n        .attr('r', mapScale);\n\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n\n      svg\n        .select('.circleAxis')\n        .attr('transform', `translate(48,50)`)\n        .transition(t)\n        .call(\n          d3\n            .axisRight(yScale)\n            .tickSize(0)\n            .tickPadding(0)\n            .tickValues([domainMax / 10, (domainMax * 2) / 5, domainMax])\n            .tickFormat(d3.format('0~s'))\n        )\n        .selectAll('.tick text')\n        .style('text-anchor', 'middle');\n\n      svg.select('.circleAxis').call((g) => g.select('.domain').remove());\n    } else {\n      svg.call(() =>\n        legend({\n          svg: svg,\n          color: mapScale,\n          title:\n            capitalizeAll(statistic) +\n            (mapOption === MAP_OPTIONS.PER_MILLION\n              ? ' cases per million'\n              : ' cases'),\n          width: width,\n          height: height,\n          ticks: 5,\n          tickFormat: function (d, i, n) {\n            if (mapOption === MAP_OPTIONS.TOTAL && !Number.isInteger(d)) return;\n            if (i === n.length - 1) return formatNumber(d) + '+';\n            return formatNumber(d);\n          },\n          marginLeft: 2,\n          marginRight: 20,\n        })\n      );\n    }\n    svg.attr('class', mapOption === MAP_OPTIONS.ZONES ? 'zone' : '');\n  }, [dimensions, mapScale, mapOption, statistic]); // totalZones\n\n  return (\n    <div\n      className=\"svg-parent maplegend\"\n      style={{height: MAP_LEGEND_HEIGHT}}\n      ref={wrapperRef}\n    >\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\n        <image className=\"ramp\" />\n        <g className=\"bars\"></g>\n        <g className=\"circles\"></g>\n        <g className=\"circleAxis\"></g>\n        <g className=\"axis\">\n          <text className=\"axistext\" />\n        </g>\n      </svg>\n      <canvas\n        className=\"color-scale\"\n        style={{position: 'absolute', height: 0}}\n      />\n    </div>\n  );\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  svg.selectAll('.circles > *').remove();\n  svg.selectAll('.circleAxis > *').remove();\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg\n      .select('.bars')\n      .selectAll('rect')\n      .transition(t)\n      .attr('opacity', 0)\n      .remove();\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = d3\n        .scaleBand()\n        .domain(color.domain())\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = d3\n        .scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = d3.scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = d3.select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n","import MapLegend from './maplegend';\n\nimport {\n  COLORS,\n  D3_TRANSITION_DURATION,\n  MAP_META,\n  MAP_TYPES,\n  MAP_OPTIONS,\n  MAP_VIEWS,\n  STATE_CODES,\n  STATE_NAMES,\n  STATE_POPULATIONS_MIL,\n  UNKNOWN_DISTRICT_KEY,\n  ZONE_COLORS,\n} from '../constants';\nimport {\n  capitalizeAll,\n  formatNumber,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport React, {useEffect, useMemo, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport useSWR from 'swr';\nimport * as topojson from 'topojson';\n\nconst colorInterpolator = {\n  confirmed: (t) => d3.interpolateReds(t * 0.85),\n  active: (t) => d3.interpolateBlues(t * 0.85),\n  recovered: (t) => d3.interpolateGreens(t * 0.85),\n  deceased: (t) => d3.interpolateGreys(t * 0.85),\n  tested: (t) => d3.interpolatePurples(t * 0.85),\n};\n\nconst getTotalStatistic = (data, statistic, normalizer = 1) => {\n  return getStatistic(data, 'total', statistic, normalizer);\n};\n\nfunction MapVisualizer({\n  currentMap,\n  data,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[currentMap.code];\n\n  const geoDataResponse = useSWR(\n    mapMeta.geoDataFile,\n    async (file) => {\n      return await d3.json(file);\n    },\n    {revalidateOnFocus: false, suspense: true}\n  );\n\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(\n      (stateCode) =>\n        stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode)\n    );\n    return currentMap.view === MAP_VIEWS.STATES\n      ? d3.max(stateCodes, (stateCode) =>\n          getTotalStatistic(\n            data[stateCode],\n            statistic,\n            currentMap.option === MAP_OPTIONS.PER_MILLION\n              ? STATE_POPULATIONS_MIL[stateCode]\n              : 1\n          )\n        )\n      : d3.max(stateCodes, (stateCode) =>\n          data[stateCode]?.districts\n            ? d3.max(Object.values(data[stateCode].districts), (districtData) =>\n                getTotalStatistic(districtData, statistic)\n              )\n            : 0\n        );\n  }, [data, currentMap.option, currentMap.view, statistic]);\n\n  const statisticTotal = useMemo(() => {\n    return getTotalStatistic(\n      data[currentMap.code],\n      statistic,\n      currentMap.option === MAP_OPTIONS.PER_MILLION\n        ? STATE_POPULATIONS_MIL[currentMap.code]\n        : 1\n    );\n  }, [data, currentMap.code, currentMap.option, statistic]);\n\n  const mapScale = useMemo(() => {\n    if (currentMap.option === MAP_OPTIONS.ZONES) {\n      return d3.scaleOrdinal(\n        Object.keys(ZONE_COLORS),\n        Object.values(ZONE_COLORS)\n      );\n    } else if (currentMap.option === MAP_OPTIONS.HOTSPOTS) {\n      const {width} = svgRef.current.getBoundingClientRect();\n      return d3\n        .scaleSqrt([0, Math.max(statisticMax, 1)], [0, width / 10])\n        .clamp(true)\n        .nice(3);\n    } else {\n      return d3\n        .scaleSequential(\n          [0, Math.max(1, statisticMax)],\n          colorInterpolator[statistic]\n        )\n        .clamp(true);\n    }\n  }, [currentMap.option, statistic, statisticMax]);\n\n  useEffect(() => {\n    if (!geoDataResponse.data) return;\n    const geoData = geoDataResponse.data;\n\n    const topology = topojson.feature(\n      geoData,\n      geoData.objects[mapMeta.graphObjectStates || mapMeta.graphObjectDistricts]\n    );\n\n    const svg = d3.select(svgRef.current);\n\n    const {width, height} = svgRef.current.getBoundingClientRect();\n    const projection = d3.geoMercator().fitSize([width, height], topology);\n    const path = d3.geoPath(projection);\n\n    // Add id to each feature\n    let features =\n      currentMap.option !== MAP_OPTIONS.HOTSPOTS\n        ? currentMap.view === MAP_VIEWS.STATES\n          ? topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectStates]\n            ).features\n          : topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectDistricts]\n            ).features\n        : [\n            ...topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectStates]\n            ).features,\n            ...topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectDistricts]\n            ).features,\n          ];\n\n    features = features.map((f) => {\n      const district = f.properties.district;\n      const state = f.properties.st_nm;\n      const obj = Object.assign({}, f);\n      obj.id = `${currentMap.code}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n\n    const fillColor = (d) => {\n      const stateCode = STATE_CODES[d.properties.st_nm];\n      const district = d.properties.district;\n      const stateData = data[stateCode];\n      const districtData = stateData?.districts?.[district];\n      let n;\n      if (currentMap.option === MAP_OPTIONS.ZONES) {\n        n = districtData?.zone || 0;\n      } else {\n        if (district) n = getTotalStatistic(districtData, statistic);\n        else\n          n = getTotalStatistic(\n            stateData,\n            statistic,\n            currentMap.option === MAP_OPTIONS.PER_MILLION\n              ? STATE_POPULATIONS_MIL[stateCode]\n              : 1\n          );\n      }\n      const color = n === 0 ? '#ffffff00' : mapScale(n);\n      return color;\n    };\n\n    const strokeColor = (d) => {\n      return currentMap.option === MAP_OPTIONS.ZONES\n        ? '#343a40'\n        : COLORS[statistic];\n    };\n\n    /* Draw map */\n    const t = d3.transition().duration(D3_TRANSITION_DURATION);\n    let onceTouchedRegion = null;\n    const regionSelection = svg\n      .select('.regions')\n      .selectAll('path')\n      .data(\n        currentMap.option !== MAP_OPTIONS.HOTSPOTS ? features : [],\n        (d) => d.id\n      )\n      .join(\n        (enter) => {\n          const sel = enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', 2)\n            .attr('stroke-opacity', 0)\n            .style('cursor', 'pointer')\n            .on('mouseenter', (d) => {\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .on('mouseleave', (d) => {\n              if (onceTouchedRegion === d) onceTouchedRegion = null;\n            })\n            .on('touchstart', (d) => {\n              if (onceTouchedRegion === d) onceTouchedRegion = null;\n              else onceTouchedRegion = d;\n            })\n            .on('click', (d) => {\n              d3.event.stopPropagation();\n              if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE)\n                return;\n              // Disable pointer events till the new map is rendered\n              svg.attr('pointer-events', 'none');\n              svg\n                .select('.regions')\n                .selectAll('path')\n                .attr('pointer-events', 'none');\n              // Switch map\n              changeMap(STATE_CODES[d.properties.st_nm]);\n            })\n            .attr('fill', fillColor)\n            .attr('stroke', strokeColor);\n          sel.append('title');\n          return sel;\n        },\n        (update) =>\n          update.call((update) =>\n            update\n              .transition(t)\n              .attr('fill', fillColor)\n              .attr('stroke', strokeColor)\n          )\n      )\n      .attr('pointer-events', 'all');\n\n    regionSelection.select('title').text((d) => {\n      if (currentMap.option === MAP_OPTIONS.TOTAL) {\n        const state = d.properties.st_nm;\n        const stateCode = STATE_CODES[state];\n        const district = d.properties.district;\n\n        const stateData = data[stateCode];\n        const districtData = stateData?.districts?.[district];\n        let n;\n        if (district) n = getTotalStatistic(districtData, statistic);\n        else n = getTotalStatistic(stateData, statistic);\n        return (\n          formatNumber(100 * (n / (statisticTotal || 0.001))) +\n          '% from ' +\n          capitalizeAll(district ? district : state)\n        );\n      }\n    });\n\n    svg\n      .transition()\n      .duration(mapMeta.mapType === MAP_TYPES.STATE ? t.duration() / 2 : 0)\n      .on('end', () =>\n        svg.attr('class', currentMap.option === MAP_OPTIONS.ZONES ? 'zone' : '')\n      );\n\n    /* ----------BUBBLE MAP----------*/\n    let circlesData = [];\n    if (currentMap.option === MAP_OPTIONS.HOTSPOTS) {\n      circlesData = features\n        .map((d) => {\n          const stateCode = STATE_CODES[d.properties.st_nm];\n          const district = d.properties.district;\n\n          const stateData = data[stateCode];\n          const districtData = stateData?.districts?.[district];\n          if (district) d.value = getTotalStatistic(districtData, statistic);\n          else\n            d.value = getTotalStatistic(\n              stateData?.districts?.[UNKNOWN_DISTRICT_KEY],\n              statistic\n            );\n          return d;\n        })\n        .sort((a, b) => b.value - a.value);\n    }\n\n    svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(circlesData, (d) => d.id)\n      .join((enter) =>\n        enter\n          .append('circle')\n          .attr('transform', (d) => `translate(${path.centroid(d)})`)\n          .attr('fill-opacity', 0.5)\n          .style('cursor', 'pointer')\n          .attr('pointer-events', 'all')\n          .on('mouseenter', (d) => {\n            setRegionHighlighted({\n              stateCode: STATE_CODES[d.properties.st_nm],\n              districtName: d.properties.district || UNKNOWN_DISTRICT_KEY,\n            });\n          })\n          .on('click', () => {\n            d3.event.stopPropagation();\n          })\n      )\n      .transition(t)\n      .attr('fill', COLORS[statistic] + '70')\n      .attr('stroke', COLORS[statistic] + '70')\n      .attr('r', (d) => mapScale(d.value));\n    /* ------------------------------*/\n\n    let meshStates = [];\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [\n        topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectStates]),\n      ];\n      meshStates[0].id = mapMeta.graphObjectStates;\n    }\n    let meshDistricts = [];\n    if (currentMap.view === MAP_VIEWS.DISTRICTS) {\n      // Add id to mesh\n      meshDistricts = [\n        topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectDistricts]),\n      ];\n      meshDistricts[0].id = mapMeta.graphObjectDistricts;\n    }\n\n    svg\n      .select(\n        currentMap.view === MAP_VIEWS.STATES\n          ? '.state-borders'\n          : '.district-borders'\n      )\n      .attr('fill', 'none')\n      .attr('stroke-width', function () {\n        return mapMeta.mapType === MAP_TYPES.COUNTRY &&\n          currentMap.view === MAP_VIEWS.DISTRICTS\n          ? 0\n          : width / 250;\n      })\n      .selectAll('path')\n      .data(\n        currentMap.view === MAP_VIEWS.STATES ? meshStates : meshDistricts,\n        (d) => d.id\n      )\n      .join((enter) => enter.append('path').attr('d', path))\n      .transition(t)\n      .attr('stroke', () => {\n        if (currentMap.option === MAP_OPTIONS.ZONES) {\n          return '#00000060';\n        } else {\n          return COLORS[statistic] + '30';\n        }\n      });\n\n    svg\n      .select(\n        currentMap.view === MAP_VIEWS.STATES\n          ? '.district-borders'\n          : '.state-borders'\n      )\n      .selectAll('path')\n      .data(\n        currentMap.view === MAP_VIEWS.STATES ? meshDistricts : meshStates,\n        (d) => d.id\n      )\n      .join((enter) =>\n        enter\n          .append('path')\n          .attr('d', path)\n          .attr('fill', 'none')\n          .attr('stroke-width', width / 250)\n      )\n      .transition(t)\n      .attr('stroke', '#343a4050');\n\n    // Reset on tapping outside map\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      if (mapMeta.mapType !== MAP_TYPES.STATE) {\n        setRegionHighlighted({\n          stateCode: 'TT',\n          districtName: null,\n        });\n      }\n    });\n  }, [\n    geoDataResponse.data,\n    data,\n    mapMeta,\n    currentMap,\n    setRegionHighlighted,\n    changeMap,\n    isCountryLoaded,\n    mapScale,\n    statistic,\n    statisticTotal,\n  ]);\n\n  useEffect(() => {\n    if (!geoDataResponse.data) return;\n    const state = STATE_NAMES[regionHighlighted.stateCode];\n    const district = regionHighlighted.districtName;\n\n    const svg = d3.select(svgRef.current);\n    if (currentMap.option === MAP_OPTIONS.HOTSPOTS) {\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            state === d.properties.st_nm &&\n            (!district ||\n              district === d.properties?.district ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.5;\n        });\n    } else {\n      svg\n        .select('.regions')\n        .selectAll('path')\n        .each(function (d) {\n          const highlighted =\n            state === d.properties.st_nm &&\n            (currentMap.view === MAP_VIEWS.STATES ||\n              district === d.properties?.district);\n          if (highlighted) this.parentNode.appendChild(this);\n          d3.select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n        });\n    }\n  }, [\n    geoDataResponse.data,\n    data,\n    currentMap.option,\n    currentMap.view,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    statistic,\n  ]);\n\n  return (\n    <React.Fragment>\n      <div className=\"svg-parent map-parent\">\n        <svg id=\"chart\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          {currentMap.view === MAP_VIEWS.DISTRICTS && (\n            <g className=\"district-borders\" />\n          )}\n          {currentMap.option === MAP_OPTIONS.HOTSPOTS && (\n            <g className=\"circles\" />\n          )}\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n          !!getTotalStatistic(\n            data[currentMap.code]?.districts?.[UNKNOWN_DISTRICT_KEY],\n            statistic\n          ) && (\n            <div className=\"disclaimer\">\n              <Icon.AlertCircle />\n              {t('District-wise {{statistic}} numbers need reconciliation', {\n                statistic: t(statistic),\n              })}\n            </div>\n          )}\n      </div>\n\n      {mapScale && (\n        <MapLegend\n          data={data}\n          mapScale={mapScale}\n          mapOption={currentMap.option}\n          statistic={statistic}\n        />\n      )}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default MapVisualizer;\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport ReactTooltip from 'react-tooltip';\n\nexport const testedToolTip = (\n  <span className=\"tooltip-tested\" onClick={(e) => e.stopPropagation()}>\n    <Icon.Info\n      data-for=\"tested\"\n      data-tip=\"Reporting total samples tested from ICMR data\"\n      data-event=\"touchstart mouseover\"\n      data-event-off=\"mouseleave\"\n    />\n    <ReactTooltip\n      id=\"tested\"\n      effect=\"solid\"\n      multiline={true}\n      scrollHide={true}\n      globalEventOff=\"click\"\n    />\n  </span>\n);\n","import MapVisualizerLoader from './loaders/mapvisualizer';\nimport MapVisualizer from './mapvisualizer';\nimport {testedToolTip} from './tooltips';\n\nimport {\n  MAP_META,\n  MAP_OPTIONS,\n  MAP_STATISTICS,\n  MAP_TYPES,\n  MAP_VIEWS,\n  STATE_NAMES,\n  STATE_POPULATIONS_MIL,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {\n  capitalize,\n  formatNumber,\n  formatDate,\n  formatLastUpdated,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport {PinIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  Suspense,\n} from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useSprings, animated} from 'react-spring';\n\nfunction MapExplorer({\n  stateCode,\n  data,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  mapStatistic,\n  setMapStatistic,\n  isCountryLoaded = true,\n}) {\n  const {t} = useTranslation();\n  const history = useHistory();\n\n  const [width, setWidth] = useState(480);\n  const mapExplorerRef = useRef();\n\n  useEffect(() => {\n    setWidth(mapExplorerRef.current.clientWidth);\n  }, []);\n\n  const [currentMap, setCurrentMap] = useState({\n    code: stateCode,\n    view:\n      MAP_META[stateCode].mapType === MAP_TYPES.COUNTRY\n        ? MAP_VIEWS.STATES\n        : MAP_VIEWS.DISTRICTS,\n    option: MAP_OPTIONS.TOTAL,\n  });\n  const currentMapMeta = MAP_META[currentMap.code];\n\n  const currentMapData =\n    currentMapMeta.mapType === MAP_TYPES.COUNTRY\n      ? data\n      : {[currentMap.code]: data[currentMap.code]};\n\n  useEffect(() => {\n    if (regionHighlighted.districtName) {\n      if (\n        currentMap.code !== regionHighlighted.stateCode &&\n        !(\n          currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\n          currentMap.view === MAP_VIEWS.DISTRICTS\n        )\n      ) {\n        const newMapMeta = MAP_META[regionHighlighted.stateCode];\n        if (!newMapMeta) {\n          return;\n        }\n        setCurrentMap({\n          code: regionHighlighted.stateCode,\n          view: MAP_VIEWS.DISTRICTS,\n          option:\n            currentMap.option === MAP_OPTIONS.PER_MILLION\n              ? MAP_OPTIONS.TOTAL\n              : currentMap.option,\n        });\n      }\n    } else if (isCountryLoaded && currentMapMeta.mapType === MAP_TYPES.STATE) {\n      setCurrentMap({\n        code: 'TT',\n        view:\n          currentMap.option === MAP_OPTIONS.ZONES\n            ? MAP_VIEWS.DISTRICTS\n            : MAP_VIEWS.STATES,\n        option: currentMap.option,\n      });\n    }\n  }, [\n    isCountryLoaded,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    currentMap.code,\n    currentMap.option,\n    currentMap.view,\n    currentMapMeta.mapType,\n  ]);\n\n  const switchMap = useCallback(\n    (stateCode) => {\n      const newMapMeta = MAP_META[stateCode];\n      if (!newMapMeta) {\n        return;\n      }\n      if (newMapMeta.mapType === MAP_TYPES.STATE) {\n        const districts = data[stateCode].districts;\n        const topDistrict = Object.keys(districts).sort(\n          (a, b) =>\n            getStatistic(districts[b], 'total', mapStatistic) -\n            getStatistic(districts[a], 'total', mapStatistic)\n        )[0];\n        ReactDOM.unstable_batchedUpdates(() => {\n          setRegionHighlighted({\n            stateCode: stateCode,\n            districtName: topDistrict,\n          });\n          setCurrentMap({\n            code: stateCode,\n            view: MAP_VIEWS.DISTRICTS,\n            option:\n              currentMap.option === MAP_OPTIONS.PER_MILLION\n                ? MAP_OPTIONS.TOTAL\n                : currentMap.option,\n          });\n        });\n      } else {\n        ReactDOM.unstable_batchedUpdates(() => {\n          setCurrentMap({\n            code: 'TT',\n            view:\n              currentMap.option === MAP_OPTIONS.ZONES\n                ? MAP_VIEWS.DISTRICTS\n                : MAP_VIEWS.STATES,\n            option: currentMap.option,\n          });\n          setRegionHighlighted({\n            stateCode: 'TT',\n            districtName: null,\n          });\n        });\n      }\n    },\n    [data, currentMap.option, mapStatistic, setRegionHighlighted]\n  );\n\n  const panelState = useMemo(() => {\n    const stateCode =\n      currentMap.view === MAP_VIEWS.STATES\n        ? regionHighlighted.stateCode\n        : currentMap.code;\n    const stateData = data[stateCode] || {};\n    return produce(stateData, (draft) => {\n      draft.state = STATE_NAMES[stateCode];\n    });\n  }, [data, regionHighlighted.stateCode, currentMap.view, currentMap.code]);\n\n  const hoveredRegion = useMemo(() => {\n    const hoveredData =\n      (regionHighlighted.districtName\n        ? data[regionHighlighted.stateCode]?.districts?.[\n            regionHighlighted.districtName\n          ]\n        : data[regionHighlighted.stateCode]) || {};\n    return produce(hoveredData, (draft) => {\n      draft.name =\n        regionHighlighted.districtName ||\n        STATE_NAMES[regionHighlighted.stateCode];\n      if (!regionHighlighted.districtName)\n        draft.population_millions =\n          STATE_POPULATIONS_MIL[regionHighlighted.stateCode];\n    });\n  }, [data, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const handleTabClick = (option) => {\n    switch (option) {\n      case MAP_OPTIONS.TOTAL:\n        setCurrentMap({\n          code: currentMap.code,\n          view:\n            currentMapMeta.mapType === MAP_TYPES.COUNTRY\n              ? MAP_VIEWS.STATES\n              : MAP_VIEWS.DISTRICTS,\n          option: MAP_OPTIONS.TOTAL,\n        });\n        if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n          setRegionHighlighted({\n            stateCode: regionHighlighted.stateCode,\n            districtName: null,\n          });\n        return;\n      case MAP_OPTIONS.PER_MILLION:\n        if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\n        setCurrentMap({\n          code: currentMap.code,\n          view: MAP_VIEWS.STATES,\n          option: MAP_OPTIONS.PER_MILLION,\n        });\n        setRegionHighlighted({\n          stateCode: regionHighlighted.stateCode,\n          districtName: null,\n        });\n        return;\n      case MAP_OPTIONS.HOTSPOTS:\n        if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\n        setCurrentMap({\n          code: currentMap.code,\n          view: MAP_VIEWS.DISTRICTS,\n          option: MAP_OPTIONS.HOTSPOTS,\n        });\n        return;\n      case MAP_OPTIONS.ZONES:\n        setCurrentMap({\n          code: currentMap.code,\n          view: MAP_VIEWS.DISTRICTS,\n          option: MAP_OPTIONS.ZONES,\n        });\n        if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n          setRegionHighlighted({\n            stateCode: 'TT',\n            districtName: null,\n          });\n        return;\n      default:\n        return;\n    }\n  };\n\n  const springs = useSprings(\n    MAP_STATISTICS.length,\n    MAP_STATISTICS.map((statistic) => ({\n      total: getStatistic(panelState, 'total', statistic),\n      delta: getStatistic(panelState, 'delta', statistic),\n      from: {\n        total: getStatistic(panelState, 'total', statistic),\n        delta: getStatistic(panelState, 'delta', statistic),\n      },\n      config: {\n        tension: 500,\n        clamp: true,\n      },\n    }))\n  );\n\n  return (\n    <div\n      className={classnames(\n        'MapExplorer',\n        {stickied: anchor === 'mapexplorer'},\n        {hidden: anchor && anchor !== 'mapexplorer'}\n      )}\n    >\n      {window.innerWidth > 769 && (\n        <div\n          className={classnames('anchor', {stickied: anchor === 'mapexplorer'})}\n          onClick={() => {\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\n          }}\n        >\n          <PinIcon />\n        </div>\n      )}\n\n      <div className=\"header\">\n        <h1>\n          {currentMap.code === 'TT'\n            ? t('India')\n            : t(STATE_NAMES[currentMap.code])}{' '}\n          {t('Map')}\n        </h1>\n        <h6>\n          {t('{{action}} over a {{mapType}} for more details', {\n            action: t(window.innerWidth <= 769 ? 'Tap' : 'Hover'),\n            mapType: t(\n              currentMapMeta.mapType === MAP_TYPES.COUNTRY\n                ? 'state/UT'\n                : 'District'\n            ),\n          })}\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        {MAP_STATISTICS.map((statistic, index) => (\n          <div\n            key={statistic}\n            className={classnames('stats', statistic, {\n              focused: statistic === mapStatistic,\n            })}\n            onClick={() => setMapStatistic(statistic)}\n          >\n            <h5>{t(capitalize(statistic))}</h5>\n            <div className=\"stats-bottom\">\n              <animated.h1>\n                {springs[index].total.interpolate((total) =>\n                  formatNumber(Math.floor(total))\n                )}\n              </animated.h1>\n              {statistic !== 'tested' && (\n                <animated.h6>\n                  {springs[index].delta.interpolate((delta) =>\n                    delta > 0 ? `+${formatNumber(Math.floor(delta))}` : '\\u00A0'\n                  )}\n                </animated.h6>\n              )}\n              {statistic === 'tested' && (\n                <h6>\n                  {panelState?.total?.tested &&\n                    t('As of {{date}}', {\n                      date: formatDate(\n                        panelState.meta.tested['last_updated'],\n                        'dd MMM'\n                      ),\n                    })}\n                </h6>\n              )}\n            </div>\n            {statistic === 'tested' && panelState?.total?.tested && (\n              <a href={panelState.meta.tested.source} target=\"_noblank\">\n                <Icon.Link />\n              </a>\n            )}\n            {statistic === 'tested' &&\n              panelState.state === 'Total' &&\n              testedToolTip}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"meta\">\n        {currentMapMeta.mapType === MAP_TYPES.STATE && (\n          <div\n            className=\"map-button\"\n            onClick={() => history.push(`state/${currentMap.code}`)}\n          >\n            {t('Visit state page')}\n            <Icon.ArrowRightCircle />\n          </div>\n        )}\n\n        {currentMapMeta.mapType !== MAP_TYPES.STATE &&\n          panelState?.meta?.['last_updated'] && (\n            <div className=\"last-update\">\n              <h6>{t('Last updated')}</h6>\n              <h3>\n                {`${formatLastUpdated(panelState.meta['last_updated'])} ${t(\n                  'ago'\n                )}`}\n              </h3>\n            </div>\n          )}\n\n        <h2\n          className={classnames(mapStatistic, {\n            [hoveredRegion?.zone]: currentMap.option === MAP_OPTIONS.ZONES,\n          })}\n        >\n          {t(hoveredRegion.name)}\n          {hoveredRegion.name === UNKNOWN_DISTRICT_KEY &&\n            ` (${t(STATE_NAMES[regionHighlighted.stateCode])})`}\n        </h2>\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE && (\n          <div className=\"map-button\" onClick={() => switchMap('TT')}>\n            {t('Back')}\n          </div>\n        )}\n\n        {currentMap.option !== MAP_OPTIONS.ZONES &&\n          ((currentMap.view === MAP_VIEWS.DISTRICTS &&\n            regionHighlighted.districtName) ||\n            (currentMap.view === MAP_VIEWS.STATES &&\n              currentMap.option !== MAP_OPTIONS.TOTAL)) && (\n            <h1 className={classnames('district', mapStatistic)}>\n              {formatNumber(\n                getStatistic(\n                  hoveredRegion,\n                  'total',\n                  mapStatistic,\n                  currentMap.option === MAP_OPTIONS.PER_MILLION\n                    ? hoveredRegion.population_millions\n                    : 1\n                )\n              )}\n              <br />\n              <span>\n                {t(mapStatistic)}\n                {currentMap.option === MAP_OPTIONS.PER_MILLION &&\n                  ` ${t('per million')}`}\n              </span>\n            </h1>\n          )}\n      </div>\n\n      <div ref={mapExplorerRef}>\n        {mapStatistic && (\n          <Suspense\n            fallback={\n              <MapVisualizerLoader {...{width, statistic: mapStatistic}} />\n            }\n          >\n            <MapVisualizer\n              currentMap={currentMap}\n              data={currentMapData}\n              changeMap={switchMap}\n              regionHighlighted={regionHighlighted}\n              setRegionHighlighted={setRegionHighlighted}\n              statistic={mapStatistic}\n              isCountryLoaded={isCountryLoaded}\n            />\n          </Suspense>\n        )}\n      </div>\n\n      <div className=\"tabs-map\">\n        {Object.values(MAP_OPTIONS).map((option) => (\n          <div\n            key={option}\n            className={classnames('tab', {\n              focused: currentMap.option === option,\n            })}\n            onClick={() => handleTabClick(option)}\n          >\n            <h4>\n              {t(option)}\n              {option === MAP_OPTIONS.PER_MILLION && <sup>&dagger;</sup>}\n            </h4>\n          </div>\n        ))}\n      </div>\n\n      <h6 className={classnames('footnote', 'table-fineprint')}>\n        &dagger; {`${t('Based on 2019 population projection by NCP')} (`}\n        <a\n          href=\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\"\n          target=\"_noblank\"\n          style={{color: '#6c757d'}}\n        >\n          {t('source')}\n        </a>\n        )\n      </h6>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\n    return false;\n  }\n  if (!equal(prevProps.mapStatistic, currProps.mapStatistic)) {\n    return false;\n  }\n  if (!equal(prevProps.anchor, currProps.anchor)) {\n    return false;\n  }\n  if (\n    !equal(\n      prevProps.data?.TT?.meta?.['last_updated'],\n      currProps.data?.TT?.meta?.['last_updated']\n    )\n  ) {\n    return false;\n  }\n  if (!equal(prevProps.data?.TT?.total, currProps.data?.TT?.total)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(MapExplorer, isEqual);\n","import {\n  COLORS,\n  D3_TRANSITION_DURATION,\n  TIMESERIES_STATISTICS,\n} from '../constants';\nimport {useResizeObserver} from '../hooks/useresizeobserver';\nimport {\n  capitalize,\n  formatNumber,\n  formatDate,\n  getStatistic,\n  parseIndiaDate,\n} from '../utils/commonfunctions';\n\nimport classnames from 'classnames';\nimport * as d3 from 'd3';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport equal from 'fast-deep-equal';\nimport React, {useState, useEffect, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction TimeSeries({timeseries, dates, chartType, isUniform, isLog}) {\n  const {t} = useTranslation();\n  const refs = useRef([]);\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const [highlightedDate, setHighlightedDate] = useState();\n\n  useEffect(() => {\n    setHighlightedDate(dates[dates.length - 1]);\n  }, [dates]);\n\n  useEffect(() => {\n    const T = dates.length;\n\n    const {width, height} =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    // Margins\n    const margin = {top: 15, right: 35, bottom: 25, left: 25};\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n\n    const yBufferTop = 1.2;\n    const yBufferBottom = 1.1;\n\n    const xScale = d3\n      .scaleTime()\n      .clamp(true)\n      .domain([parseIndiaDate(dates[0]), parseIndiaDate(dates[T - 1])])\n      .range([margin.left, chartRight]);\n\n    // Number of x-axis ticks\n    const numTicksX = width < 480 ? 4 : 7;\n\n    const xAxis = (g) =>\n      g.attr('class', 'x-axis').call(\n        d3\n          .axisBottom(xScale)\n          .ticks(numTicksX)\n          .tickFormat((date) => formatDate(date, 'dd MMM'))\n      );\n\n    const xAxis2 = (g, yScale) => {\n      g.attr('class', 'x-axis2')\n        .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\n        .select('.domain')\n        .style('transform', `translateY(${yScale(0)}px)`);\n\n      if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n      else g.select('.domain').attr('opacity', 0);\n    };\n\n    const yAxis = (g, yScale) =>\n      g\n        .attr('class', 'y-axis')\n        .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(4));\n\n    const uniformScaleMin = d3.min(dates, (date) =>\n      getStatistic(timeseries[date], chartType, 'active')\n    );\n\n    const uniformScaleMax = d3.max(dates, (date) =>\n      Math.max(\n        getStatistic(timeseries[date], chartType, 'confirmed'),\n        getStatistic(timeseries[date], chartType, 'recovered'),\n        getStatistic(timeseries[date], chartType, 'deceased')\n      )\n    );\n\n    const yScaleUniformLinear = d3\n      .scaleLinear()\n      .clamp(true)\n      .domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)])\n      .nice(4)\n      .range([chartBottom, margin.top]);\n\n    const yScaleUniformLog = d3\n      .scaleLog()\n      .clamp(true)\n      .domain([\n        Math.max(1, uniformScaleMin),\n        Math.max(10, yBufferTop * uniformScaleMax),\n      ])\n      .nice(4)\n      .range([chartBottom, margin.top]);\n\n    const generateYScale = (statistic) => {\n      if (isUniform && isLog && statistic !== 'tested') return yScaleUniformLog;\n\n      if (isUniform && statistic !== 'tested') return yScaleUniformLinear;\n\n      if (isLog)\n        return d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(\n              1,\n              d3.min(dates, (date) =>\n                getStatistic(timeseries[date], chartType, statistic)\n              )\n            ),\n            Math.max(\n              10,\n              yBufferTop *\n                d3.max(dates, (date) =>\n                  getStatistic(timeseries[date], chartType, statistic)\n                )\n            ),\n          ])\n          .nice(4)\n          .range([chartBottom, margin.top]);\n\n      return d3\n        .scaleLinear()\n        .clamp(true)\n        .domain([\n          yBufferBottom *\n            Math.min(\n              0,\n              d3.min(dates, (date) =>\n                getStatistic(timeseries[date], chartType, statistic)\n              )\n            ),\n          Math.max(\n            1,\n            yBufferTop *\n              d3.max(dates, (date) =>\n                getStatistic(timeseries[date], chartType, statistic)\n              )\n          ),\n        ])\n        .nice(4)\n        .range([chartBottom, margin.top]);\n    };\n\n    function mousemove() {\n      const xm = d3.mouse(this)[0];\n      const date = xScale.invert(xm);\n      const bisectDate = d3.bisector((date) => parseIndiaDate(date)).left;\n      const index = bisectDate(dates, date, 1);\n      setHighlightedDate(dates[index]);\n    }\n\n    function mouseout() {\n      setHighlightedDate(dates[T - 1]);\n    }\n\n    /* Begin drawing charts */\n    refs.current.forEach((ref, i) => {\n      const svg = d3.select(ref);\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n      const statistic = TIMESERIES_STATISTICS[i];\n      const yScale = generateYScale(statistic);\n      const color = COLORS[statistic];\n\n      /* X axis */\n      svg\n        .select('.x-axis')\n        .style('transform', `translateY(${chartBottom}px)`)\n        .transition(t)\n        .call(xAxis);\n      svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n\n      /* Y axis */\n      svg\n        .select('.y-axis')\n        .style('transform', `translateX(${chartRight}px)`)\n        .transition(t)\n        .call(yAxis, yScale);\n\n      /* Path dots */\n      svg\n        .selectAll('circle')\n        .data(dates, (date) => date)\n        .join((enter) =>\n          enter\n            .append('circle')\n            .attr('fill', color)\n            .attr('stroke', color)\n            .attr('r', 2)\n            .attr('cy', chartBottom)\n            .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        )\n        .transition(t)\n        .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        .attr('cy', (date) =>\n          yScale(getStatistic(timeseries[date], chartType, statistic))\n        );\n\n      if (chartType === 'total') {\n        svg\n          .selectAll('.stem')\n          .transition(t)\n          .attr('y1', yScale(0))\n          .attr('y2', yScale(0))\n          .remove();\n\n        const line = d3\n          .line()\n          .curve(d3.curveMonotoneX)\n          .x((date) => xScale(parseIndiaDate(date)))\n          .y((date) =>\n            yScale(getStatistic(timeseries[date], chartType, statistic))\n          );\n\n        let pathLength;\n        svg\n          .selectAll('.trend')\n          .data(T ? [dates] : [])\n          .join(\n            (enter) =>\n              enter\n                .append('path')\n                .attr('class', 'trend')\n                .attr('fill', 'none')\n                .attr('stroke', color + '50')\n                .attr('stroke-width', 4)\n                .attr('d', line)\n                .attr('stroke-dasharray', function () {\n                  return (pathLength = this.getTotalLength());\n                })\n                .call((enter) =>\n                  enter\n                    .attr('stroke-dashoffset', pathLength)\n                    .transition(t)\n                    .attr('stroke-dashoffset', 0)\n                ),\n            (update) =>\n              update\n                .attr('stroke-dasharray', null)\n                .transition(t)\n                .attrTween('d', function (date) {\n                  const previous = d3.select(this).attr('d');\n                  const current = line(date);\n                  return interpolatePath(previous, current);\n                })\n          );\n      } else {\n        /* DAILY TRENDS */\n        svg.selectAll('.trend').remove();\n\n        svg\n          .selectAll('.stem')\n          .data(dates, (date) => date)\n          .join((enter) =>\n            enter\n              .append('line')\n              .attr('class', 'stem')\n              .style('stroke', color + '99')\n              .style('stroke-width', 4)\n              .attr('x1', (date) => xScale(parseIndiaDate(date)))\n              .attr('y1', chartBottom)\n              .attr('x2', (date) => xScale(parseIndiaDate(date)))\n              .attr('y2', chartBottom)\n          )\n          .transition(t)\n          .attr('x1', (date) => xScale(parseIndiaDate(date)))\n          .attr('y1', yScale(0))\n          .attr('x2', (date) => xScale(parseIndiaDate(date)))\n          .attr('y2', (date) =>\n            yScale(getStatistic(timeseries[date], chartType, statistic))\n          );\n      }\n\n      svg.selectAll('*').attr('pointer-events', 'none');\n      svg\n        .on('mousemove', mousemove)\n        .on('touchmove', mousemove)\n        .on('mouseout', mouseout)\n        .on('touchend', mouseout);\n    });\n  }, [chartType, dimensions, isUniform, isLog, timeseries, dates]);\n\n  useEffect(() => {\n    refs.current.forEach((ref) => {\n      const svg = d3.select(ref);\n      svg\n        .selectAll('circle')\n        .attr('r', (date) => (date === highlightedDate ? 4 : 2));\n    });\n  }, [highlightedDate]);\n\n  return (\n    <React.Fragment>\n      <div className=\"TimeSeries\">\n        {TIMESERIES_STATISTICS.map((statistic, index) => (\n          <div\n            key={statistic}\n            className={classnames('svg-parent', `is-${statistic}`)}\n            ref={wrapperRef}\n          >\n            {highlightedDate && (\n              <div className={classnames('stats', `is-${statistic}`)}>\n                <h5 className=\"title\">{capitalize(t(statistic))}</h5>\n                <h5 className=\"title\">\n                  {formatDate(highlightedDate, 'dd MMMM')}\n                </h5>\n                <div className=\"stats-bottom\">\n                  <h2>\n                    {formatNumber(\n                      getStatistic(\n                        timeseries?.[highlightedDate],\n                        chartType,\n                        statistic\n                      )\n                    )}\n                  </h2>\n                  {/* <h6>Delta</h6>*/}\n                </div>\n              </div>\n            )}\n            <svg\n              ref={(element) => {\n                refs.current[index] = element;\n              }}\n              preserveAspectRatio=\"xMidYMid meet\"\n            >\n              <g className=\"x-axis\" />\n              <g className=\"x-axis2\" />\n              <g className=\"y-axis\" />\n            </svg>\n          </div>\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.chartType, prevProps.chartType)) {\n    return false;\n  }\n  if (!equal(currProps.isUniform, prevProps.isUniform)) {\n    return false;\n  }\n  if (!equal(currProps.isLog, prevProps.isLog)) {\n    return false;\n  }\n  if (!equal(currProps.stateCode, prevProps.stateCode)) {\n    return false;\n  }\n  if (!equal(currProps.dates, prevProps.dates)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(TimeSeries, isEqual);\n","import TimeSeries from './timeseries';\n\nimport {STATE_NAMES, TIMESERIES_OPTIONS} from '../constants';\nimport {getIndiaYesterdayISO, parseIndiaDate} from '../utils/commonfunctions';\n\nimport 'intersection-observer';\n\nimport {PinIcon, IssueOpenedIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {formatISO, sub} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useMemo, useRef, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useIsVisible} from 'react-is-visible';\nimport {useLocalStorage} from 'react-use';\n\nfunction TimeSeriesExplorer({\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  stateCodes,\n}) {\n  const {t} = useTranslation();\n  const [timeseriesOption, setTimeseriesOption] = useState(\n    TIMESERIES_OPTIONS.MONTH\n  );\n  const [chartType, setChartType] = useLocalStorage('chartType', 'total');\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', true);\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n\n  const dates = useMemo(() => {\n    const today = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(timeseries || {}).filter(\n      (date) => date <= today\n    );\n\n    if (timeseriesOption === TIMESERIES_OPTIONS.TWO_WEEKS) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {weeks: 2}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    } else if (timeseriesOption === TIMESERIES_OPTIONS.MONTH) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {months: 1}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    }\n    return pastDates;\n  }, [timeseries, timelineDate, timeseriesOption]);\n\n  const handleChange = ({target}) => {\n    setRegionHighlighted({\n      stateCode: target.value,\n      districtName: null,\n    });\n  };\n\n  return (\n    <div\n      className={classnames('TimeSeriesExplorer', {\n        stickied: anchor === 'timeseries',\n      })}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', {\n            stickied: anchor === 'timeseries',\n          })}\n          onClick={() => {\n            setAnchor(anchor === 'timeseries' ? null : 'timeseries');\n          }}\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        <div className=\"tabs\">\n          <div\n            className={`tab ${chartType === 'total' ? 'focused' : ''}`}\n            onClick={() => {\n              setChartType('total');\n            }}\n          >\n            <h4>{t('Cumulative')}</h4>\n          </div>\n          <div\n            className={`tab ${chartType === 'delta' ? 'focused' : ''}`}\n            onClick={() => {\n              setChartType('delta');\n              setIsLog(false);\n            }}\n          >\n            <h4>{t('Daily')}</h4>\n          </div>\n        </div>\n\n        <div className=\"scale-modes\">\n          <label className=\"main\">{t('Scale Modes')}</label>\n          <div className=\"timeseries-mode\">\n            <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n            <input\n              id=\"timeseries-mode\"\n              type=\"checkbox\"\n              className=\"switch\"\n              checked={isUniform}\n              aria-label={t('Checked by default to scale uniformly.')}\n              onChange={() => {\n                setIsUniform(!isUniform);\n              }}\n            />\n          </div>\n          <div\n            className={`timeseries-logmode ${\n              chartType !== 'total' ? 'disabled' : ''\n            }`}\n          >\n            <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n            <input\n              id=\"timeseries-logmode\"\n              type=\"checkbox\"\n              checked={chartType === 'total' && isLog}\n              className=\"switch\"\n              disabled={chartType !== 'total'}\n              onChange={() => {\n                setIsLog(!isLog);\n              }}\n            />\n          </div>\n        </div>\n\n        {stateCodes && (\n          <div className=\"trends-state-name\">\n            <select value={regionHighlighted.stateCode} onChange={handleChange}>\n              {stateCodes.map((stateCode) => {\n                return (\n                  <option value={stateCode} key={stateCode}>\n                    {stateCode === 'TT'\n                      ? t('All States')\n                      : t(STATE_NAMES[stateCode])}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        )}\n      </div>\n\n      {isVisible && (\n        <TimeSeries\n          stateCode={regionHighlighted.stateCode}\n          {...{timeseries, dates, chartType, isUniform, isLog}}\n        />\n      )}\n\n      <div className=\"pills\">\n        {Object.values(TIMESERIES_OPTIONS).map((option) => (\n          <button\n            key={option}\n            type=\"button\"\n            className={classnames({selected: timeseriesOption === option})}\n            onClick={() => setTimeseriesOption(option)}\n          >\n            {t(option)}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"alert\">\n        <IssueOpenedIcon size={24} />\n        <div className=\"alert-right\">\n          {t('Tested chart is independent of uniform scaling')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  }\n  if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  }\n  if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(TimeSeriesExplorer, isEqual);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Compass = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\"\n  }));\n});\nCompass.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCompass.displayName = 'Compass';\nexport default Compass;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _sx = _interopRequireDefault(require(\"./sx\"));\n\nvar _constants = require(\"./constants\");\n\nvar _theme = _interopRequireDefault(require(\"./theme\"));\n\nvar _Box = _interopRequireDefault(require(\"./Box\"));\n\nvar SELECTED_CLASS = 'selected';\n\nvar Wrapper = _styledComponents[\"default\"].li.withConfig({\n  displayName: \"Breadcrumb__Wrapper\",\n  componentId: \"sc-1hutxdl-0\"\n})([\"display:inline-block;white-space:nowrap;list-style:none;&::after{padding-right:0.5em;padding-left:0.5em;color:\", \";font-size:\", \";content:'/';}&:first-child{margin-left:0;}&:last-child{&::after{content:none;}}\"], (0, _constants.get)('colors.gray.2'), (0, _constants.get)('fontSizes.1'));\n\nvar BreadcrumbBase = function BreadcrumbBase(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      theme = _ref.theme,\n      rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"className\", \"children\", \"theme\"]);\n  var classes = (0, _classnames[\"default\"])(className, 'Breadcrumb');\n\n  var wrappedChildren = _react[\"default\"].Children.map(children, function (child) {\n    return /*#__PURE__*/_react[\"default\"].createElement(Wrapper, {\n      theme: theme\n    }, child);\n  });\n\n  return /*#__PURE__*/_react[\"default\"].createElement(\"nav\", (0, _extends2[\"default\"])({\n    className: classes,\n    \"aria-label\": \"breadcrumb\"\n  }, rest), /*#__PURE__*/_react[\"default\"].createElement(_Box[\"default\"], {\n    as: \"ol\",\n    my: 0,\n    pl: 0\n  }, wrappedChildren));\n};\n\nBreadcrumbBase.displayName = \"BreadcrumbBase\";\nvar Breadcrumb = (0, _styledComponents[\"default\"])(BreadcrumbBase).withConfig({\n  displayName: \"Breadcrumb\",\n  componentId: \"sc-1hutxdl-1\"\n})([\"display:flex;justify-content:space-between;\", \";\", \";\", \";\"], _constants.COMMON, _constants.FLEX, _sx[\"default\"]);\nBreadcrumb.Item = _styledComponents[\"default\"].a.attrs(function (props) {\n  return {\n    activeClassName: typeof props.to === 'string' ? 'selected' : '',\n    className: (0, _classnames[\"default\"])(props.selected && SELECTED_CLASS, props.className),\n    'aria-current': props.selected ? 'page' : null\n  };\n}).withConfig({\n  displayName: \"Breadcrumb__Item\",\n  componentId: \"sc-1hutxdl-2\"\n})([\"color:\", \";display:inline-block;font-size:\", \";text-decoration:none;&:hover{text-decoration:underline;}&.selected{color:\", \";pointer-events:none;}\", \" \", \";\"], (0, _constants.get)('colors.blue.5'), (0, _constants.get)('fontSizes.1'), (0, _constants.get)('colors.gray.7'), _constants.COMMON, _sx[\"default\"]);\nBreadcrumb.defaultProps = {\n  theme: _theme[\"default\"]\n};\nBreadcrumb.propTypes = (0, _objectSpread2[\"default\"])({}, _constants.COMMON.propTypes, {}, _sx[\"default\"].propTypes);\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.Item.defaultProps = {\n  theme: _theme[\"default\"]\n};\nBreadcrumb.Item.propTypes = (0, _objectSpread2[\"default\"])({\n  as: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].elementType]),\n  href: _propTypes[\"default\"].string,\n  selected: _propTypes[\"default\"].bool\n}, _sx[\"default\"].propTypes, {}, _constants.COMMON.propTypes);\nBreadcrumb.Item.displayName = 'Breadcrumb.Item';\nvar _default = Breadcrumb;\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _Button = _interopRequireDefault(require(\"./Button\"));\n\nvar _Details = _interopRequireDefault(require(\"./Details\"));\n\nvar _constants = require(\"./constants\");\n\nvar _DropdownStyles = _interopRequireDefault(require(\"./DropdownStyles\"));\n\nvar _theme = _interopRequireDefault(require(\"./theme\"));\n\nvar _sx = _interopRequireDefault(require(\"./sx\"));\n\nvar StyledDetails = (0, _styledComponents[\"default\"])(_Details[\"default\"]).withConfig({\n  displayName: \"Dropdown__StyledDetails\",\n  componentId: \"sc-3wysgd-0\"\n})([\"position:relative;display:inline-block;\"]);\n\nvar Dropdown = function Dropdown(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"children\", \"className\"]);\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledDetails, (0, _extends2[\"default\"])({\n    overlay: true,\n    className: className\n  }, rest), children);\n};\n\nDropdown.displayName = \"Dropdown\";\n\nDropdown.Button = function (_ref2) {\n  var children = _ref2.children,\n      rest = (0, _objectWithoutProperties2[\"default\"])(_ref2, [\"children\"]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], (0, _extends2[\"default\"])({\n    as: \"summary\",\n    \"aria-haspopup\": \"true\"\n  }, rest), children, /*#__PURE__*/_react[\"default\"].createElement(Dropdown.Caret, null));\n};\n\nDropdown.Caret = _styledComponents[\"default\"].div.withConfig({\n  displayName: \"Dropdown__Caret\",\n  componentId: \"sc-3wysgd-1\"\n})([\"border:4px solid transparent;margin-left:12px;border-top-color:currentcolor;border-bottom-width:0;content:'';display:inline-block;height:0;vertical-align:middle;width:0;\", \";\", \";\"], _constants.COMMON, _sx[\"default\"]);\nDropdown.Menu = _styledComponents[\"default\"].ul.withConfig({\n  displayName: \"Dropdown__Menu\",\n  componentId: \"sc-3wysgd-2\"\n})([\"background-clip:padding-box;background-color:\", \";border:1px solid rgba(27,31,35,0.15);border-radius:\", \";box-shadow:0 3px 12px rgba(27,31,35,0.15);left:0;list-style:none;margin-top:2px;padding:5px 0 5px 0 !important;position:absolute;top:100%;width:160px;z-index:100;&::before{position:absolute;display:inline-block;content:'';}&::after{position:absolute;display:inline-block;content:'';}&::before{border:8px solid transparent;border-bottom-color:\", \";}&::after{border:7px solid transparent;border-bottom-color:\", \";}> ul{list-style:none;}\", \";\", \";\", \";\"], (0, _constants.get)('colors.white'), (0, _constants.get)('radii.2'), (0, _constants.get)('colors.blackfade15'), (0, _constants.get)('colors.white'), function (props) {\n  return props.direction ? (0, _DropdownStyles[\"default\"])(props.theme, props.direction) : '';\n}, _constants.COMMON, _sx[\"default\"]);\nDropdown.Item = _styledComponents[\"default\"].li.withConfig({\n  displayName: \"Dropdown__Item\",\n  componentId: \"sc-3wysgd-3\"\n})([\"display:block;padding:\", \" 10px \", \" 15px;overflow:hidden;color:\", \";text-overflow:ellipsis;white-space:nowrap;a{color:\", \";text-decoration:none;display:block;padding:\", \" 10px \", \" 15px;overflow:hidden;color:\", \";text-overflow:ellipsis;white-space:nowrap;}&:focus,a:focus{color:\", \";text-decoration:none;background-color:\", \";}&:hover,&:hover a{color:\", \";text-decoration:none;background-color:\", \";outline:none;}\", \";\", \";\"], (0, _constants.get)('space.1'), (0, _constants.get)('space.1'), (0, _constants.get)('colors.gray.9'), (0, _constants.get)('colors.gray.9'), (0, _constants.get)('space.1'), (0, _constants.get)('space.1'), (0, _constants.get)('colors.gray.9'), (0, _constants.get)('colors.white'), (0, _constants.get)('colors.blue.5'), (0, _constants.get)('colors.white'), (0, _constants.get)('colors.blue.5'), _constants.COMMON, _sx[\"default\"]);\nDropdown.Menu.propTypes = (0, _objectSpread2[\"default\"])({\n  direction: _propTypes[\"default\"].oneOf(['ne', 'e', 'se', 's', 'sw', 'w'])\n}, _constants.COMMON.propTypes, {}, _sx[\"default\"].propTypes);\nDropdown.Menu.defaultProps = {\n  direction: 'sw',\n  theme: _theme[\"default\"]\n};\nDropdown.Menu.displayName = 'Dropdown.Menu';\nDropdown.Item.defaultProps = {\n  theme: _theme[\"default\"]\n};\nDropdown.Item.propTypes = (0, _objectSpread2[\"default\"])({}, _constants.COMMON.propTypes, {}, _sx[\"default\"].propTypes);\nDropdown.Item.displayName = 'Dropdown.Item';\nDropdown.Button.defaultProps = (0, _objectSpread2[\"default\"])({\n  theme: _theme[\"default\"]\n}, _Button[\"default\"].defaultProps);\nDropdown.Button.propTypes = (0, _objectSpread2[\"default\"])({}, _Button[\"default\"].propTypes);\nDropdown.Button.displayName = 'Dropdown.Button';\nDropdown.Caret.defaultProps = {\n  theme: _theme[\"default\"]\n};\nDropdown.Caret.propTypes = (0, _objectSpread2[\"default\"])({}, _constants.COMMON.propTypes, {}, _sx[\"default\"].propTypes);\nDropdown.Caret.displayName = 'Dropdown.Caret';\nDropdown.defaultProps = (0, _objectSpread2[\"default\"])({\n  theme: _theme[\"default\"]\n}, _Details[\"default\"].defaultProps);\nDropdown.propTypes = (0, _objectSpread2[\"default\"])({}, _Details[\"default\"].propTypes, {}, _constants.COMMON.propTypes);\nvar _default = Dropdown;\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _constants = require(\"./constants\");\n\nvar _theme = _interopRequireDefault(require(\"./theme\"));\n\nvar _sx = _interopRequireDefault(require(\"./sx\"));\n\n// The <details> element is not yet supported in Edge so we have to use a polyfill.\n// We have to check if window is defined before importing the polyfill\n// so the code doesn’t run while pages build\n// uses require because of primer/components issue #638\nif (typeof window !== 'undefined') {\n  require('details-element-polyfill');\n}\n\nvar StyledDetails = (0, _styledComponents[\"default\"])('details').withConfig({\n  displayName: \"Details__StyledDetails\",\n  componentId: \"sc-1uozfty-0\"\n})([\"& > summary{list-style:none;}& > summary::-webkit-details-marker{display:none;}\", \" \", \";\"], _constants.COMMON, _sx[\"default\"]);\n\nfunction getRenderer(children) {\n  return typeof children === 'function' ? children : function () {\n    return children;\n  };\n}\n\nfunction Details(_ref) {\n  var children = _ref.children,\n      overlay = _ref.overlay,\n      _ref$render = _ref.render,\n      render = _ref$render === void 0 ? getRenderer(children) : _ref$render,\n      userOpen = _ref.open,\n      onClickOutside = _ref.onClickOutside,\n      onToggle = _ref.onToggle,\n      _ref$defaultOpen = _ref.defaultOpen,\n      defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen,\n      rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"children\", \"overlay\", \"render\", \"open\", \"onClickOutside\", \"onToggle\", \"defaultOpen\"]);\n\n  var _useState = (0, _react.useState)(defaultOpen),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      internalOpen = _useState2[0],\n      setInternalOpen = _useState2[1];\n\n  var ref = (0, _react.useRef)(null); // only use internal open state if user doesn't provide a value for the open prop\n\n  var open = typeof userOpen !== 'undefined' ? userOpen : internalOpen;\n  var onClickOutsideInternal = (0, _react.useCallback)(function (event) {\n    if (event.target.closest('details') !== ref.current) {\n      onClickOutside && onClickOutside(event);\n\n      if (!event.defaultPrevented) {\n        setInternalOpen(false);\n      }\n    }\n  }, [ref, onClickOutside, setInternalOpen]); // handles the overlay behavior - closing the menu when clicking outside of it\n\n  (0, _react.useEffect)(function () {\n    if (open && overlay) {\n      document.addEventListener('click', onClickOutsideInternal);\n      return function () {\n        document.removeEventListener('click', onClickOutsideInternal);\n      };\n    }\n  }, [open, overlay, onClickOutsideInternal]);\n\n  function handleToggle(e) {\n    onToggle && onToggle(e);\n\n    if (!e.defaultPrevented) {\n      setInternalOpen(e.target.open);\n    }\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(StyledDetails, (0, _extends2[\"default\"])({}, rest, {\n    ref: ref,\n    open: open,\n    onToggle: handleToggle,\n    overlay: overlay\n  }), render({\n    open: open\n  }));\n}\n\nDetails.displayName = \"Details\";\nDetails.defaultProps = {\n  theme: _theme[\"default\"],\n  overlay: false\n};\nDetails.propTypes = (0, _objectSpread2[\"default\"])({\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].node, _propTypes[\"default\"].func]),\n  className: _propTypes[\"default\"].string,\n  defaultOpen: _propTypes[\"default\"].bool,\n  overlay: _propTypes[\"default\"].bool,\n  render: _propTypes[\"default\"].func,\n  theme: _propTypes[\"default\"].object\n}, _constants.COMMON.propTypes, {}, _sx[\"default\"].propTypes);\nvar _default = Details;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _constants = require(\"./constants\");\n\nvar getDirectionStyles = function getDirectionStyles(theme, direction) {\n  var map = {\n    w: \"\\n      top: 0;\\n      right: 100%;\\n      left: auto;\\n      width: auto;\\n      margin-top: 0;\\n      margin-right: 10px;\\n\\n      &::before {\\n        top: 10px;\\n        right: -16px;\\n        left: auto;\\n        border-color: transparent;\\n        border-left-color: \".concat((0, _constants.get)('colors.blackfade15')(theme), \";\\n      }\\n\\n      &::after {\\n        top: 11px;\\n        right: -14px;\\n        left: auto;\\n        border-color: transparent;\\n        border-left-color: \").concat((0, _constants.get)('colors.white')(theme), \";\\n      }\\n    \"),\n    e: \"\\n      top: 0;\\n      left: 100%;\\n      width: auto;\\n      margin-top: 0;\\n      margin-left: 10px;\\n\\n      &::before {\\n        top: 10px;\\n        left: -16px;\\n        border-color: transparent;\\n        border-right-color: \".concat((0, _constants.get)('colors.blackfade15')(theme), \";\\n      }\\n\\n      &::after {\\n        top: 11px;\\n        left: -14px;\\n        border-color: transparent;\\n        border-right-color: \").concat((0, _constants.get)('colors.white')(theme), \";\\n      }\\n    \"),\n    ne: \"\\n      top: auto;\\n      bottom: 100%;\\n      left: 0;\\n      margin-bottom: 3px;\\n\\n      &::before,\\n      &::after {\\n        top: auto;\\n        right: auto;\\n      }\\n\\n      &::before {\\n        bottom: -8px;\\n        left: 9px;\\n        border-top: 8px solid \".concat((0, _constants.get)('colors.blackfade15')(theme), \";\\n        border-bottom: 0;\\n        border-left: 8px solid transparent;\\n      }\\n\\n      &::after {\\n        bottom: -7px;\\n        left: 10px;\\n        border-top: 7px solid \").concat((0, _constants.get)('colors.white')(theme), \";\\n        border-right: 7px solid transparent;\\n        border-bottom: 0;\\n        border-left: 7px solid transparent;\\n      }\\n    \"),\n    s: \"\\n      right: 50%;\\n      left: auto;\\n      transform: translateX(50%);\\n\\n      &::before {\\n        top: -16px;\\n        right: 50%;\\n        transform: translateX(50%);\\n      }\\n\\n      &::after {\\n        top: -14px;\\n        right: 50%;\\n        transform: translateX(50%);\\n      }\\n    \",\n    sw: \"\\n      right: 0;\\n      left: auto;\\n\\n      &::before {\\n        top: -16px;\\n        right: 9px;\\n        left: auto;\\n      }\\n\\n      &::after {\\n        top: -14px;\\n        right: 10px;\\n        left: auto;\\n      }\\n    \",\n    se: \"\\n      &::before {\\n        top: -16px;\\n        left: 9px;\\n      }\\n\\n      &::after {\\n        top: -14px;\\n        left: 10px;\\n      }\\n    \"\n  };\n  return map[direction];\n};\n\nvar _default = getDirectionStyles;\nexports[\"default\"] = _default;","import {COLORS, D3_TRANSITION_DURATION, NUM_BARS_STATEPAGE} from '../constants';\nimport {\n  formatDate,\n  formatNumber,\n  getIndiaYesterdayISO,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport equal from 'fast-deep-equal';\nimport React, {useEffect, useRef} from 'react';\n\nconst getDeltaStatistic = (data, statistic) => {\n  return getStatistic(data, 'delta', statistic);\n};\n\nconst [width, height] = [250, 250];\nconst margin = {top: 50, right: 0, bottom: 50, left: 0};\n\nfunction DeltaBarGraph({timeseries, statistic}) {\n  const svgRef = useRef();\n\n  const pastDates = Object.keys(timeseries || {}).filter(\n    (date) => date <= getIndiaYesterdayISO()\n  );\n  const dates = pastDates.slice(-NUM_BARS_STATEPAGE);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const r = 5;\n\n    // const formatTime = d3.timeFormat('%e %b');\n    const xScale = d3\n      .scaleBand()\n      .domain(dates)\n      .range([margin.left, chartRight])\n      .paddingInner(0.33);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([\n        Math.min(\n          0,\n          d3.min(dates, (date) =>\n            getDeltaStatistic(timeseries[date], statistic)\n          )\n        ),\n        Math.max(\n          1,\n          d3.max(dates, (date) =>\n            getDeltaStatistic(timeseries[date], statistic)\n          )\n        ),\n      ])\n      .range([chartBottom, margin.top]);\n\n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickSize(0)\n      .tickFormat((date) => formatDate(date, 'dd MMM'));\n\n    const t = svg.transition().duration(D3_TRANSITION_DURATION);\n    svg\n      .select('.x-axis')\n      .transition(t)\n      .style('transform', `translateY(${yScale(0)}px)`)\n      .call(xAxis)\n      .on('start', () => svg.select('.domain').remove())\n      .selectAll('text')\n      .attr('y', 0)\n      .attr('dy', (date, i) =>\n        getDeltaStatistic(timeseries[date], statistic) < 0 ? '-1em' : '1.5em'\n      )\n      .style('text-anchor', 'middle')\n      .attr('fill', COLORS[statistic]);\n\n    svg\n      .selectAll('.bar')\n      .data(dates)\n      .join((enter) =>\n        enter\n          .append('path')\n          .attr('class', 'bar')\n          .attr('d', (date) =>\n            roundedBar(xScale(date), yScale(0), xScale.bandwidth(), 0, r)\n          )\n      )\n      .transition(t)\n      .attr('d', (date) =>\n        roundedBar(\n          xScale(date),\n          yScale(0),\n          xScale.bandwidth(),\n          yScale(0) - yScale(getDeltaStatistic(timeseries[date], statistic)),\n          r\n        )\n      )\n      .attr('fill', (date, i) => {\n        return i < date.length - 1\n          ? COLORS[statistic] + '90'\n          : COLORS[statistic];\n      });\n\n    const textSelection = svg\n      .selectAll('.label')\n      .data(dates)\n      .join('text')\n      .attr('class', 'label')\n      .attr('x', (date) => xScale(date) + xScale.bandwidth() / 2)\n      .text((date) =>\n        formatNumber(getDeltaStatistic(timeseries[date], statistic))\n      );\n\n    textSelection\n      .transition(t)\n      .attr('fill', COLORS[statistic])\n      .attr('y', (date) => {\n        const val = getDeltaStatistic(timeseries[date], statistic);\n        return yScale(val) + (val < 0 ? 15 : -6);\n      });\n\n    textSelection\n      .append('tspan')\n      .attr(\n        'dy',\n        (date) =>\n          `${getDeltaStatistic(timeseries[date], statistic) < 0 ? 1.2 : -1.2}em`\n      )\n      .attr('x', (date) => xScale(date) + xScale.bandwidth() / 2)\n      .text((date, i) => {\n        if (i === 0) return '';\n        const prevVal = getDeltaStatistic(timeseries[dates[i - 1]], statistic);\n        if (!prevVal) return '';\n        const delta = getDeltaStatistic(timeseries[date], statistic) - prevVal;\n        return `${delta > 0 ? '+' : ''}${formatNumber(\n          (100 * delta) / Math.abs(prevVal)\n        )}%`;\n      })\n      .transition(t)\n      .attr('fill', COLORS[statistic] + '90');\n  }, [dates, timeseries, statistic]);\n\n  return (\n    <div className=\"DeltaBarGraph\">\n      <svg\n        ref={svgRef}\n        width=\"250\"\n        height=\"250\"\n        viewBox=\"0 0 250 250\"\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        <g\n          className=\"x-axis\"\n          transform={`translate(0, ${height - margin.bottom})`}\n        />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.statistic, currProps.statistic)) return false;\n  return true;\n};\n\nexport default React.memo(DeltaBarGraph, isEqual);\n\nfunction roundedBar(x, y, w, h, r) {\n  r = Math.sign(h) * Math.min(Math.abs(h), r);\n  const paths = [\n    `M ${x} ${y}`,\n    `v ${-h + r}`,\n    `q 0 ${-r} ${Math.abs(r)} ${-r}`,\n    `h ${w - 2 * Math.abs(r)}`,\n    `q ${Math.abs(r)} 0 ${Math.abs(r)} ${r}`,\n    `v ${h - r}`,\n    'Z',\n  ];\n  return paths.join(' ');\n}\n","import React from 'react';\nimport * as Icon from 'react-feather';\n\nfunction StateMetaCard({\n  title,\n  statistic,\n  total,\n  formula,\n  date,\n  description,\n  className,\n}) {\n  return (\n    <div className={`meta-item ${className}`}>\n      <div className=\"meta-item-top\">\n        <h3>{title}</h3>\n        <span\n          data-tip={formula}\n          data-event=\"touchstart mouseover\"\n          data-event-off=\"mouseleave\"\n          data-for=\"stateMeta\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <Icon.Info />\n        </span>\n      </div>\n      <h1>{statistic}</h1>\n      <h5>{date}</h5>\n      {total && <h5>{`India has ${total} CPM`}</h5>}\n      <p>{description}</p>\n    </div>\n  );\n}\n\nexport default StateMetaCard;\n","import StateMetaCard from './statemetacard';\n\nimport {\n  STATE_NAMES,\n  STATE_POPULATIONS,\n  STATE_POPULATIONS_MIL,\n} from '../constants';\nimport {\n  formatDate,\n  formatNumber,\n  formatLastUpdated,\n  getStatistic,\n  getIndiaDate,\n} from '../utils/commonfunctions';\n\nimport {format, sub} from 'date-fns';\nimport React from 'react';\nimport * as Icon from 'react-feather';\nimport ReactTooltip from 'react-tooltip';\n\nfunction StateMeta({stateCode, data, timeseries}) {\n  const confirmed = getStatistic(data[stateCode], 'total', 'confirmed');\n  const active = getStatistic(data[stateCode], 'total', 'active');\n  const deceased = getStatistic(data[stateCode], 'total', 'deceased');\n  const recovered = getStatistic(data[stateCode], 'total', 'recovered');\n  const tested = getStatistic(data[stateCode], 'total', 'tested');\n\n  const totalConfirmed = getStatistic(data['TT'], 'total', 'confirmed');\n\n  const indiaDate = format(getIndiaDate(), 'yyyy-MM-dd');\n  const prevWeekDate = format(sub(getIndiaDate(), {weeks: 1}), 'yyyy-MM-dd');\n\n  const prevWeekConfirmed = getStatistic(\n    timeseries[stateCode]?.[prevWeekDate],\n    'total',\n    'confirmed'\n  );\n\n  const confirmedPerMillion = confirmed / STATE_POPULATIONS_MIL[stateCode];\n  const testPerMillion = tested / STATE_POPULATIONS_MIL[stateCode];\n  const totalConfirmedPerMillion = totalConfirmed / STATE_POPULATIONS_MIL['TT'];\n\n  const recoveryPercent = (recovered / confirmed) * 100;\n  const activePercent = (active / confirmed) * 100;\n  const deathPercent = (deceased / confirmed) * 100;\n\n  const growthRate =\n    ((confirmed - prevWeekConfirmed) / prevWeekConfirmed) * 100;\n\n  return (\n    <React.Fragment>\n      <div className=\"StateMeta population\">\n        <ReactTooltip\n          place=\"top\"\n          type=\"dark\"\n          effect=\"solid\"\n          multiline={true}\n          scrollHide={true}\n          globalEventOff=\"click\"\n          id=\"stateMeta\"\n        />\n        <div className=\"meta-item population fadeInUp\">\n          <h3>Population</h3>\n          <h1>{formatNumber(STATE_POPULATIONS[stateCode])}</h1>\n        </div>\n        <div className=\"alert\">\n          <Icon.Compass />\n          <div className=\"alert-right\">\n            Based on 2019 population projection by NCP{' '}\n            <a\n              href=\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\"\n              target=\"_noblank\"\n            >\n              report\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"StateMeta\">\n        <StateMetaCard\n          className=\"confirmed\"\n          title={'Confirmed Per Million'}\n          statistic={formatNumber(confirmedPerMillion)}\n          total={formatNumber(totalConfirmedPerMillion)}\n          formula={'(confirmed / state population) * 1 Million'}\n          description={`\n            ${formatNumber(\n              Math.round(confirmedPerMillion)\n            )} out of every 1 million people in ${\n            STATE_NAMES[stateCode]\n          } have tested positive for the virus.\n            `}\n        />\n\n        <StateMetaCard\n          className=\"active\"\n          title={'Active'}\n          statistic={`${formatNumber(activePercent)}%`}\n          formula={'(active / confirmed) * 100'}\n          description={`For every 100 confirmed cases, ${formatNumber(\n            Math.round(activePercent)\n          )} are currently infected.`}\n        />\n\n        <StateMetaCard\n          className=\"recovery\"\n          title={'Recovery Rate'}\n          statistic={`${formatNumber(recoveryPercent)}%`}\n          formula={'(recovered / confirmed) * 100'}\n          description={`For every 100 confirmed cases, ${formatNumber(\n            Math.round(recoveryPercent)\n          )} have recovered from the virus.`}\n        />\n\n        <StateMetaCard\n          className=\"mortality\"\n          title={'Mortality Rate'}\n          statistic={`${formatNumber(deathPercent)}%`}\n          formula={'(deceased / confirmed) * 100'}\n          description={`For every 100 confirmed cases, ${formatNumber(\n            Math.round(deathPercent)\n          )} have unfortunately passed away from the virus.`}\n        />\n\n        <StateMetaCard\n          className=\"gr\"\n          title={'Avg. Growth Rate'}\n          statistic={\n            growthRate > 0\n              ? `${formatNumber(Math.round(growthRate / 7))}%`\n              : '-'\n          }\n          formula={\n            '(((previousDayData - sevenDayBeforeData) / sevenDayBeforeData) * 100)/7'\n          }\n          date={`${formatDate(prevWeekDate, 'dd MMM')} - ${formatDate(\n            indiaDate,\n            'dd MMM'\n          )}`}\n          description={`In the last one week, the number of new infections has\n          grown by an average of ${formatNumber(Math.round(growthRate / 7))}%\n          every day.`}\n        />\n\n        <StateMetaCard\n          className=\"tpm\"\n          title={'Tests Per Million'}\n          statistic={`≈ ${formatNumber(Math.round(testPerMillion))}`}\n          formula={\n            '(total tests in state / total population of state) * 1 Million'\n          }\n          date={\n            tested\n              ? `As of ${formatLastUpdated(\n                  data[stateCode]?.meta?.tested?.['last_updated']\n                )} ago`\n              : ''\n          }\n          description={`For every 1 million people in ${STATE_NAMES[stateCode]},\n            ${formatNumber(Math.round(testPerMillion))} people were tested.`}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default StateMeta;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Smile = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 14s1.5 2 4 2 4-2 4-2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"9\",\n    y1: \"9\",\n    x2: \"9.01\",\n    y2: \"9\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"15.01\",\n    y2: \"9\"\n  }));\n});\nSmile.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSmile.displayName = 'Smile';\nexport default Smile;","import DeltaBarGraph from './deltabargraph';\nimport Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport StateMeta from './statemeta';\nimport TimeSeriesExplorer from './timeseriesexplorer';\n\nimport {MAP_META, NUM_BARS_STATEPAGE, STATE_NAMES} from '../constants';\nimport {\n  fetcher,\n  formatDate,\n  formatNumber,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport Breadcrumb from '@primer/components/lib/Breadcrumb';\nimport Dropdown from '@primer/components/lib/Dropdown';\nimport anime from 'animejs';\nimport React, {useState, useMemo} from 'react';\nimport * as Icon from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {Link, useParams, Redirect} from 'react-router-dom';\nimport {useMeasure, useEffectOnce} from 'react-use';\nimport useSWR from 'swr';\n\nfunction PureBreadcrumbs({stateName, stateCode, stateCodes}) {\n  const {t} = useTranslation();\n\n  return (\n    <div className=\"breadcrumb\">\n      <Breadcrumb>\n        <Breadcrumb.Item href=\"/\">{t('Home')}</Breadcrumb.Item>\n        <Dropdown direction=\"w\">\n          <summary>\n            <Breadcrumb.Item href={`${stateCode}`} selected>\n              {t(stateName)}\n            </Breadcrumb.Item>\n            <Dropdown.Caret className=\"caret\" />\n          </summary>\n          <Dropdown.Menu direction=\"se\">\n            {stateCodes.map((stateCode) => (\n              <Dropdown.Item key={stateCode} className=\"item\">\n                <Link to={`${stateCode}`}>{t(STATE_NAMES[stateCode])}</Link>\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      </Breadcrumb>\n    </div>\n  );\n}\n\nconst Breadcrumbs = React.memo(PureBreadcrumbs);\n\nfunction State(props) {\n  const stateCode = useParams().stateCode.toUpperCase();\n  const stateName = STATE_NAMES[stateCode];\n\n  const [mapStatistic, setMapStatistic] = useState('confirmed');\n  const [mapSwitcher, {width}] = useMeasure();\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: stateCode,\n    districtName: null,\n  });\n\n  const {t} = useTranslation();\n\n  useEffectOnce(() => {\n    anime({\n      targets: '.highlight',\n      duration: 200,\n      delay: 500,\n      translateX:\n        mapStatistic === 'confirmed'\n          ? `${width * 0}px`\n          : mapStatistic === 'active'\n          ? `${width * 0.25}px`\n          : mapStatistic === 'recovered'\n          ? `${width * 0.5}px`\n          : mapStatistic === 'deceased'\n          ? `${width * 0.75}px`\n          : '0px',\n      easing: 'spring(1, 80, 90, 10)',\n      opacity: 1,\n    });\n  });\n\n  const {data: timeseries} = useSWR(\n    'https://api.covid19india.org/v3/min/timeseries.min.json',\n    fetcher,\n    {\n      suspense: true,\n      revalidateOnFocus: false,\n    }\n  );\n\n  const {data} = useSWR(\n    'https://api.covid19india.org/v3/min/data.min.json',\n    fetcher,\n    {\n      suspense: true,\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n      revalidateOnFocus: false,\n    }\n  );\n\n  const toggleShowAllDistricts = () => {\n    setShowAllDistricts(!showAllDistricts);\n  };\n\n  const handleSort = (districtNameA, districtNameB) => {\n    const districtA = data[stateCode].districts[districtNameA];\n    const districtB = data[stateCode].districts[districtNameB];\n    return (\n      getStatistic(districtB, 'total', mapStatistic) -\n      getStatistic(districtA, 'total', mapStatistic)\n    );\n  };\n\n  const gridRowCount = useMemo(() => {\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = data[stateCode]?.districts\n      ? Object.keys(data[stateCode].districts).length\n      : 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  }, [data, stateCode]);\n\n  if (!stateName) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return (\n      <React.Fragment>\n        <Helmet>\n          <title>\n            Coronavirus Outbreak in {STATE_NAMES[stateCode]} - covid19india.org\n          </title>\n          <meta\n            name=\"title\"\n            content={`Coronavirus Outbreak in ${STATE_NAMES[stateCode]}: Latest Map and Case Count`}\n          />\n        </Helmet>\n\n        <div className=\"State\">\n          <div className=\"state-left\">\n            <Breadcrumbs\n              {...{stateCode, stateName}}\n              stateCodes={Object.keys(data).filter(\n                (stateCode) =>\n                  stateCode !== 'TT' &&\n                  Object.keys(MAP_META).includes(stateCode)\n              )}\n            />\n\n            <div className=\"header\">\n              <div className=\"header-left\">\n                <h1>{t(stateName)}</h1>\n                <h5>{`Last Updated on ${formatDate(\n                  data[stateCode].meta.last_updated,\n                  'dd MMM, p'\n                )} IST`}</h5>\n              </div>\n\n              <div className=\"header-right\">\n                <h5>{t('Tested')}</h5>\n                {data[stateCode]?.total?.tested && (\n                  <React.Fragment>\n                    <h2>{formatNumber(data[stateCode].total.tested)}</h2>\n                    <h5 className=\"timestamp\">\n                      {`As of ${formatDate(\n                        data[stateCode].meta.tested.last_updated,\n                        'dd MMMM'\n                      )}`}\n                    </h5>\n                    <h5>\n                      {'per '}\n                      <a\n                        href={data[stateCode].meta.tested.source}\n                        target=\"_noblank\"\n                      >\n                        source\n                      </a>\n                    </h5>\n                  </React.Fragment>\n                )}\n              </div>\n            </div>\n\n            <div className=\"map-switcher\" ref={mapSwitcher}>\n              <div\n                className={`highlight ${mapStatistic}`}\n                style={{\n                  transform: `translateX(${width * 0}px)`,\n                  opacity: 0,\n                }}\n              ></div>\n              <div\n                className=\"clickable\"\n                onClick={() => {\n                  setMapStatistic('confirmed');\n                  anime({\n                    targets: '.highlight',\n                    translateX: `${width * 0}px`,\n                    easing: 'spring(1, 80, 90, 10)',\n                  });\n                }}\n              ></div>\n              <div\n                className=\"clickable\"\n                onClick={() => {\n                  setMapStatistic('active');\n                  anime({\n                    targets: '.highlight',\n                    translateX: `${width * 0.25}px`,\n                    easing: 'spring(1, 80, 90, 10)',\n                  });\n                }}\n              ></div>\n              <div\n                className=\"clickable\"\n                onClick={() => {\n                  setMapStatistic('recovered');\n                  anime({\n                    targets: '.highlight',\n                    translateX: `${width * 0.5}px`,\n                    easing: 'spring(1, 80, 90, 10)',\n                  });\n                }}\n              ></div>\n              <div\n                className=\"clickable\"\n                onClick={() => {\n                  setMapStatistic('deceased');\n                  anime({\n                    targets: '.highlight',\n                    translateX: `${width * 0.75}px`,\n                    easing: 'spring(1, 80, 90, 10)',\n                  });\n                }}\n              ></div>\n            </div>\n\n            <Level data={data[stateCode]} />\n            <Minigraph timeseries={timeseries[stateCode]} />\n\n            <MapExplorer\n              isCountryLoaded={false}\n              {...{\n                stateCode,\n                data,\n                regionHighlighted,\n                setRegionHighlighted,\n                mapStatistic,\n                setMapStatistic,\n              }}\n            />\n\n            {data && (\n              <StateMeta\n                {...{\n                  stateCode,\n                  data,\n                  timeseries,\n                }}\n              />\n            )}\n          </div>\n\n          <div className=\"state-right\">\n            <React.Fragment>\n              <div\n                className=\"district-bar\"\n                style={!showAllDistricts ? {display: 'flex'} : {}}\n              >\n                <div\n                  className=\"district-bar-left fadeInUp\"\n                  style={{animationDelay: '0.6s'}}\n                >\n                  <h2 className={mapStatistic}>Top districts</h2>\n                  <div\n                    className={`districts ${showAllDistricts ? 'is-grid' : ''}`}\n                    style={\n                      showAllDistricts\n                        ? {gridTemplateRows: `repeat(${gridRowCount}, 2rem)`}\n                        : {}\n                    }\n                  >\n                    {Object.keys(data[stateCode]?.districts || {})\n                      .filter((districtName) => districtName !== 'Unknown')\n                      .sort((a, b) => handleSort(a, b))\n                      .slice(0, showAllDistricts ? undefined : 5)\n                      .map((districtName) => {\n                        const total = getStatistic(\n                          data[stateCode].districts[districtName],\n                          'total',\n                          mapStatistic\n                        );\n                        const delta = getStatistic(\n                          data[stateCode].districts[districtName],\n                          'delta',\n                          mapStatistic\n                        );\n                        return (\n                          <div key={districtName} className=\"district\">\n                            <h2>{formatNumber(total)}</h2>\n                            <h5>{t(districtName)}</h5>\n                            {mapStatistic !== 'active' && (\n                              <div className=\"delta\">\n                                <h6 className={mapStatistic}>\n                                  {delta > 0\n                                    ? '\\u2191' + formatNumber(delta)\n                                    : ''}\n                                </h6>\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                  </div>\n\n                  {Object.keys(data[stateCode]?.districts || {}).length > 5 && (\n                    <button className=\"button\" onClick={toggleShowAllDistricts}>\n                      <span>{showAllDistricts ? `View less` : `View all`}</span>\n                    </button>\n                  )}\n                </div>\n\n                <div className=\"district-bar-right\">\n                  {(mapStatistic === 'confirmed' ||\n                    mapStatistic === 'deceased') && (\n                    <div className=\"happy-sign\">\n                      {Object.keys(timeseries[stateCode] || {})\n                        .slice(-NUM_BARS_STATEPAGE)\n                        .every(\n                          (date) =>\n                            getStatistic(\n                              timeseries[stateCode][date],\n                              'delta',\n                              mapStatistic\n                            ) === 0\n                        ) && (\n                        <div\n                          className={`alert ${\n                            mapStatistic === 'confirmed' ? 'is-green' : ''\n                          }`}\n                        >\n                          <Icon.Smile />\n                          <div className=\"alert-right\">\n                            No new {mapStatistic} cases in the past five days\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  <DeltaBarGraph\n                    timeseries={timeseries[stateCode]}\n                    statistic={mapStatistic}\n                  />\n                </div>\n              </div>\n\n              <TimeSeriesExplorer\n                timeseries={timeseries[stateCode]}\n                {...{regionHighlighted, setRegionHighlighted}}\n              />\n            </React.Fragment>\n          </div>\n        </div>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default React.memo(State);\n"],"sourceRoot":""}