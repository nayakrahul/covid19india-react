{"version":3,"sources":["components/Level.js"],"names":["LevelItem","React","memo","statistic","total","delta","t","useTranslation","spring","useSpring","from","config","stiff","Fragment","capitalize","h4","interpolate","formatNumber","Math","floor","size","verticalAlign","h1","data","trail","useMemo","styles","PRIMARY_STATISTICS","map","index","push","animationDelay","className","div","key","classnames","style","getStatistic","prevProps","currProps","equal"],"mappings":"+GAAA,sGA4CA,IAAMA,EAAYC,IAAMC,MAlCxB,YAAmD,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACjCC,EAAKC,cAALD,EACDE,EAASC,YACb,CACEL,MAAOA,EACPC,MAAOA,EACPK,KAAM,CAACN,MAAOA,EAAOC,MAAOA,IAE9BM,IAAOC,OAGT,OACE,kBAAC,IAAMC,SAAP,KACE,4BAAKP,EAAEQ,YAAWX,KAClB,kBAAC,IAASY,GAAV,KACiB,WAAdZ,EACCE,EAAQ,EACNG,EAAOH,MAAMW,aACX,SAACX,GAAD,iBAAeY,YAAaC,KAAKC,MAAMd,QAGzC,kBAAC,IAAD,CAAee,KAAM,EAAGC,cAAe,IAGzC,QAGJ,kBAAC,IAASC,GAAV,KACGd,EAAOJ,MAAMY,aAAY,SAACZ,GAAD,OAAWa,YAAaC,KAAKC,MAAMf,YAoDtDH,cAAMC,MA5CrB,YAAwB,IAARqB,EAAO,EAAPA,KACRC,EAAQC,mBAAQ,WACpB,IAAMC,EAAS,GAQf,OANAC,IAAmBC,KAAI,SAACzB,EAAW0B,GAIjC,OAHAH,EAAOI,KAAK,CACVC,eAAe,GAAD,OAAK,IAAc,IAARF,EAAX,QAET,QAEFH,IACN,IAEH,OACE,yBAAKM,UAAU,SACZL,IAAmBC,KAAI,SAACzB,EAAW0B,GAAZ,OACtB,kBAAC,IAASI,IAAV,CACEC,IAAKL,EACLG,UAAWG,IAAW,aAAD,aAAqBhC,GAAa,YACvDiC,MAAOZ,EAAMK,IAEb,kBAAC7B,EAAD,cACM,CAACG,aADP,CAEEC,MAAOiC,YAAad,EAAM,QAASpB,GACnCE,MAAOgC,YAAad,EAAM,QAASpB,cAQ/B,SAACmC,EAAWC,GAC1B,QACGC,IACCH,YAAaC,EAAUf,KAAM,QAAS,UACtCc,YAAaE,EAAUhB,KAAM,QAAS","file":"static/js/33.fe911e96.chunk.js","sourcesContent":["import {PRIMARY_STATISTICS} from '../constants';\nimport {capitalize, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport {HeartFillIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport React, {useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring, config} from 'react-spring';\n\nfunction PureLevelItem({statistic, total, delta}) {\n  const {t} = useTranslation();\n  const spring = useSpring(\n    {\n      total: total,\n      delta: delta,\n      from: {total: total, delta: delta},\n    },\n    config.stiff\n  );\n\n  return (\n    <React.Fragment>\n      <h5>{t(capitalize(statistic))}</h5>\n      <animated.h4>\n        {statistic !== 'active' ? (\n          delta > 0 ? (\n            spring.delta.interpolate(\n              (delta) => `+${formatNumber(Math.floor(delta))}`\n            )\n          ) : (\n            <HeartFillIcon size={9} verticalAlign={2} />\n          )\n        ) : (\n          '\\u00A0'\n        )}\n      </animated.h4>\n      <animated.h1>\n        {spring.total.interpolate((total) => formatNumber(Math.floor(total)))}\n      </animated.h1>\n    </React.Fragment>\n  );\n}\n\nconst LevelItem = React.memo(PureLevelItem);\n\nfunction Level({data}) {\n  const trail = useMemo(() => {\n    const styles = [];\n\n    PRIMARY_STATISTICS.map((statistic, index) => {\n      styles.push({\n        animationDelay: `${750 + index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  return (\n    <div className=\"Level\">\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <animated.div\n          key={index}\n          className={classnames('level-item', `is-${statistic}`, 'fadeInUp')}\n          style={trail[index]}\n        >\n          <LevelItem\n            {...{statistic}}\n            total={getStatistic(data, 'total', statistic)}\n            delta={getStatistic(data, 'delta', statistic)}\n          />\n        </animated.div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      getStatistic(prevProps.data, 'total', 'active'),\n      getStatistic(currProps.data, 'total', 'active')\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(Level, isEqual);\n"],"sourceRoot":""}