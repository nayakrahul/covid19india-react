{"version":3,"sources":["hooks/usestickyswr.js","components/home.js"],"names":["useStickySWR","key","fetcher","swrOptions","useState","options","setOptions","args","useSWR","data","isValidating","error","rest","useUpdateEffect","produce","draftOptions","initialData","TimeSeriesExplorer","lazy","MapExplorer","Actions","Table","Minigraph","Footer","Search","Level","Home","props","stateCode","districtName","regionHighlighted","setRegionHighlighted","anchor","setAnchor","mapStatistic","setMapStatistic","date","setDate","timeseries","revalidateOnFocus","revalidateOnMount","refreshInterval","homeRightElement","useRef","isVisible","useIsVisible","once","stateCodes","Set","Object","keys","MAP_META","filter","sort","Fragment","Helmet","name","content","className","dates","reverse","ref","fallback"],"mappings":"8MA+BeA,MA1BR,SAAsBC,EAAKC,EAASC,GAAqB,IAAC,IAAD,EAChCC,mBAASD,GADuB,mBACvDE,EADuD,KAC9CC,EAD8C,wBAANC,EAAM,iCAANA,EAAM,wBAGjBC,IAAM,WAAN,GAC3CP,EACAC,EACAG,GAH2C,OAIxCE,IAJEE,EAHuD,EAGvDA,KAAMC,EAHiD,EAGjDA,aAAcC,EAHmC,EAGnCA,MAAUC,EAHyB,+CAkB9D,OARAC,aAAgB,WACdP,EACEQ,YAAQT,GAAS,SAACU,GAChBA,EAAaC,YAAcP,QAG9B,CAACA,IAEG,2BACFG,GADL,IAEEF,eACAC,QACAF,U,yBCnBEQ,EAAqBC,gBAAK,kBAC9B,gEAGIC,EAAcD,gBAAK,kBACvB,gEAGIE,EAAUF,gBAAK,kBACnB,uDAGIG,EAAQH,gBAAK,kBAAM,wDAEnBI,EAAYJ,gBAAK,kBACrB,wDAGIK,EAASL,gBAAK,kBAAM,iCAEpBM,EAASN,gBAAK,kBAAM,kCAEpBO,EAAQP,gBAAK,kBAAM,wDAiIVQ,UA/Hf,SAAcC,GAAQ,IAAD,EAC+BvB,mBAAS,CACzDwB,UAAW,KACXC,aAAc,OAHG,mBACZC,EADY,KACOC,EADP,OAMS3B,mBAAS,MANlB,mBAMZ4B,EANY,KAMJC,EANI,OAOqB7B,mBAAS,UAP9B,mBAOZ8B,EAPY,KAOEC,EAPF,OASK/B,mBAAS,IATd,mBASZgC,EATY,KASNC,EATM,KAWNC,EAActC,EACzB,0DACAE,IACA,CACEqC,mBAAmB,IAJhB9B,KAQAA,EAAQT,EAAa,2CAAD,OAEvBoC,EAAI,WAAOA,GAAS,GAFG,aAIzBlC,IACA,CACEsC,mBAAmB,EACnBC,gBAAiB,IACjBF,mBAAmB,IARhB9B,KAYDiC,EAAmBC,mBACnBC,EAAYC,uBAAaH,EAAkB,CAACI,MAAM,IAElDC,EAAU,CACd,MADc,mBAEX,YACE,IAAIC,IAAJ,sBACEC,OAAOC,KAAKC,KAAUC,QAAO,SAACxB,GAAD,MAA6B,OAAdA,MAD9C,YAEEqB,OAAOC,KAAKzC,GAAQ,IAAI2C,QAAO,SAACxB,GAAD,MAA6B,OAAdA,SAEnDyB,SAGJ,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,KACE,mFACA,0BACEC,KAAK,QACLC,QAAQ,8DAIZ,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,kBAAC,WAAD,KACE,kBAAClC,EAAD,OAGF,kBAAC,WAAD,KACGc,GACC,kBAAClB,EACK,CACFiB,UACAsB,MAAOV,OAAOC,KAAKZ,EAAU,IAAQsB,UACrCxB,WAOT3B,GACC,kBAAC,WAAD,KACE,kBAACgB,EAAD,CAAOhB,KAAMA,EAAI,MAIrB,kBAAC,WAAD,KACG6B,GACC,kBAAChB,EAAD,eAAWgB,WAAYA,EAAU,IAAY,CAACF,WAIlD,kBAAC,WAAD,KACG3B,GACC,kBAACY,EAAU,CAACZ,OAAMqB,oBAAmBC,2BAK3C,yBAAK2B,UAAU,aAAaG,IAAKnB,GAC9BE,GACC,kBAAC,IAAMU,SAAP,KACG7C,GACC,kBAAC,WAAD,CAAUqD,SAAU,+BAClB,kBAAC3C,EAAD,eACES,UAAU,MACN,CAACnB,QACD,CAACyB,eAAcC,mBACf,CAACL,oBAAmBC,wBACpB,CAACC,SAAQC,gBAKlBK,GACC,kBAAC,WAAD,CAAUwB,SAAU,+BAClB,kBAAC7C,EAAD,eACEqB,WAAYA,EAAWR,EAAkBF,YACrC,CAACQ,OAAMW,cACP,CAACjB,oBAAmBC,wBACpB,CAACC,SAAQC,mBAQ3B,kBAACV,EAAD","file":"static/js/Home.9126ed3e.chunk.js","sourcesContent":["import produce from 'immer';\nimport {useState} from 'react';\nimport {useUpdateEffect} from 'react-use';\nimport useSWR from 'swr';\n\nexport function useStickySWR(key, fetcher, swrOptions, ...args) {\n  const [options, setOptions] = useState(swrOptions);\n\n  const {data, isValidating, error, ...rest} = useSWR(\n    key,\n    fetcher,\n    options,\n    ...args\n  );\n\n  useUpdateEffect(() => {\n    setOptions(\n      produce(options, (draftOptions) => {\n        draftOptions.initialData = data;\n      })\n    );\n  }, [data]);\n\n  return {\n    ...rest,\n    isValidating,\n    error,\n    data,\n  };\n}\n\nexport default useStickySWR;\n","import {MAP_META} from '../constants';\nimport useStickySWR from '../hooks/usestickyswr';\nimport {fetcher} from '../utils/commonfunctions';\n\nimport React, {useState, useRef, lazy, Suspense} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useIsVisible} from 'react-is-visible';\n\nconst TimeSeriesExplorer = lazy(() =>\n  import('./timeseriesexplorer' /* webpackChunkName: \"TimeSeriesExplorer\" */)\n);\n\nconst MapExplorer = lazy(() =>\n  import('./mapexplorer' /* webpackChunkName: \"MapExplorer\" */)\n);\n\nconst Actions = lazy(() =>\n  import('./actions' /* webpackChunkName: \"Actions\" */)\n);\n\nconst Table = lazy(() => import('./table' /* webpackChunkName: \"Table\" */));\n\nconst Minigraph = lazy(() =>\n  import('./minigraph' /* webpackChunkName: \"Minigraph\" */)\n);\n\nconst Footer = lazy(() => import('./footer' /* webpackChunkName: \"Footer\" */));\n\nconst Search = lazy(() => import('./search' /* webpackChunkName: \"Search\" */));\n\nconst Level = lazy(() => import('./level' /* webpackChunkName: \"Level\" */));\n\nfunction Home(props) {\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: 'TT',\n    districtName: null,\n  });\n\n  const [anchor, setAnchor] = useState(null);\n  const [mapStatistic, setMapStatistic] = useState('active');\n\n  const [date, setDate] = useState('');\n\n  const {data: timeseries} = useStickySWR(\n    'https://api.covid19india.org/v3/min/timeseries.min.json',\n    fetcher,\n    {\n      revalidateOnFocus: false,\n    }\n  );\n\n  const {data} = useStickySWR(\n    `https://api.covid19india.org/v3/min/data${\n      date ? `-${date}` : ''\n    }.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n      revalidateOnFocus: false,\n    }\n  );\n\n  const homeRightElement = useRef();\n  const isVisible = useIsVisible(homeRightElement, {once: true});\n\n  const stateCodes = [\n    'TT',\n    ...[\n      ...new Set([\n        ...Object.keys(MAP_META).filter((stateCode) => stateCode !== 'TT'),\n        ...Object.keys(data || {}).filter((stateCode) => stateCode !== 'TT'),\n      ]),\n    ].sort(),\n  ];\n\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>Coronavirus Outbreak in India - covid19india.org</title>\n        <meta\n          name=\"title\"\n          content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\n        />\n      </Helmet>\n\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div className=\"header\">\n            <Suspense>\n              <Search />\n            </Suspense>\n\n            <Suspense>\n              {timeseries && (\n                <Actions\n                  {...{\n                    setDate,\n                    dates: Object.keys(timeseries['TT']).reverse(),\n                    date,\n                  }}\n                />\n              )}\n            </Suspense>\n          </div>\n\n          {data && (\n            <Suspense>\n              <Level data={data['TT']} />\n            </Suspense>\n          )}\n\n          <Suspense>\n            {timeseries && (\n              <Minigraph timeseries={timeseries['TT']} {...{date}} />\n            )}\n          </Suspense>\n\n          <Suspense>\n            {data && (\n              <Table {...{data, regionHighlighted, setRegionHighlighted}} />\n            )}\n          </Suspense>\n        </div>\n\n        <div className=\"home-right\" ref={homeRightElement}>\n          {isVisible && (\n            <React.Fragment>\n              {data && (\n                <Suspense fallback={<div />}>\n                  <MapExplorer\n                    stateCode=\"TT\"\n                    {...{data}}\n                    {...{mapStatistic, setMapStatistic}}\n                    {...{regionHighlighted, setRegionHighlighted}}\n                    {...{anchor, setAnchor}}\n                  />\n                </Suspense>\n              )}\n\n              {timeseries && (\n                <Suspense fallback={<div />}>\n                  <TimeSeriesExplorer\n                    timeseries={timeseries[regionHighlighted.stateCode]}\n                    {...{date, stateCodes}}\n                    {...{regionHighlighted, setRegionHighlighted}}\n                    {...{anchor, setAnchor}}\n                  />\n                </Suspense>\n              )}\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}