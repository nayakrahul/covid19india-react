{"version":3,"sources":["../node_modules/fast-deep-equal/index.js","components/tooltip.js","../node_modules/react-use/esm/useIsomorphicLayoutEffect.js","../node_modules/react-use/esm/useMeasure.js","../node_modules/react-feather/dist/icons/info.js","../node_modules/react-feather/dist/icons/compass.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/sub/index.js","components/deltabargraph.js","components/statedropdown.js","components/statemetacard.js","components/statemeta.js","../node_modules/react-feather/dist/icons/smile.js","components/state.js"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","FADE_IN","opacity","transform","zIndex","position","pointerEvents","FADE_OUT","Tooltip","data","children","useState","isTooltipVisible","setIsTooltipVisible","transitions","useTransition","from","enter","leave","config","mass","tension","friction","className","style","onMouseEnter","onMouseLeave","map","item","props","div","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","defaultState","x","y","width","height","top","left","bottom","right","isClient","ResizeObserver","_a","element","ref","_b","rect","setRect","observer","useMemo","entries","contentRect","top_1","observe","disconnect","_extends","assign","target","arguments","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Info","forwardRef","_ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","Compass","points","addMonths","dirtyDate","dirtyAmount","requiredArgs","date","toDate","amount","toInteger","isNaN","Date","NaN","dayOfMonth","getDate","endOfDesiredMonth","getTime","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","subMonths","sub","duration","years","months","weeks","days","hours","minutes","seconds","dateWithoutMonths","dateWithoutDays","subDays","minutestoSub","secondstoSub","mstoSub","finalDate","getDeltaStatistic","statistic","getStatistic","margin","memo","timeseries","svgRef","useRef","dates","filter","getIndiaYesterdayISO","slice","NUM_BARS_STATEPAGE","svg","d3","current","chartRight","chartBottom","xScale","domain","range","paddingInner","yScale","Math","min","max","xAxis","tickSize","tickFormat","formatDate","t","transition","D3_TRANSITION_DURATION","select","on","remove","selectAll","attr","COLORS","join","append","roundedBar","bandwidth","textSelection","text","formatNumber","val","prevVal","delta","abs","preserveAspectRatio","prevProps","currProps","w","h","sign","StateDropdown","stateCode","showDropdown","setShowDropdown","dropdownRef","history","useHistory","useClickAway","onClick","prevData","STATE_NAMES","push","StateMetaCard","title","total","formula","description","StateMeta","confirmed","active","deceased","recovered","tested","totalConfirmed","indiaDate","format","getIndiaDate","prevWeekDate","prevWeekConfirmed","confirmedPerMillion","STATE_POPULATIONS_MIL","testPerMillion","totalConfirmedPerMillion","recoveryPercent","activePercent","deathPercent","growthRate","Fragment","STATE_POPULATIONS","href","round","formatLastUpdated","meta","Smile","d","TimeSeriesExplorer","lazy","MapExplorer","Footer","Minigraph","Level","useTranslation","useParams","toUpperCase","mapStatistic","setMapStatistic","useMeasure","mapSwitcher","showAllDistricts","setShowAllDistricts","districtName","regionHighlighted","setRegionHighlighted","useEffectOnce","anime","targets","delay","translateX","easing","useSWR","fetcher","suspense","revalidateOnFocus","revalidateOnMount","refreshInterval","gridRowCount","gridColumnCount","innerWidth","districtCount","districts","ceil","Helmet","name","content","last_updated","fallback","isCountryLoaded","display","gridTemplateRows","sort","districtNameA","districtNameB","districtA","districtB","handleSort","undefined","every"],"mappings":"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","file":"static/js/State.2b583dde.chunk.js","sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import React, {useState} from 'react';\nimport {useTransition, animated} from 'react-spring';\n\nconst FADE_IN = {\n  opacity: 1,\n  transform: 'translate3d(0, 0px, 0)',\n  zIndex: 999,\n  position: 'absolute',\n  pointerEvents: 'none',\n};\n\nconst FADE_OUT = {\n  opacity: 0,\n  transform: 'translate3d(0, 2px, 0)',\n  zIndex: 999,\n  position: 'absolute',\n  pointerEvents: 'none',\n};\n\nconst Tooltip = ({data, children}) => {\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n\n  const transitions = useTransition(isTooltipVisible, null, {\n    from: FADE_OUT,\n    enter: FADE_IN,\n    leave: FADE_OUT,\n    config: {\n      mass: 1,\n      tension: 210,\n      friction: 20,\n    },\n  });\n\n  return (\n    <span\n      className=\"Tooltip\"\n      style={{position: 'relative'}}\n      onMouseEnter={() => {\n        setIsTooltipVisible(true);\n      }}\n      onMouseLeave={() => {\n        setIsTooltipVisible(false);\n      }}\n    >\n      {children}\n\n      {transitions.map(({item, key, props}) =>\n        item ? (\n          <animated.div style={props}>\n            <div key={key} className=\"message\">\n              <p>{data}</p>\n            </div>\n          </animated.div>\n        ) : (\n          <animated.div key={key}></animated.div>\n        )\n      )}\n    </span>\n  );\n};\n\nexport default Tooltip;\n","import { useEffect, useLayoutEffect } from 'react';\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n","import { useState, useMemo } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { isClient } from './util';\nvar defaultState = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\nvar useMeasure = function () {\n    var _a = useState(null), element = _a[0], ref = _a[1];\n    var _b = useState(defaultState), rect = _b[0], setRect = _b[1];\n    var observer = useMemo(function () {\n        return new window.ResizeObserver(function (entries) {\n            if (entries[0]) {\n                var _a = entries[0].contentRect, x = _a.x, y = _a.y, width = _a.width, height = _a.height, top_1 = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n                setRect({ x: x, y: y, width: width, height: height, top: top_1, left: left, bottom: bottom, right: right });\n            }\n        });\n    }, []);\n    useIsomorphicLayoutEffect(function () {\n        if (!element)\n            return;\n        observer.observe(element);\n        return function () {\n            observer.disconnect();\n        };\n    }, [element]);\n    return [ref, rect];\n};\nvar useMeasureMock = function () { return [function () { }, defaultState]; };\nexport default (isClient && !!window.ResizeObserver) ? useMeasure : useMeasureMock;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Info = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"16\",\n    x2: \"12\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"8\",\n    x2: \"12.01\",\n    y2: \"8\"\n  }));\n});\nInfo.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nInfo.displayName = 'Info';\nexport default Info;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Compass = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\"\n  }));\n});\nCompass.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCompass.displayName = 'Compass';\nexport default Compass;","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from '../subDays/index.js';\nimport subMonths from '../subMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import {COLORS, D3_TRANSITION_DURATION, NUM_BARS_STATEPAGE} from '../constants';\nimport {\n  formatDate,\n  formatNumber,\n  getIndiaYesterdayISO,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport equal from 'fast-deep-equal';\nimport React, {useEffect, useRef} from 'react';\n\nconst getDeltaStatistic = (data, statistic) => {\n  return getStatistic(data, 'delta', statistic);\n};\n\nconst [width, height] = [250, 250];\nconst margin = {top: 50, right: 0, bottom: 50, left: 0};\n\nfunction DeltaBarGraph({timeseries, statistic}) {\n  const svgRef = useRef();\n\n  const pastDates = Object.keys(timeseries || {}).filter(\n    (date) => date <= getIndiaYesterdayISO()\n  );\n  const dates = pastDates.slice(-NUM_BARS_STATEPAGE);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const r = 5;\n\n    // const formatTime = d3.timeFormat('%e %b');\n    const xScale = d3\n      .scaleBand()\n      .domain(dates)\n      .range([margin.left, chartRight])\n      .paddingInner(0.33);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([\n        Math.min(\n          0,\n          d3.min(dates, (date) =>\n            getDeltaStatistic(timeseries[date], statistic)\n          )\n        ),\n        Math.max(\n          1,\n          d3.max(dates, (date) =>\n            getDeltaStatistic(timeseries[date], statistic)\n          )\n        ),\n      ])\n      .range([chartBottom, margin.top]);\n\n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickSize(0)\n      .tickFormat((date) => formatDate(date, 'dd MMM'));\n\n    const t = svg.transition().duration(D3_TRANSITION_DURATION);\n    svg\n      .select('.x-axis')\n      .transition(t)\n      .style('transform', `translateY(${yScale(0)}px)`)\n      .call(xAxis)\n      .on('start', () => svg.select('.domain').remove())\n      .selectAll('text')\n      .attr('y', 0)\n      .attr('dy', (date, i) =>\n        getDeltaStatistic(timeseries[date], statistic) < 0 ? '-1em' : '1.5em'\n      )\n      .style('text-anchor', 'middle')\n      .attr('fill', COLORS[statistic]);\n\n    svg\n      .selectAll('.bar')\n      .data(dates)\n      .join((enter) =>\n        enter\n          .append('path')\n          .attr('class', 'bar')\n          .attr('d', (date) =>\n            roundedBar(xScale(date), yScale(0), xScale.bandwidth(), 0, r)\n          )\n      )\n      .transition(t)\n      .attr('d', (date) =>\n        roundedBar(\n          xScale(date),\n          yScale(0),\n          xScale.bandwidth(),\n          yScale(0) - yScale(getDeltaStatistic(timeseries[date], statistic)),\n          r\n        )\n      )\n      .attr('fill', (date, i) => {\n        return i < date.length - 1\n          ? COLORS[statistic] + '90'\n          : COLORS[statistic];\n      });\n\n    const textSelection = svg\n      .selectAll('.label')\n      .data(dates)\n      .join('text')\n      .attr('class', 'label')\n      .attr('x', (date) => xScale(date) + xScale.bandwidth() / 2)\n      .text((date) =>\n        formatNumber(getDeltaStatistic(timeseries[date], statistic))\n      );\n\n    textSelection\n      .transition(t)\n      .attr('fill', COLORS[statistic])\n      .attr('y', (date) => {\n        const val = getDeltaStatistic(timeseries[date], statistic);\n        return yScale(val) + (val < 0 ? 15 : -6);\n      });\n\n    textSelection\n      .append('tspan')\n      .attr(\n        'dy',\n        (date) =>\n          `${getDeltaStatistic(timeseries[date], statistic) < 0 ? 1.2 : -1.2}em`\n      )\n      .attr('x', (date) => xScale(date) + xScale.bandwidth() / 2)\n      .text((date, i) => {\n        if (i === 0) return '';\n        const prevVal = getDeltaStatistic(timeseries[dates[i - 1]], statistic);\n        if (!prevVal) return '';\n        const delta = getDeltaStatistic(timeseries[date], statistic) - prevVal;\n        return `${delta > 0 ? '+' : ''}${formatNumber(\n          (100 * delta) / Math.abs(prevVal)\n        )}%`;\n      })\n      .transition(t)\n      .attr('fill', COLORS[statistic] + '90');\n  }, [dates, timeseries, statistic]);\n\n  return (\n    <div className=\"DeltaBarGraph\">\n      <svg\n        ref={svgRef}\n        width=\"250\"\n        height=\"250\"\n        viewBox=\"0 0 250 250\"\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        <g\n          className=\"x-axis\"\n          transform={`translate(0, ${height - margin.bottom})`}\n        />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.statistic, currProps.statistic)) return false;\n  return true;\n};\n\nexport default React.memo(DeltaBarGraph, isEqual);\n\nfunction roundedBar(x, y, w, h, r) {\n  r = Math.sign(h) * Math.min(Math.abs(h), r);\n  const paths = [\n    `M ${x} ${y}`,\n    `v ${-h + r}`,\n    `q 0 ${-r} ${Math.abs(r)} ${-r}`,\n    `h ${w - 2 * Math.abs(r)}`,\n    `q ${Math.abs(r)} 0 ${Math.abs(r)} ${r}`,\n    `v ${h - r}`,\n    'Z',\n  ];\n  return paths.join(' ');\n}\n","import {STATE_NAMES} from '../constants';\n\nimport React, {useState, useRef} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {useTransition, animated} from 'react-spring';\nimport {useClickAway} from 'react-use';\n\nconst StateDropdown = ({stateCode}) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const dropdownRef = useRef();\n  const history = useHistory();\n\n  useClickAway(dropdownRef, () => {\n    setShowDropdown(false);\n  });\n\n  const transitions = useTransition(showDropdown, null, {\n    from: {\n      opacity: 0,\n      transform: 'translate3d(0, 2px, 0)',\n      zIndex: 999,\n    },\n    enter: {\n      opacity: 1,\n      transform: 'translate3d(0, 0px, 0)',\n      zIndex: 999,\n    },\n    leave: {\n      opacity: 0,\n      transform: 'translate3d(0, 2px, 0)',\n      zIndex: 999,\n    },\n    config: {\n      mass: 1,\n      tension: 210,\n      friction: 20,\n    },\n  });\n\n  return (\n    <div className=\"StateDropdown\">\n      <h1\n        className=\"state-name\"\n        onClick={() => {\n          setShowDropdown((prevData) => !prevData);\n        }}\n      >\n        {STATE_NAMES[stateCode]}\n      </h1>\n\n      {transitions.map(({item, key, props}) =>\n        item ? (\n          <animated.div className=\"dropdown\" style={props} ref={dropdownRef}>\n            {Object.keys(STATE_NAMES)\n              .filter((stateCode) => stateCode !== 'UN' && stateCode !== 'TT')\n              .map((stateCode) => (\n                <h1\n                  key={stateCode}\n                  className=\"item\"\n                  onClick={() => {\n                    setShowDropdown(false);\n                    history.push(`/state/${stateCode}`);\n                  }}\n                >\n                  {STATE_NAMES[stateCode]}\n                </h1>\n              ))}\n          </animated.div>\n        ) : (\n          <animated.div key={stateCode} style={props}></animated.div>\n        )\n      )}\n\n      {showDropdown && <div className=\"backdrop\"></div>}\n    </div>\n  );\n};\n\nexport default StateDropdown;\n","import Tooltip from './tooltip';\n\nimport React from 'react';\nimport * as Icon from 'react-feather';\n\nfunction StateMetaCard({\n  title,\n  statistic,\n  total,\n  formula,\n  date,\n  description,\n  className,\n}) {\n  return (\n    <div className={`meta-item ${className}`}>\n      <div className=\"meta-item-top\">\n        <h3>{title}</h3>\n        <Tooltip {...{data: formula}}>\n          <Icon.Info />\n        </Tooltip>\n      </div>\n      <h1>{statistic}</h1>\n      <h5>{date}</h5>\n      {total && <h5>{`India has ${total} CPM`}</h5>}\n      <p>{description}</p>\n    </div>\n  );\n}\n\nexport default StateMetaCard;\n","import StateMetaCard from './statemetacard';\n\nimport {\n  STATE_NAMES,\n  STATE_POPULATIONS,\n  STATE_POPULATIONS_MIL,\n} from '../constants';\nimport {\n  formatDate,\n  formatNumber,\n  formatLastUpdated,\n  getStatistic,\n  getIndiaDate,\n} from '../utils/commonfunctions';\n\nimport {format, sub} from 'date-fns';\nimport React from 'react';\nimport * as Icon from 'react-feather';\n\nfunction StateMeta({stateCode, data, timeseries}) {\n  const confirmed = getStatistic(data[stateCode], 'total', 'confirmed');\n  const active = getStatistic(data[stateCode], 'total', 'active');\n  const deceased = getStatistic(data[stateCode], 'total', 'deceased');\n  const recovered = getStatistic(data[stateCode], 'total', 'recovered');\n  const tested = getStatistic(data[stateCode], 'total', 'tested');\n\n  const totalConfirmed = getStatistic(data['TT'], 'total', 'confirmed');\n\n  const indiaDate = format(getIndiaDate(), 'yyyy-MM-dd');\n  const prevWeekDate = format(sub(getIndiaDate(), {weeks: 1}), 'yyyy-MM-dd');\n\n  const prevWeekConfirmed = getStatistic(\n    timeseries[stateCode]?.[prevWeekDate],\n    'total',\n    'confirmed'\n  );\n\n  const confirmedPerMillion = confirmed / STATE_POPULATIONS_MIL[stateCode];\n  const testPerMillion = tested / STATE_POPULATIONS_MIL[stateCode];\n  const totalConfirmedPerMillion = totalConfirmed / STATE_POPULATIONS_MIL['TT'];\n\n  const recoveryPercent = (recovered / confirmed) * 100;\n  const activePercent = (active / confirmed) * 100;\n  const deathPercent = (deceased / confirmed) * 100;\n\n  const growthRate =\n    ((confirmed - prevWeekConfirmed) / prevWeekConfirmed) * 100;\n\n  return (\n    <React.Fragment>\n      <div className=\"StateMeta population\">\n        <div className=\"meta-item population fadeInUp\">\n          <h3>Population</h3>\n          <h1>{formatNumber(STATE_POPULATIONS[stateCode])}</h1>\n        </div>\n        <div className=\"alert\">\n          <Icon.Compass />\n          <div className=\"alert-right\">\n            Based on 2019 population projection by NCP{' '}\n            <a\n              href=\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\"\n              target=\"_noblank\"\n            >\n              report\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"StateMeta\">\n        <StateMetaCard\n          className=\"confirmed\"\n          title={'Confirmed Per Million'}\n          statistic={formatNumber(confirmedPerMillion)}\n          total={formatNumber(totalConfirmedPerMillion)}\n          formula={'(confirmed / state population) * 1 Million'}\n          description={`\n            ${formatNumber(\n              Math.round(confirmedPerMillion)\n            )} out of every 1 million people in ${\n            STATE_NAMES[stateCode]\n          } have tested positive for the virus.\n            `}\n        />\n\n        <StateMetaCard\n          className=\"active\"\n          title={'Active'}\n          statistic={`${formatNumber(activePercent)}%`}\n          formula={'(active / confirmed) * 100'}\n          description={\n            activePercent > 0\n              ? `For every 100 confirmed cases, ${formatNumber(\n                  Math.round(activePercent)\n                )} are currently infected.`\n              : 'Currently, there are no active cases in this state.'\n          }\n        />\n\n        <StateMetaCard\n          className=\"recovery\"\n          title={'Recovery Rate'}\n          statistic={`${formatNumber(recoveryPercent)}%`}\n          formula={'(recovered / confirmed) * 100'}\n          description={\n            recoveryPercent > 0\n              ? `For every 100 confirmed cases, ${formatNumber(\n                  Math.round(recoveryPercent)\n                )} have recovered from the virus.`\n              : 'Unfortunately, there are no recoveries in this state yet.'\n          }\n        />\n\n        <StateMetaCard\n          className=\"mortality\"\n          title={'Mortality Rate'}\n          statistic={`${formatNumber(deathPercent)}%`}\n          formula={'(deceased / confirmed) * 100'}\n          description={\n            deathPercent > 0\n              ? `For every 100 confirmed cases, ${formatNumber(\n                  Math.round(deathPercent)\n                )} have unfortunately passed away from the virus.`\n              : 'Fortunately, no one has passed away from the virus in this state.'\n          }\n        />\n\n        <StateMetaCard\n          className=\"gr\"\n          title={'Avg. Growth Rate'}\n          statistic={\n            growthRate > 0\n              ? `${formatNumber(Math.round(growthRate / 7))}%`\n              : '-'\n          }\n          formula={\n            '(((previousDayData - sevenDayBeforeData) / sevenDayBeforeData) * 100)/7'\n          }\n          date={`${formatDate(prevWeekDate, 'dd MMM')} - ${formatDate(\n            indiaDate,\n            'dd MMM'\n          )}`}\n          description={\n            growthRate > 0\n              ? `In the last one week, the number of new infections has\n              grown by an average of ${formatNumber(\n                Math.round(growthRate / 7)\n              )}%\n              every day.`\n              : 'There has been no growth in the number of infections in last one week.'\n          }\n        />\n\n        <StateMetaCard\n          className=\"tpm\"\n          title={'Tests Per Million'}\n          statistic={`≈ ${formatNumber(Math.round(testPerMillion))}`}\n          formula={\n            '(total tests in state / total population of state) * 1 Million'\n          }\n          date={\n            tested\n              ? `As of ${formatLastUpdated(\n                  data[stateCode]?.meta?.tested?.['last_updated']\n                )} ago`\n              : ''\n          }\n          description={\n            testPerMillion > 0\n              ? `For every 1 million people in ${STATE_NAMES[stateCode]},\n                ${formatNumber(Math.round(testPerMillion))} people were tested.`\n              : 'No tests have been conducted in this state yet.'\n          }\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default StateMeta;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Smile = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 14s1.5 2 4 2 4-2 4-2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"9\",\n    y1: \"9\",\n    x2: \"9.01\",\n    y2: \"9\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"15.01\",\n    y2: \"9\"\n  }));\n});\nSmile.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSmile.displayName = 'Smile';\nexport default Smile;","import DeltaBarGraph from './deltabargraph';\nimport StateDropdown from './statedropdown';\nimport StateMeta from './statemeta';\n\nimport {NUM_BARS_STATEPAGE, STATE_NAMES} from '../constants';\nimport {\n  fetcher,\n  formatDate,\n  formatNumber,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport anime from 'animejs';\nimport React, {useState, useMemo, lazy, Suspense} from 'react';\nimport * as Icon from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport {useMeasure, useEffectOnce} from 'react-use';\nimport useSWR from 'swr';\n\nconst TimeSeriesExplorer = lazy(() =>\n  import('./timeseriesexplorer' /* webpackChunkName: \"TimeSeriesExplorer\" */)\n);\n\nconst MapExplorer = lazy(() =>\n  import('./mapexplorer' /* webpackChunkName: \"MapExplorer\" */)\n);\n\nconst Footer = lazy(() => import('./footer' /* webpackChunkName: \"Footer\" */));\n\nconst Minigraph = lazy(() =>\n  import('./minigraph' /* webpackChunkName: \"Minigraph\" */)\n);\n\nconst Level = lazy(() => import('./level' /* webpackChunkName: \"Level\" */));\n\nfunction State(props) {\n  const {t} = useTranslation();\n\n  const stateCode = useParams().stateCode.toUpperCase();\n\n  const [mapStatistic, setMapStatistic] = useState('confirmed');\n  const [mapSwitcher, {width}] = useMeasure();\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: stateCode,\n    districtName: null,\n  });\n\n  useEffectOnce(() => {\n    anime({\n      targets: '.highlight',\n      duration: 200,\n      delay: 500,\n      translateX:\n        mapStatistic === 'confirmed'\n          ? `${width * 0}px`\n          : mapStatistic === 'active'\n          ? `${width * 0.25}px`\n          : mapStatistic === 'recovered'\n          ? `${width * 0.5}px`\n          : mapStatistic === 'deceased'\n          ? `${width * 0.75}px`\n          : '0px',\n      easing: 'spring(1, 80, 90, 10)',\n      opacity: 1,\n    });\n  });\n\n  const {data: timeseries} = useSWR(\n    'https://api.covid19india.org/v3/min/timeseries.min.json',\n    fetcher,\n    {\n      suspense: true,\n      revalidateOnFocus: false,\n    }\n  );\n\n  const {data} = useSWR(\n    'https://api.covid19india.org/v3/min/data.min.json',\n    fetcher,\n    {\n      suspense: true,\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n      revalidateOnFocus: false,\n    }\n  );\n\n  const toggleShowAllDistricts = () => {\n    setShowAllDistricts(!showAllDistricts);\n  };\n\n  const handleSort = (districtNameA, districtNameB) => {\n    const districtA = data[stateCode].districts[districtNameA];\n    const districtB = data[stateCode].districts[districtNameB];\n    return (\n      getStatistic(districtB, 'total', mapStatistic) -\n      getStatistic(districtA, 'total', mapStatistic)\n    );\n  };\n\n  const gridRowCount = useMemo(() => {\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = data[stateCode]?.districts\n      ? Object.keys(data[stateCode].districts).length\n      : 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  }, [data, stateCode]);\n\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>\n          Coronavirus Outbreak in {STATE_NAMES[stateCode]} - covid19india.org\n        </title>\n        <meta\n          name=\"title\"\n          content={`Coronavirus Outbreak in ${STATE_NAMES[stateCode]}: Latest Map and Case Count`}\n        />\n      </Helmet>\n\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <div className=\"header\">\n            <div className=\"header-left\">\n              <StateDropdown {...{stateCode}} />\n              <h5>{`Last Updated on ${formatDate(\n                data[stateCode].meta.last_updated,\n                'dd MMM, p'\n              )} IST`}</h5>\n            </div>\n\n            <div className=\"header-right\">\n              <h5>{t('Tested')}</h5>\n              {data[stateCode]?.total?.tested && (\n                <React.Fragment>\n                  <h2>{formatNumber(data[stateCode].total.tested)}</h2>\n                  <h5 className=\"timestamp\">\n                    {`As of ${formatDate(\n                      data[stateCode].meta.tested.last_updated,\n                      'dd MMMM'\n                    )}`}\n                  </h5>\n                  <h5>\n                    {'per '}\n                    <a\n                      href={data[stateCode].meta.tested.source}\n                      target=\"_noblank\"\n                    >\n                      source\n                    </a>\n                  </h5>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n\n          <div className=\"map-switcher\" ref={mapSwitcher}>\n            <div\n              className={`highlight ${mapStatistic}`}\n              style={{\n                transform: `translateX(${width * 0}px)`,\n                opacity: 0,\n              }}\n            ></div>\n            <div\n              className=\"clickable\"\n              onClick={() => {\n                setMapStatistic('confirmed');\n                anime({\n                  targets: '.highlight',\n                  translateX: `${width * 0}px`,\n                  easing: 'spring(1, 80, 90, 10)',\n                });\n              }}\n            ></div>\n            <div\n              className=\"clickable\"\n              onClick={() => {\n                setMapStatistic('active');\n                anime({\n                  targets: '.highlight',\n                  translateX: `${width * 0.25}px`,\n                  easing: 'spring(1, 80, 90, 10)',\n                });\n              }}\n            ></div>\n            <div\n              className=\"clickable\"\n              onClick={() => {\n                setMapStatistic('recovered');\n                anime({\n                  targets: '.highlight',\n                  translateX: `${width * 0.5}px`,\n                  easing: 'spring(1, 80, 90, 10)',\n                });\n              }}\n            ></div>\n            <div\n              className=\"clickable\"\n              onClick={() => {\n                setMapStatistic('deceased');\n                anime({\n                  targets: '.highlight',\n                  translateX: `${width * 0.75}px`,\n                  easing: 'spring(1, 80, 90, 10)',\n                });\n              }}\n            ></div>\n          </div>\n\n          <Level data={data[stateCode]} />\n          <Minigraph timeseries={timeseries[stateCode]} />\n\n          <Suspense fallback={<div />}>\n            <MapExplorer\n              isCountryLoaded={false}\n              {...{\n                stateCode,\n                data,\n                regionHighlighted,\n                setRegionHighlighted,\n                mapStatistic,\n                setMapStatistic,\n              }}\n            />\n          </Suspense>\n\n          <StateMeta\n            {...{\n              stateCode,\n              data,\n              timeseries,\n            }}\n          />\n        </div>\n\n        <div className=\"state-right\">\n          <React.Fragment>\n            <div\n              className=\"district-bar\"\n              style={!showAllDistricts ? {display: 'flex'} : {}}\n            >\n              <div className=\"district-bar-left fadeInUp\">\n                <h2 className={mapStatistic}>Top districts</h2>\n                <div\n                  className={`districts ${showAllDistricts ? 'is-grid' : ''}`}\n                  style={\n                    showAllDistricts\n                      ? {gridTemplateRows: `repeat(${gridRowCount}, 2rem)`}\n                      : {}\n                  }\n                >\n                  {Object.keys(data[stateCode]?.districts || {})\n                    .filter((districtName) => districtName !== 'Unknown')\n                    .sort((a, b) => handleSort(a, b))\n                    .slice(0, showAllDistricts ? undefined : 5)\n                    .map((districtName) => {\n                      const total = getStatistic(\n                        data[stateCode].districts[districtName],\n                        'total',\n                        mapStatistic\n                      );\n                      const delta = getStatistic(\n                        data[stateCode].districts[districtName],\n                        'delta',\n                        mapStatistic\n                      );\n                      return (\n                        <div key={districtName} className=\"district\">\n                          <h2>{formatNumber(total)}</h2>\n                          <h5>{t(districtName)}</h5>\n                          {mapStatistic !== 'active' && (\n                            <div className=\"delta\">\n                              <h6 className={mapStatistic}>\n                                {delta > 0\n                                  ? '\\u2191' + formatNumber(delta)\n                                  : ''}\n                              </h6>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                </div>\n\n                {Object.keys(data[stateCode]?.districts || {}).length > 5 && (\n                  <button className=\"button\" onClick={toggleShowAllDistricts}>\n                    <span>{showAllDistricts ? `View less` : `View all`}</span>\n                  </button>\n                )}\n              </div>\n\n              <div className=\"district-bar-right\">\n                {(mapStatistic === 'confirmed' ||\n                  mapStatistic === 'deceased') && (\n                  <div className=\"happy-sign\">\n                    {Object.keys(timeseries[stateCode] || {})\n                      .slice(-NUM_BARS_STATEPAGE)\n                      .every(\n                        (date) =>\n                          getStatistic(\n                            timeseries[stateCode][date],\n                            'delta',\n                            mapStatistic\n                          ) === 0\n                      ) && (\n                      <div\n                        className={`alert ${\n                          mapStatistic === 'confirmed' ? 'is-green' : ''\n                        }`}\n                      >\n                        <Icon.Smile />\n                        <div className=\"alert-right\">\n                          No new {mapStatistic} cases in the past five days\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n                <DeltaBarGraph\n                  timeseries={timeseries[stateCode]}\n                  statistic={mapStatistic}\n                />\n              </div>\n            </div>\n\n            <Suspense fallback={<div />}>\n              <TimeSeriesExplorer\n                timeseries={timeseries[stateCode]}\n                {...{regionHighlighted, setRegionHighlighted}}\n              />\n            </Suspense>\n          </React.Fragment>\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(State);\n"],"sourceRoot":""}